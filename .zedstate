{"split":"2-0","session.current":["/q_learning.py","/experience_replay.py"],"session.open":{"/experience_replay.py":{"scrollTop":3891,"scrollLeft":0,"selection":{"start":{"row":243,"column":11},"end":{"row":243,"column":11}},"lastUse":1546038372409,"undo":[[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":199,"column":9},"end":{"row":199,"column":10}},"text":"8"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":28,"column":17},"end":{"row":29,"column":0}},"text":"\n"},{"action":"insertText","range":{"start":{"row":29,"column":0},"end":{"row":29,"column":8}},"text":"        "}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":29,"column":8},"end":{"row":29,"column":51}},"text":"j.wait_time = self.env.now - j.arrival_time"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":187,"column":9},"end":{"row":187,"column":10}},"text":" "}]},{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":187,"column":8},"end":{"row":187,"column":9}},"text":"#"}]},{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":187,"column":7},"end":{"row":187,"column":8}},"text":" "}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":236,"column":7},"end":{"row":236,"column":10}},"text":"200"},{"action":"insertText","range":{"start":{"row":236,"column":7},"end":{"row":236,"column":8}},"text":"3"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":236,"column":8},"end":{"row":236,"column":9}},"text":"7"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":236,"column":9},"end":{"row":236,"column":10}},"text":"0"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":237,"column":7},"end":{"row":237,"column":10}},"text":"210"},{"action":"insertText","range":{"start":{"row":237,"column":7},"end":{"row":237,"column":8}},"text":"N"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":237,"column":8},"end":{"row":237,"column":9}},"text":"o"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":237,"column":9},"end":{"row":237,"column":10}},"text":"n"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":237,"column":10},"end":{"row":237,"column":11}},"text":"e"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":235,"column":7},"end":{"row":235,"column":10}},"text":"140"},{"action":"insertText","range":{"start":{"row":235,"column":7},"end":{"row":235,"column":8}},"text":"N"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":235,"column":8},"end":{"row":235,"column":9}},"text":"o"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":235,"column":9},"end":{"row":235,"column":10}},"text":"n"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":235,"column":10},"end":{"row":235,"column":11}},"text":"e"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":241,"column":2},"end":{"row":241,"column":4}},"text":"# "}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":243,"column":2},"end":{"row":243,"column":4}},"text":"# "}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":241,"column":2},"end":{"row":241,"column":4}},"text":"# "}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":243,"column":2},"end":{"row":243,"column":4}},"text":"# "}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":187,"column":7},"end":{"row":187,"column":8}},"text":" "}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":187,"column":8},"end":{"row":187,"column":9}},"text":"#"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":187,"column":9},"end":{"row":187,"column":10}},"text":" "}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":187,"column":9},"end":{"row":187,"column":10}},"text":" "}]},{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":187,"column":8},"end":{"row":187,"column":9}},"text":"#"}]},{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":187,"column":7},"end":{"row":187,"column":8}},"text":" "}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":187,"column":7},"end":{"row":187,"column":8}},"text":" "}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":187,"column":8},"end":{"row":187,"column":9}},"text":"#"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":187,"column":9},"end":{"row":187,"column":10}},"text":" "}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":120,"column":45},"end":{"row":120,"column":46}},"text":" "}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":120,"column":46},"end":{"row":120,"column":47}},"text":"#"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":120,"column":47},"end":{"row":120,"column":48}},"text":" "}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":120,"column":48},"end":{"row":120,"column":52}},"text":"% 10"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":120,"column":38},"end":{"row":120,"column":39}},"text":"0"}]},{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":120,"column":37},"end":{"row":120,"column":38}},"text":"1"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":120,"column":37},"end":{"row":120,"column":38}},"text":"5"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":236,"column":8},"end":{"row":236,"column":9}},"text":"7"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":236,"column":8},"end":{"row":236,"column":9}},"text":"1"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":241,"column":2},"end":{"row":241,"column":4}},"text":"# "}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":243,"column":2},"end":{"row":243,"column":4}},"text":"# "}]}]],"redo":[]},"/modeling.py":{"scrollTop":6704,"scrollLeft":0,"selection":{"start":{"row":366,"column":42},"end":{"row":366,"column":42}},"lastUse":1546037285411,"undo":[[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":358,"column":6},"end":{"row":358,"column":8}},"text":"# "}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":369,"column":2},"end":{"row":369,"column":4}},"text":"# "}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":372,"column":2},"end":{"row":372,"column":4}},"text":"# "}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":387,"column":2},"end":{"row":387,"column":4}},"text":"# "}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":287,"column":2},"end":{"row":287,"column":4}},"text":"# "}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":372,"column":81},"end":{"row":373,"column":0}},"text":"\n"},{"action":"insertText","range":{"start":{"row":373,"column":0},"end":{"row":373,"column":2}},"text":"  "}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":373,"column":2},"end":{"row":373,"column":79}},"text":"log(INFO, \"d= {}, ro= {}, ES= {}, EW= {}, ET= {}\".format(d, ro, ES, EW, ET) )"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":373,"column":26},"end":{"row":373,"column":50}},"text":", ES= {}, EW= {}, ET= {}"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":373,"column":40},"end":{"row":373,"column":52}},"text":", ES, EW, ET"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":388,"column":81},"end":{"row":389,"column":0}},"text":"\n"},{"action":"insertText","range":{"start":{"row":389,"column":0},"end":{"row":389,"column":2}},"text":"  "}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":389,"column":2},"end":{"row":389,"column":79}},"text":"log(INFO, \"d= {}, ro= {}, ES= {}, EW= {}, ET= {}\".format(d, ro, ES, EW, ET) )"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":389,"column":26},"end":{"row":389,"column":50}},"text":", ES= {}, EW= {}, ET= {}"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":389,"column":50},"end":{"row":389,"column":52}},"text":"ET"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":389,"column":49},"end":{"row":389,"column":50}},"text":" "}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":389,"column":48},"end":{"row":389,"column":49}},"text":","}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":389,"column":46},"end":{"row":389,"column":48}},"text":"EW"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":389,"column":45},"end":{"row":389,"column":46}},"text":" "}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":389,"column":44},"end":{"row":389,"column":45}},"text":","}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":389,"column":42},"end":{"row":389,"column":44}},"text":"ES"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":389,"column":41},"end":{"row":389,"column":42}},"text":" "}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":389,"column":40},"end":{"row":389,"column":41}},"text":","}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":296,"column":0},"end":{"row":297,"column":0}},"text":"\n"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":297,"column":0},"end":{"row":298,"column":0}},"text":"\n"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":297,"column":0},"end":{"row":297,"column":38}},"text":"# def ar_for_ro(ro, N, Cap, k, D, Sl):"},{"action":"insertText","range":{"start":{"row":297,"column":38},"end":{"row":298,"column":0}},"text":"\n"},{"action":"insertLines","range":{"start":{"row":298,"column":0},"end":{"row":301,"column":0}},"lines":["#   return ro*N*Cap/k.mean()/D.mean()/Sl.mean()","","def ar_for_ro(ro, N, Cap, k, R, L, Sl):"]},{"action":"insertText","range":{"start":{"row":301,"column":0},"end":{"row":301,"column":54}},"text":"  return ro*N*Cap/k.mean()/R.mean()/L.mean()/Sl.mean()"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":60,"column":25},"end":{"row":60,"column":26}},"text":"E"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":60,"column":25},"end":{"row":60,"column":26}},"text":"E"}]}]],"redo":[]},"/q_learning.py":{"scrollTop":5560,"scrollLeft":0,"selection":{"start":{"row":312,"column":32},"end":{"row":312,"column":32}},"lastUse":1546037050351,"undo":[[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":81,"column":17},"end":{"row":81,"column":84}},"text":"int(math.floor(s[0]/self.jtotaldemand_step)*self.jtotaldemand_step)"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":81,"column":34},"end":{"row":81,"column":35}},"text":"0"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":81,"column":34},"end":{"row":81,"column":35}},"text":"1"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":81,"column":84},"end":{"row":82,"column":0}},"text":"\n"},{"action":"insertText","range":{"start":{"row":82,"column":0},"end":{"row":82,"column":6}},"text":"      "}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":82,"column":6},"end":{"row":82,"column":77}},"text":"jwaittime = int(math.floor(s[1]/self.waittime_step)*self.waittime_step)"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":82,"column":35},"end":{"row":82,"column":36}},"text":"1"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":82,"column":35},"end":{"row":82,"column":36}},"text":"2"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":82,"column":77},"end":{"row":83,"column":0}},"text":"\n"},{"action":"insertText","range":{"start":{"row":83,"column":0},"end":{"row":83,"column":6}},"text":"      "}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":83,"column":6},"end":{"row":83,"column":38}},"text":"return (jtotaldemand, jwaittime)"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":83,"column":14},"end":{"row":83,"column":26}},"text":"jtotaldemand"},{"action":"insertText","range":{"start":{"row":83,"column":14},"end":{"row":83,"column":15}},"text":"k"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":82,"column":6},"end":{"row":82,"column":7}},"text":"j"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":82,"column":10},"end":{"row":82,"column":11}},"text":"_"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":83,"column":22},"end":{"row":83,"column":23}},"text":"_"},{"action":"insertText","range":{"start":{"row":75,"column":33},"end":{"row":75,"column":34}},"text":"_"},{"action":"insertText","range":{"start":{"row":74,"column":11},"end":{"row":74,"column":12}},"text":"_"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":83,"column":17},"end":{"row":83,"column":18}},"text":"j"},{"action":"removeText","range":{"start":{"row":75,"column":28},"end":{"row":75,"column":29}},"text":"j"},{"action":"removeText","range":{"start":{"row":74,"column":6},"end":{"row":74,"column":7}},"text":"j"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":83,"column":17},"end":{"row":83,"column":18}},"text":"l"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":83,"column":18},"end":{"row":83,"column":19}},"text":"i"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":83,"column":19},"end":{"row":83,"column":20}},"text":"f"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":83,"column":20},"end":{"row":83,"column":21}},"text":"e"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":83,"column":21},"end":{"row":83,"column":22}},"text":"t"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":83,"column":22},"end":{"row":83,"column":23}},"text":"i"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":83,"column":23},"end":{"row":83,"column":24}},"text":"m"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":83,"column":24},"end":{"row":83,"column":25}},"text":"e"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":83,"column":25},"end":{"row":83,"column":26}},"text":" "}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":83,"column":25},"end":{"row":83,"column":26}},"text":" "}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":83,"column":25},"end":{"row":83,"column":26}},"text":","}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":83,"column":26},"end":{"row":83,"column":27}},"text":" "}]}],[{"group":"doc","deltas":[{"action":"removeLines","range":{"start":{"row":84,"column":0},"end":{"row":85,"column":0}},"nl":"\n","lines":["      "]}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":479,"column":19},"end":{"row":479,"column":20}},"text":"3"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":479,"column":19},"end":{"row":479,"column":20}},"text":"1"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":479,"column":20},"end":{"row":479,"column":21}},"text":"0"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":294,"column":37},"end":{"row":294,"column":38}},"text":"2"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":294,"column":38},"end":{"row":294,"column":39}},"text":"0"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":294,"column":39},"end":{"row":294,"column":40}},"text":" "}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":294,"column":40},"end":{"row":294,"column":41}},"text":"#"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":294,"column":41},"end":{"row":294,"column":42}},"text":" "}]}]],"redo":[]},"/rlearning.py":{"scrollTop":367.5,"scrollLeft":0,"selection":{"start":{"row":36,"column":61},"end":{"row":36,"column":61}},"lastUse":1546030179180,"undo":[[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":42,"column":38},"end":{"row":42,"column":39}},"text":"d"}]},{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":42,"column":37},"end":{"row":42,"column":38}},"text":"e"}]},{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":42,"column":36},"end":{"row":42,"column":37}},"text":"q"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":42,"column":36},"end":{"row":42,"column":37}},"text":"e"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":42,"column":37},"end":{"row":42,"column":38}},"text":"q"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":42,"column":38},"end":{"row":42,"column":39}},"text":"e"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":42,"column":39},"end":{"row":42,"column":40}},"text":"d"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":42,"column":41},"end":{"row":42,"column":42}},"text":"N"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":42,"column":42},"end":{"row":42,"column":43}},"text":"o"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":42,"column":43},"end":{"row":42,"column":44}},"text":"n"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":42,"column":44},"end":{"row":42,"column":45}},"text":"e"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":42,"column":45},"end":{"row":42,"column":46}},"text":","}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":42,"column":46},"end":{"row":42,"column":47}},"text":" "}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":53,"column":18},"end":{"row":53,"column":19}},"text":"."}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":53,"column":13},"end":{"row":53,"column":14}},"text":"."}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":53,"column":25},"end":{"row":53,"column":26}},"text":"."}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":53,"column":36},"end":{"row":53,"column":37}},"text":"."}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":36,"column":17},"end":{"row":36,"column":26}},"text":"j.reqed, "}]}],[{"group":"doc","deltas":[{"action":"removeLines","range":{"start":{"row":36,"column":0},"end":{"row":37,"column":0}},"nl":"\n","lines":["    return [j.k, j.lifetime, j.wait_time]"]},{"action":"insertLines","range":{"start":{"row":35,"column":0},"end":{"row":36,"column":0}},"lines":["    return [j.k, j.lifetime, j.wait_time]"]}]}],[{"group":"doc","deltas":[{"action":"removeLines","range":{"start":{"row":35,"column":0},"end":{"row":36,"column":0}},"nl":"\n","lines":["    return [j.k, j.lifetime, j.wait_time]"]},{"action":"insertLines","range":{"start":{"row":34,"column":0},"end":{"row":35,"column":0}},"lines":["    return [j.k, j.lifetime, j.wait_time]"]}]}],[{"group":"doc","deltas":[{"action":"removeLines","range":{"start":{"row":34,"column":0},"end":{"row":35,"column":0}},"nl":"\n","lines":["    return [j.k, j.lifetime, j.wait_time]"]},{"action":"insertLines","range":{"start":{"row":33,"column":0},"end":{"row":34,"column":0}},"lines":["    return [j.k, j.lifetime, j.wait_time]"]}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":36,"column":4},"end":{"row":36,"column":6}},"text":"# "}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":31,"column":4},"end":{"row":31,"column":6}},"text":"# "}]}],[{"group":"doc","deltas":[{"action":"removeLines","range":{"start":{"row":53,"column":0},"end":{"row":54,"column":0}},"nl":"\n","lines":["    return [jk, jreqed, jlifetime, jwait_time]"]},{"action":"insertLines","range":{"start":{"row":52,"column":0},"end":{"row":53,"column":0}},"lines":["    return [jk, jreqed, jlifetime, jwait_time]"]}]}],[{"group":"doc","deltas":[{"action":"removeLines","range":{"start":{"row":52,"column":0},"end":{"row":53,"column":0}},"nl":"\n","lines":["    return [jk, jreqed, jlifetime, jwait_time]"]},{"action":"insertLines","range":{"start":{"row":51,"column":0},"end":{"row":52,"column":0}},"lines":["    return [jk, jreqed, jlifetime, jwait_time]"]}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":53,"column":4},"end":{"row":53,"column":6}},"text":"# "}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":50,"column":4},"end":{"row":50,"column":6}},"text":"# "}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":51,"column":16},"end":{"row":51,"column":24}},"text":"jreqed, "}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":42,"column":34},"end":{"row":42,"column":47}},"text":"jreqed=None, "}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":9,"column":12},"end":{"row":9,"column":13}},"text":"3"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":9,"column":13},"end":{"row":9,"column":14}},"text":" "}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":9,"column":14},"end":{"row":9,"column":15}},"text":"#"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":9,"column":15},"end":{"row":9,"column":16}},"text":" "}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":9,"column":17},"end":{"row":9,"column":21}},"text":" # 3"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":42,"column":23},"end":{"row":42,"column":24}},"text":"="}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":42,"column":24},"end":{"row":42,"column":25}},"text":"N"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":42,"column":25},"end":{"row":42,"column":26}},"text":"o"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":42,"column":26},"end":{"row":42,"column":27}},"text":"n"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":42,"column":27},"end":{"row":42,"column":28}},"text":"e"}]}]],"redo":[]},"/scheduler.py":{"scrollTop":1920.5,"scrollLeft":0,"selection":{"start":{"row":124,"column":29},"end":{"row":124,"column":29}},"lastUse":1546030149094,"undo":[[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":132,"column":19},"end":{"row":132,"column":20}},"text":"j"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":132,"column":72},"end":{"row":132,"column":73}},"text":"j"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":131,"column":62},"end":{"row":131,"column":63}},"text":"j"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":150,"column":64},"end":{"row":151,"column":0}},"text":"\n"},{"action":"insertText","range":{"start":{"row":151,"column":0},"end":{"row":151,"column":4}},"text":"    "}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":151,"column":4},"end":{"row":151,"column":5}},"text":"l"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":151,"column":5},"end":{"row":151,"column":6}},"text":"o"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":151,"column":6},"end":{"row":151,"column":7}},"text":"g"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":151,"column":7},"end":{"row":151,"column":8}},"text":"("}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":151,"column":8},"end":{"row":151,"column":9}},"text":")"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":151,"column":8},"end":{"row":151,"column":9}},"text":"I"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":151,"column":9},"end":{"row":151,"column":10}},"text":"N"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":151,"column":10},"end":{"row":151,"column":11}},"text":"F"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":151,"column":11},"end":{"row":151,"column":12}},"text":"o"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":151,"column":12},"end":{"row":151,"column":13}},"text":","}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":151,"column":13},"end":{"row":151,"column":14}},"text":" "}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":151,"column":13},"end":{"row":151,"column":14}},"text":" "}]},{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":151,"column":12},"end":{"row":151,"column":13}},"text":","}]},{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":151,"column":11},"end":{"row":151,"column":12}},"text":"o"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":151,"column":11},"end":{"row":151,"column":12}},"text":"O"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":151,"column":12},"end":{"row":151,"column":13}},"text":","}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":151,"column":13},"end":{"row":151,"column":14}},"text":" "}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":151,"column":14},"end":{"row":151,"column":15}},"text":"\""}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":151,"column":15},"end":{"row":151,"column":16}},"text":"\""}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":151,"column":15},"end":{"row":151,"column":16}},"text":"s"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":151,"column":16},"end":{"row":151,"column":17}},"text":"="}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":151,"column":17},"end":{"row":151,"column":18}},"text":" "}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":151,"column":18},"end":{"row":151,"column":19}},"text":"{"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":151,"column":19},"end":{"row":151,"column":20}},"text":"}"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":151,"column":21},"end":{"row":151,"column":22}},"text":"."}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":151,"column":22},"end":{"row":151,"column":23}},"text":"f"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":151,"column":23},"end":{"row":151,"column":24}},"text":"o"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":151,"column":24},"end":{"row":151,"column":25}},"text":"r"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":151,"column":25},"end":{"row":151,"column":26}},"text":"m"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":151,"column":26},"end":{"row":151,"column":27}},"text":"a"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":151,"column":27},"end":{"row":151,"column":28}},"text":"t"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":151,"column":28},"end":{"row":151,"column":29}},"text":"("}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":151,"column":29},"end":{"row":151,"column":30}},"text":")"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":151,"column":30},"end":{"row":151,"column":31}},"text":" "}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":151,"column":29},"end":{"row":151,"column":30}},"text":"s"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":151,"column":33},"end":{"row":152,"column":0}},"text":"\n"},{"action":"insertText","range":{"start":{"row":152,"column":0},"end":{"row":152,"column":4}},"text":"    "}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":151,"column":4},"end":{"row":151,"column":6}},"text":"# "}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":131,"column":49},"end":{"row":131,"column":51}},"text":"jk"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":131,"column":51},"end":{"row":131,"column":52}},"text":"="}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":131,"column":55},"end":{"row":131,"column":58}},"text":"jk="}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":131,"column":56},"end":{"row":131,"column":57}},"text":"k"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":131,"column":56},"end":{"row":131,"column":57}},"text":"l"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":131,"column":57},"end":{"row":131,"column":58}},"text":"i"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":131,"column":58},"end":{"row":131,"column":59}},"text":"f"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":131,"column":59},"end":{"row":131,"column":60}},"text":"e"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":131,"column":60},"end":{"row":131,"column":61}},"text":"t"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":131,"column":61},"end":{"row":131,"column":62}},"text":"i"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":131,"column":62},"end":{"row":131,"column":63}},"text":"m"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":131,"column":63},"end":{"row":131,"column":64}},"text":"e"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":131,"column":75},"end":{"row":131,"column":84}},"text":"wait_time"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":131,"column":84},"end":{"row":131,"column":85}},"text":"="}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":131,"column":75},"end":{"row":131,"column":76}},"text":"j"}]}]],"redo":[]},"/sim_objs_lessreal.py":{"scrollTop":0,"scrollLeft":0,"selection":{"start":{"row":31,"column":4},"end":{"row":31,"column":4}},"lastUse":1546029176873,"undo":[[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":30,"column":13},"end":{"row":30,"column":14}},"text":"_"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":30,"column":14},"end":{"row":30,"column":15}},"text":"t"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":30,"column":15},"end":{"row":30,"column":16}},"text":"i"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":30,"column":16},"end":{"row":30,"column":17}},"text":"m"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":30,"column":17},"end":{"row":30,"column":18}},"text":"e"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":30,"column":18},"end":{"row":30,"column":19}},"text":" "}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":30,"column":19},"end":{"row":30,"column":20}},"text":"="}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":30,"column":20},"end":{"row":30,"column":21}},"text":" "}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":30,"column":21},"end":{"row":30,"column":22}},"text":"N"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":30,"column":22},"end":{"row":30,"column":23}},"text":"o"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":30,"column":23},"end":{"row":30,"column":24}},"text":"n"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":30,"column":24},"end":{"row":30,"column":25}},"text":"e"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":225,"column":17},"end":{"row":226,"column":0}},"text":"\n"},{"action":"insertText","range":{"start":{"row":226,"column":0},"end":{"row":226,"column":8}},"text":"        "}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":226,"column":8},"end":{"row":226,"column":22}},"text":"self.wait_time"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":226,"column":8},"end":{"row":226,"column":22}},"text":"self.wait_time"},{"action":"insertText","range":{"start":{"row":226,"column":8},"end":{"row":226,"column":9}},"text":"j"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":226,"column":9},"end":{"row":226,"column":10}},"text":"."}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":226,"column":10},"end":{"row":226,"column":11}},"text":"w"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":226,"column":11},"end":{"row":226,"column":12}},"text":"a"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":226,"column":12},"end":{"row":226,"column":13}},"text":"i"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":226,"column":13},"end":{"row":226,"column":14}},"text":"t"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":226,"column":14},"end":{"row":226,"column":15}},"text":"_"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":226,"column":15},"end":{"row":226,"column":16}},"text":"t"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":226,"column":16},"end":{"row":226,"column":17}},"text":"i"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":226,"column":17},"end":{"row":226,"column":18}},"text":"m"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":226,"column":18},"end":{"row":226,"column":19}},"text":"e"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":226,"column":19},"end":{"row":226,"column":20}},"text":" "}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":226,"column":20},"end":{"row":226,"column":21}},"text":"="}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":226,"column":21},"end":{"row":226,"column":22}},"text":" "}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":226,"column":22},"end":{"row":226,"column":51}},"text":"self.env.now - j.arrival_time"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":226,"column":51},"end":{"row":227,"column":0}},"text":"\n"},{"action":"insertText","range":{"start":{"row":227,"column":0},"end":{"row":227,"column":8}},"text":"        "}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":227,"column":8},"end":{"row":227,"column":9}},"text":"l"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":227,"column":9},"end":{"row":227,"column":10}},"text":"o"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":227,"column":10},"end":{"row":227,"column":11}},"text":"g"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":227,"column":11},"end":{"row":227,"column":12}},"text":"("}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":227,"column":12},"end":{"row":227,"column":13}},"text":")"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":227,"column":12},"end":{"row":227,"column":13}},"text":"I"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":227,"column":13},"end":{"row":227,"column":14}},"text":"N"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":227,"column":14},"end":{"row":227,"column":15}},"text":"F"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":227,"column":15},"end":{"row":227,"column":16}},"text":"O"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":227,"column":16},"end":{"row":227,"column":17}},"text":","}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":227,"column":17},"end":{"row":227,"column":18}},"text":" "}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":227,"column":18},"end":{"row":227,"column":19}},"text":"\""}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":227,"column":19},"end":{"row":227,"column":20}},"text":"\""}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":227,"column":19},"end":{"row":227,"column":30}},"text":"j.wait_time"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":227,"column":30},"end":{"row":227,"column":31}},"text":"="}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":227,"column":31},"end":{"row":227,"column":32}},"text":" "}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":227,"column":32},"end":{"row":227,"column":33}},"text":"{"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":227,"column":33},"end":{"row":227,"column":34}},"text":"}"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":227,"column":35},"end":{"row":227,"column":36}},"text":"."}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":227,"column":36},"end":{"row":227,"column":37}},"text":"f"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":227,"column":37},"end":{"row":227,"column":38}},"text":"o"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":227,"column":38},"end":{"row":227,"column":39}},"text":"r"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":227,"column":39},"end":{"row":227,"column":40}},"text":"m"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":227,"column":40},"end":{"row":227,"column":41}},"text":"a"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":227,"column":41},"end":{"row":227,"column":42}},"text":"t"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":227,"column":42},"end":{"row":227,"column":43}},"text":"("}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":227,"column":43},"end":{"row":227,"column":44}},"text":")"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":227,"column":44},"end":{"row":227,"column":45}},"text":" "}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":227,"column":43},"end":{"row":227,"column":54}},"text":"j.wait_time"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":227,"column":8},"end":{"row":227,"column":10}},"text":"# "}]}],[{"group":"doc","deltas":[{"action":"removeLines","range":{"start":{"row":227,"column":0},"end":{"row":228,"column":0}},"nl":"\n","lines":["        # log(INFO, \"j.wait_time= {}\".format(j.wait_time) )"]}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":226,"column":8},"end":{"row":226,"column":51}},"text":"j.wait_time = self.env.now - j.arrival_time"}]}],[{"group":"doc","deltas":[{"action":"removeLines","range":{"start":{"row":226,"column":0},"end":{"row":227,"column":0}},"nl":"\n","lines":["        "]}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":225,"column":17},"end":{"row":226,"column":0}},"text":"\n"},{"action":"insertText","range":{"start":{"row":226,"column":0},"end":{"row":226,"column":8}},"text":"        "}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":226,"column":8},"end":{"row":226,"column":51}},"text":"j.wait_time = self.env.now - j.arrival_time"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":226,"column":51},"end":{"row":227,"column":0}},"text":"\n"},{"action":"insertText","range":{"start":{"row":227,"column":0},"end":{"row":227,"column":8}},"text":"        "}]}]],"redo":[]},"/rvs.py":{"scrollTop":3855.5,"scrollLeft":0,"selection":{"start":{"row":206,"column":0},"end":{"row":206,"column":0}},"lastUse":1546027653820,"undo":[[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":565,"column":16},"end":{"row":565,"column":17}},"text":"1"}]},{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":565,"column":15},"end":{"row":565,"column":16}},"text":"="}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":217,"column":8},"end":{"row":217,"column":9}},"text":"_"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":218,"column":21},"end":{"row":218,"column":22}},"text":"$"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":218,"column":30},"end":{"row":218,"column":31}},"text":"$"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":218,"column":33},"end":{"row":218,"column":34}},"text":"$"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":218,"column":42},"end":{"row":218,"column":43}},"text":"$"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":218,"column":45},"end":{"row":218,"column":46}},"text":"$"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":218,"column":56},"end":{"row":218,"column":57}},"text":"$"}]}]],"redo":[]},"/math_utils.py":{"scrollTop":891,"scrollLeft":0,"selection":{"start":{"row":69,"column":12},"end":{"row":69,"column":12}},"lastUse":1545949140778,"undo":[],"redo":[]},"/drl_plots.py":{"scrollTop":600,"scrollLeft":0,"selection":{"start":{"row":49,"column":10},"end":{"row":49,"column":10}},"lastUse":1545947831693,"undo":[[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":54,"column":51},"end":{"row":54,"column":53}},"text":"ro"},{"action":"insertText","range":{"start":{"row":54,"column":51},"end":{"row":54,"column":56}},"text":"Eload"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":55,"column":22},"end":{"row":55,"column":24}},"text":"ro"},{"action":"insertText","range":{"start":{"row":55,"column":22},"end":{"row":55,"column":23}},"text":"E"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":55,"column":23},"end":{"row":55,"column":24}},"text":"l"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":55,"column":24},"end":{"row":55,"column":25}},"text":"o"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":55,"column":25},"end":{"row":55,"column":26}},"text":"a"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":55,"column":26},"end":{"row":55,"column":27}},"text":"d"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":47,"column":9},"end":{"row":47,"column":10}},"text":"6"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":47,"column":9},"end":{"row":47,"column":10}},"text":"9"}]}],[{"group":"doc","deltas":[{"action":"removeLines","range":{"start":{"row":48,"column":0},"end":{"row":49,"column":0}},"nl":"\n","lines":["  qlen = 0"]}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":53,"column":63},"end":{"row":53,"column":64}},"text":"="}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":53,"column":64},"end":{"row":53,"column":65}},"text":"0"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":53,"column":64},"end":{"row":53,"column":65}},"text":"0"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":53,"column":64},"end":{"row":53,"column":65}},"text":"N"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":53,"column":65},"end":{"row":53,"column":66}},"text":"o"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":53,"column":66},"end":{"row":53,"column":67}},"text":"n"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":53,"column":67},"end":{"row":53,"column":68}},"text":"e"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":64,"column":56},"end":{"row":64,"column":60}},"text":"qlen"}]},{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":64,"column":55},"end":{"row":64,"column":56}},"text":" "}]},{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":64,"column":54},"end":{"row":64,"column":55}},"text":","}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":64,"column":25},"end":{"row":64,"column":43}},"text":", Queue length= {}"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":53,"column":57},"end":{"row":53,"column":68}},"text":", qlen=None"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":53,"column":57},"end":{"row":53,"column":58}},"text":" "}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":53,"column":57},"end":{"row":53,"column":58}},"text":" "}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":49,"column":10},"end":{"row":50,"column":0}},"text":"\n"},{"action":"insertText","range":{"start":{"row":50,"column":0},"end":{"row":50,"column":4}},"text":"    "},{"action":"removeText","range":{"start":{"row":50,"column":2},"end":{"row":50,"column":4}},"text":"  "}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":50,"column":2},"end":{"row":50,"column":8}},"text":"scher."}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":50,"column":8},"end":{"row":50,"column":9}},"text":"s"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":50,"column":9},"end":{"row":50,"column":10}},"text":"u"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":50,"column":10},"end":{"row":50,"column":11}},"text":"m"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":50,"column":11},"end":{"row":50,"column":12}},"text":"m"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":50,"column":12},"end":{"row":50,"column":13}},"text":"a"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":50,"column":13},"end":{"row":50,"column":14}},"text":"r"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":50,"column":14},"end":{"row":50,"column":15}},"text":"i"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":50,"column":15},"end":{"row":50,"column":16}},"text":"z"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":50,"column":16},"end":{"row":50,"column":17}},"text":"e"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":50,"column":17},"end":{"row":50,"column":18}},"text":"("}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":50,"column":18},"end":{"row":50,"column":19}},"text":")"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":50,"column":19},"end":{"row":51,"column":0}},"text":"\n"},{"action":"insertText","range":{"start":{"row":51,"column":0},"end":{"row":51,"column":2}},"text":"  "}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":47,"column":9},"end":{"row":47,"column":10}},"text":"9"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":47,"column":9},"end":{"row":47,"column":10}},"text":"8"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":11,"column":4},"end":{"row":11,"column":5}},"text":"4"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":11,"column":4},"end":{"row":11,"column":5}},"text":"1"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":11,"column":5},"end":{"row":11,"column":6}},"text":"0"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":47,"column":9},"end":{"row":47,"column":10}},"text":"8"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":47,"column":9},"end":{"row":47,"column":10}},"text":"7"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":46,"column":31},"end":{"row":47,"column":0}},"text":"\n"},{"action":"insertText","range":{"start":{"row":47,"column":0},"end":{"row":47,"column":2}},"text":"  "}]}],[{"group":"doc","deltas":[{"action":"removeLines","range":{"start":{"row":47,"column":0},"end":{"row":48,"column":0}},"nl":"\n","lines":["  "]}]}]],"redo":[]},"/model_checking.py":{"scrollTop":4199,"scrollLeft":0,"selection":{"start":{"row":237,"column":20},"end":{"row":237,"column":20}},"lastUse":1545933608244,"undo":[[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":185,"column":44},"end":{"row":185,"column":45}},"text":"S"},{"action":"insertText","range":{"start":{"row":185,"column":44},"end":{"row":185,"column":46}},"text":"Sl"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":201,"column":12},"end":{"row":201,"column":13}},"text":"S"},{"action":"insertText","range":{"start":{"row":201,"column":12},"end":{"row":201,"column":14}},"text":"Sl"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":202,"column":18},"end":{"row":202,"column":19}},"text":"S"},{"action":"insertText","range":{"start":{"row":202,"column":18},"end":{"row":202,"column":20}},"text":"Sl"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":239,"column":132},"end":{"row":239,"column":133}},"text":"S"},{"action":"insertText","range":{"start":{"row":239,"column":132},"end":{"row":239,"column":134}},"text":"Sl"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":239,"column":158},"end":{"row":239,"column":159}},"text":"S"},{"action":"insertText","range":{"start":{"row":239,"column":158},"end":{"row":239,"column":160}},"text":"Sl"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":204,"column":58},"end":{"row":204,"column":59}},"text":"1"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":204,"column":58},"end":{"row":204,"column":59}},"text":"2"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":246,"column":16},"end":{"row":246,"column":17}},"text":"0"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":174,"column":10},"end":{"row":174,"column":11}},"text":"5"}]},{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":174,"column":9},"end":{"row":174,"column":10}},"text":"6"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":174,"column":9},"end":{"row":174,"column":10}},"text":"7"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":174,"column":9},"end":{"row":174,"column":10}},"text":"7"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":174,"column":9},"end":{"row":174,"column":10}},"text":"8"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":174,"column":9},"end":{"row":174,"column":10}},"text":"8"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":174,"column":9},"end":{"row":174,"column":10}},"text":"7"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":170,"column":13},"end":{"row":170,"column":17}},"text":"1, 4"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":170,"column":17},"end":{"row":170,"column":18}},"text":" "}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":170,"column":18},"end":{"row":170,"column":19}},"text":"#"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":170,"column":19},"end":{"row":170,"column":20}},"text":" "}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":170,"column":24},"end":{"row":170,"column":31}},"text":" # 1, 4"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":170,"column":16},"end":{"row":170,"column":17}},"text":"4"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":170,"column":16},"end":{"row":170,"column":17}},"text":"1"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":170,"column":17},"end":{"row":170,"column":18}},"text":"0"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":174,"column":9},"end":{"row":174,"column":10}},"text":"7"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":174,"column":9},"end":{"row":174,"column":10}},"text":"6"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":151,"column":0},"end":{"row":151,"column":54}},"text":"  return ro*N*Cap/k.mean()/R.mean()/L.mean()/Sl.mean()"},{"action":"removeLines","range":{"start":{"row":147,"column":0},"end":{"row":151,"column":0}},"nl":"\n","lines":["# def ar_for_ro(ro, N, Cap, k, D, Sl):","#   return ro*N*Cap/k.mean()/D.mean()/Sl.mean()","","def ar_for_ro(ro, N, Cap, k, R, L, Sl):"]}]}],[{"group":"doc","deltas":[{"action":"removeLines","range":{"start":{"row":147,"column":0},"end":{"row":148,"column":0}},"nl":"\n","lines":[""]}]}],[{"group":"doc","deltas":[{"action":"removeLines","range":{"start":{"row":147,"column":0},"end":{"row":148,"column":0}},"nl":"\n","lines":[""]}]}]],"redo":[[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":169,"column":21},"end":{"row":169,"column":22}},"text":"2"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":169,"column":21},"end":{"row":169,"column":22}},"text":"4"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":168,"column":9},"end":{"row":168,"column":10}},"text":"5"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":168,"column":9},"end":{"row":168,"column":10}},"text":"6"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":169,"column":21},"end":{"row":169,"column":22}},"text":"4"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":169,"column":21},"end":{"row":169,"column":22}},"text":"2"}]}]]},"/mgn_model.py":{"scrollTop":3197,"scrollLeft":0,"selection":{"start":{"row":178,"column":4},"end":{"row":178,"column":4}},"lastUse":1545933601770,"undo":[[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":283,"column":26},"end":{"row":283,"column":27}},"text":" "}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":283,"column":27},"end":{"row":283,"column":28}},"text":"#"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":283,"column":28},"end":{"row":283,"column":29}},"text":" "}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":283,"column":25},"end":{"row":283,"column":26}},"text":","}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":256,"column":16},"end":{"row":256,"column":17}},"text":"4"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":256,"column":16},"end":{"row":256,"column":17}},"text":"1"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":256,"column":17},"end":{"row":256,"column":18}},"text":"."}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":256,"column":18},"end":{"row":256,"column":19}},"text":"4"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":256,"column":18},"end":{"row":256,"column":19}},"text":"4"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":256,"column":18},"end":{"row":256,"column":19}},"text":"5"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":256,"column":18},"end":{"row":256,"column":19}},"text":"5"}]},{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":256,"column":17},"end":{"row":256,"column":18}},"text":"."}]},{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":256,"column":16},"end":{"row":256,"column":17}},"text":"1"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":256,"column":16},"end":{"row":256,"column":17}},"text":"2"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":256,"column":17},"end":{"row":256,"column":18}},"text":"."}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":256,"column":18},"end":{"row":256,"column":19}},"text":"1"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":256,"column":18},"end":{"row":256,"column":19}},"text":"1"}]},{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":256,"column":17},"end":{"row":256,"column":18}},"text":"."}]},{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":256,"column":16},"end":{"row":256,"column":17}},"text":"2"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":256,"column":16},"end":{"row":256,"column":17}},"text":"4"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":18,"column":0},"end":{"row":19,"column":0}},"text":"\n"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":19,"column":0},"end":{"row":20,"column":0}},"text":"\n"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":19,"column":0},"end":{"row":19,"column":21}},"text":"def EW_MGc(ar, X, c):"},{"action":"insertText","range":{"start":{"row":19,"column":21},"end":{"row":20,"column":0}},"text":"\n"},{"action":"insertLines","range":{"start":{"row":20,"column":0},"end":{"row":22,"column":0}},"lines":["EX2, EX = X.moment(2), X.moment(1)","CoeffVar = math.sqrt(EX2 - EX**2)/EX"]},{"action":"insertText","range":{"start":{"row":22,"column":0},"end":{"row":22,"column":46}},"text":"return (1 + CoeffVar**2)/2 * EW_MMc(ar, EX, c)"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":20,"column":0},"end":{"row":20,"column":2}},"text":"  "},{"action":"insertText","range":{"start":{"row":21,"column":0},"end":{"row":21,"column":2}},"text":"  "},{"action":"insertText","range":{"start":{"row":22,"column":0},"end":{"row":22,"column":2}},"text":"  "}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":19,"column":10},"end":{"row":19,"column":11}},"text":"_"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":19,"column":16},"end":{"row":19,"column":17}},"text":"E"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":19,"column":19},"end":{"row":19,"column":20}},"text":" "}]},{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":19,"column":18},"end":{"row":19,"column":19}},"text":","}]},{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":19,"column":17},"end":{"row":19,"column":18}},"text":"X"}]},{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":19,"column":16},"end":{"row":19,"column":17}},"text":"E"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":19,"column":17},"end":{"row":19,"column":18}},"text":","}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":19,"column":18},"end":{"row":19,"column":19}},"text":" "}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":19,"column":19},"end":{"row":19,"column":20}},"text":"E"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":19,"column":20},"end":{"row":19,"column":21}},"text":"X"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":19,"column":21},"end":{"row":19,"column":22}},"text":","}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":19,"column":22},"end":{"row":19,"column":23}},"text":" "}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":19,"column":23},"end":{"row":19,"column":24}},"text":"E"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":19,"column":24},"end":{"row":19,"column":25}},"text":"X"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":19,"column":25},"end":{"row":19,"column":26}},"text":"2"}]}],[{"group":"doc","deltas":[{"action":"removeLines","range":{"start":{"row":20,"column":0},"end":{"row":21,"column":0}},"nl":"\n","lines":["  EX2, EX = X.moment(2), X.moment(1)"]}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":21,"column":0},"end":{"row":21,"column":48}},"text":"  return (1 + CoeffVar**2)/2 * EW_MMc(ar, EX, c)"},{"action":"removeLines","range":{"start":{"row":19,"column":0},"end":{"row":21,"column":0}},"nl":"\n","lines":["def EW_MGc_(ar, c, EX, EX2):","  CoeffVar = math.sqrt(EX2 - EX**2)/EX"]}]}],[{"group":"doc","deltas":[{"action":"removeLines","range":{"start":{"row":19,"column":0},"end":{"row":20,"column":0}},"nl":"\n","lines":[""]}]}],[{"group":"doc","deltas":[{"action":"removeLines","range":{"start":{"row":19,"column":0},"end":{"row":20,"column":0}},"nl":"\n","lines":[""]}]}]],"redo":[]},"/model_checking_wmpi.py":{"scrollTop":2251,"scrollLeft":0,"selection":{"start":{"row":125,"column":32},"end":{"row":125,"column":32}},"lastUse":1545861250147,"undo":[[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":73,"column":70},"end":{"row":74,"column":0}},"text":"\n"},{"action":"insertText","range":{"start":{"row":74,"column":0},"end":{"row":74,"column":4}},"text":"    "}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":74,"column":4},"end":{"row":74,"column":5}},"text":"b"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":74,"column":5},"end":{"row":74,"column":6}},"text":"l"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":74,"column":6},"end":{"row":74,"column":7}},"text":"o"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":74,"column":7},"end":{"row":74,"column":8}},"text":"g"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":74,"column":8},"end":{"row":74,"column":9}},"text":"("}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":74,"column":9},"end":{"row":74,"column":10}},"text":")"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":74,"column":9},"end":{"row":74,"column":79}},"text":"Prqing_wMGc_l=Prqing_wMGc_l, approx_Prqing_wMGc_l=approx_Prqing_wMGc_l"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":74,"column":4},"end":{"row":74,"column":6}},"text":"# "}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":9,"column":9},"end":{"row":9,"column":15}},"text":"round("}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":9,"column":41},"end":{"row":9,"column":42}},"text":"\\"}]},{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":9,"column":40},"end":{"row":9,"column":41}},"text":" "}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":9,"column":40},"end":{"row":9,"column":41}},"text":" "}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":9,"column":41},"end":{"row":9,"column":42}},"text":"\\"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":9,"column":38},"end":{"row":9,"column":39}},"text":")"}]},{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":9,"column":37},"end":{"row":9,"column":38}},"text":"2"}]},{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":9,"column":36},"end":{"row":9,"column":37}},"text":" "}]},{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":9,"column":35},"end":{"row":9,"column":36}},"text":","}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":10,"column":9},"end":{"row":10,"column":15}},"text":"round("}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":10,"column":35},"end":{"row":10,"column":36}},"text":","}]},{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":10,"column":34},"end":{"row":10,"column":35}},"text":")"}]},{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":10,"column":33},"end":{"row":10,"column":34}},"text":"2"}]},{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":10,"column":32},"end":{"row":10,"column":33}},"text":" "}]},{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":10,"column":31},"end":{"row":10,"column":32}},"text":","}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":10,"column":9},"end":{"row":10,"column":31}},"text":"sim_m['waittime_mean']"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":9,"column":37},"end":{"row":9,"column":38}},"text":"\\"}]},{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":9,"column":36},"end":{"row":9,"column":37}},"text":" "}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":9,"column":36},"end":{"row":9,"column":37}},"text":" "}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":9,"column":37},"end":{"row":9,"column":59}},"text":"sim_m['waittime_mean']"}]}],[{"group":"doc","deltas":[{"action":"removeLines","range":{"start":{"row":10,"column":0},"end":{"row":11,"column":0}},"nl":"\n","lines":["          \\"]}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":10,"column":9},"end":{"row":10,"column":15}},"text":"round("}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":10,"column":0},"end":{"row":10,"column":9}},"text":"         "}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":9,"column":59},"end":{"row":10,"column":0}},"text":"\n"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":9,"column":59},"end":{"row":9,"column":60}},"text":","}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":9,"column":60},"end":{"row":9,"column":61}},"text":" "}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":9,"column":93},"end":{"row":9,"column":94}},"text":")"}]},{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":9,"column":92},"end":{"row":9,"column":93}},"text":"2"}]},{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":9,"column":91},"end":{"row":9,"column":92}},"text":" "}]},{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":9,"column":90},"end":{"row":9,"column":91}},"text":","}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":146,"column":2},"end":{"row":146,"column":4}},"text":"  "}]},{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":146,"column":0},"end":{"row":146,"column":2}},"text":"  "}]},{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":145,"column":14},"end":{"row":146,"column":0}},"text":"\n"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":145,"column":14},"end":{"row":145,"column":15}},"text":" "}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":146,"column":0},"end":{"row":146,"column":4}},"text":"    "}]},{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":145,"column":29},"end":{"row":146,"column":0}},"text":"\n"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":145,"column":29},"end":{"row":145,"column":30}},"text":" "}]}]],"redo":[]},"/plot_utils.py":{"scrollTop":0,"scrollLeft":0,"selection":{"start":{"row":18,"column":53},"end":{"row":18,"column":53}},"lastUse":1545857277092,"undo":[[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":18,"column":46},"end":{"row":18,"column":47}},"text":","}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":18,"column":47},"end":{"row":18,"column":48}},"text":" "}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":18,"column":48},"end":{"row":18,"column":53}},"text":"'+', "}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":18,"column":82},"end":{"row":18,"column":83}},"text":","}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":18,"column":83},"end":{"row":18,"column":84}},"text":" "}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":18,"column":84},"end":{"row":18,"column":85}},"text":"v"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":18,"column":84},"end":{"row":18,"column":85}},"text":"v"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":18,"column":84},"end":{"row":18,"column":89}},"text":"'+', "}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":18,"column":88},"end":{"row":18,"column":89}},"text":" "}]},{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":18,"column":87},"end":{"row":18,"column":88}},"text":","}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":15,"column":89},"end":{"row":15,"column":95}},"text":"'gray'"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":15,"column":88},"end":{"row":15,"column":89}},"text":" "}]},{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":15,"column":87},"end":{"row":15,"column":88}},"text":","}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":15,"column":55},"end":{"row":15,"column":61}},"text":"'gray'"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":15,"column":61},"end":{"row":15,"column":62}},"text":","}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":15,"column":62},"end":{"row":15,"column":63}},"text":" "}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":15,"column":76},"end":{"row":15,"column":85}},"text":"'magenta'"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":15,"column":75},"end":{"row":15,"column":76}},"text":" "}]},{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":15,"column":74},"end":{"row":15,"column":75}},"text":","}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":15,"column":63},"end":{"row":15,"column":72}},"text":"'magenta'"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":15,"column":72},"end":{"row":15,"column":73}},"text":","}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":15,"column":73},"end":{"row":15,"column":74}},"text":" "}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":18,"column":46},"end":{"row":18,"column":51}},"text":", 'v'"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":18,"column":41},"end":{"row":18,"column":46}},"text":", 'v'"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":18,"column":48},"end":{"row":18,"column":53}},"text":"'x', "}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":18,"column":61},"end":{"row":18,"column":62}},"text":" "}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":18,"column":63},"end":{"row":18,"column":68}},"text":"'x', "}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":18,"column":63},"end":{"row":18,"column":68}},"text":"'x', "}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":18,"column":78},"end":{"row":18,"column":83}},"text":"'x', "}]}]],"redo":[]},"/mrun.sh":{"scrollTop":0,"scrollLeft":0,"selection":{"start":{"row":18,"column":36},"end":{"row":18,"column":36}},"lastUse":1545856866190,"undo":[[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":10,"column":9},"end":{"row":10,"column":10}},"text":"2"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":10,"column":10},"end":{"row":10,"column":11}},"text":" "}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":10,"column":11},"end":{"row":10,"column":12}},"text":"#"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":10,"column":12},"end":{"row":10,"column":13}},"text":" "}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":10,"column":9},"end":{"row":10,"column":10}},"text":"1"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":10,"column":10},"end":{"row":10,"column":11}},"text":"1"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":10,"column":11},"end":{"row":10,"column":12}},"text":" "}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":10,"column":12},"end":{"row":10,"column":13}},"text":"#"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":10,"column":13},"end":{"row":10,"column":14}},"text":" "}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":10,"column":15},"end":{"row":10,"column":20}},"text":" # 11"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":10,"column":9},"end":{"row":10,"column":10}},"text":"2"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":10,"column":10},"end":{"row":10,"column":11}},"text":" "}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":10,"column":11},"end":{"row":10,"column":12}},"text":"#"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":10,"column":12},"end":{"row":10,"column":13}},"text":" "}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":10,"column":18},"end":{"row":10,"column":19}},"text":"2"}]},{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":10,"column":17},"end":{"row":10,"column":18}},"text":" "}]},{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":10,"column":16},"end":{"row":10,"column":17}},"text":"#"}]},{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":10,"column":15},"end":{"row":10,"column":16}},"text":" "}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":10,"column":12},"end":{"row":10,"column":13}},"text":" "}]},{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":10,"column":11},"end":{"row":10,"column":12}},"text":"#"}]},{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":10,"column":10},"end":{"row":10,"column":11}},"text":" "}]},{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":10,"column":9},"end":{"row":10,"column":10}},"text":"2"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":18,"column":15},"end":{"row":18,"column":16}},"text":"4"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":18,"column":15},"end":{"row":18,"column":16}},"text":"1"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":18,"column":16},"end":{"row":18,"column":17}},"text":"2"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":18,"column":16},"end":{"row":18,"column":17}},"text":"2"}]},{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":18,"column":15},"end":{"row":18,"column":16}},"text":"1"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":18,"column":15},"end":{"row":18,"column":16}},"text":"4"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":18,"column":36},"end":{"row":18,"column":38}},"text":"  "}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":18,"column":36},"end":{"row":18,"column":37}},"text":" "}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":17,"column":14},"end":{"row":17,"column":15}},"text":"2"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":17,"column":36},"end":{"row":17,"column":37}},"text":" "}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":9,"column":22},"end":{"row":9,"column":33}},"text":"'eval_wmpi'"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":9,"column":21},"end":{"row":9,"column":22}},"text":" "}]},{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":9,"column":20},"end":{"row":9,"column":21}},"text":"#"}]},{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":9,"column":19},"end":{"row":9,"column":20}},"text":" "}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":9,"column":7},"end":{"row":9,"column":18}},"text":"'eval_wmpi'"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":9,"column":18},"end":{"row":9,"column":19}},"text":" "}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":9,"column":19},"end":{"row":9,"column":20}},"text":"#"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":9,"column":20},"end":{"row":9,"column":21}},"text":" "}]}]],"redo":[]},"/srun.sh":{"scrollTop":0,"scrollLeft":0,"selection":{"start":{"row":9,"column":0},"end":{"row":9,"column":0}},"lastUse":1545856126731,"undo":[[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":4,"column":81},"end":{"row":4,"column":82}},"text":"3"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":4,"column":81},"end":{"row":4,"column":82}},"text":"1"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":4,"column":82},"end":{"row":4,"column":83}},"text":"2"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":4,"column":81},"end":{"row":4,"column":82}},"text":"4"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":4,"column":81},"end":{"row":4,"column":82}},"text":"1"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":4,"column":82},"end":{"row":4,"column":83}},"text":"2"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":4,"column":82},"end":{"row":4,"column":83}},"text":"2"}]},{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":4,"column":81},"end":{"row":4,"column":82}},"text":"1"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":4,"column":81},"end":{"row":4,"column":82}},"text":"2"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":4,"column":82},"end":{"row":4,"column":83}},"text":"4"}]}]],"redo":[[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":9,"column":0},"end":{"row":9,"column":1}},"text":"o"}]}]]},"/plot3d_utils.py":{"scrollTop":9.5,"scrollLeft":0,"selection":{"start":{"row":18,"column":16},"end":{"row":18,"column":16}},"lastUse":1545855732239,"undo":[],"redo":[]},"/run.sh":{"scrollTop":0,"scrollLeft":0,"selection":{"start":{"row":20,"column":0},"end":{"row":20,"column":0}},"lastUse":1545854271366,"undo":[[{"group":"doc","deltas":[{"action":"removeLines","range":{"start":{"row":10,"column":0},"end":{"row":11,"column":0}},"nl":"\n","lines":["  # MEM=$(($NTASKS*4*1024))"]}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":16,"column":14},"end":{"row":16,"column":18}},"text":"$MEM"},{"action":"insertText","range":{"start":{"row":16,"column":14},"end":{"row":16,"column":15}},"text":"8"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":16,"column":15},"end":{"row":16,"column":16}},"text":"0"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":16,"column":16},"end":{"row":16,"column":17}},"text":"0"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":16,"column":17},"end":{"row":16,"column":18}},"text":"0"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":16,"column":14},"end":{"row":16,"column":15}},"text":"8"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":16,"column":14},"end":{"row":16,"column":15}},"text":"4"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":9,"column":9},"end":{"row":9,"column":10}},"text":"1"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":9,"column":9},"end":{"row":9,"column":10}},"text":"2"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":19,"column":17},"end":{"row":19,"column":24}},"text":"log_sim"},{"action":"insertText","range":{"start":{"row":19,"column":17},"end":{"row":19,"column":25}},"text":"logmodel"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":37,"column":2},"end":{"row":37,"column":4}},"text":"# "}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":37,"column":21},"end":{"row":38,"column":0}},"text":"\n"},{"action":"insertText","range":{"start":{"row":38,"column":0},"end":{"row":38,"column":2}},"text":"  "}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":38,"column":2},"end":{"row":38,"column":19}},"text":"$PY plot_scher.py"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":38,"column":7},"end":{"row":38,"column":10}},"text":"lot"},{"action":"insertText","range":{"start":{"row":38,"column":7},"end":{"row":38,"column":8}},"text":"a"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":38,"column":8},"end":{"row":38,"column":9}},"text":"p"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":38,"column":9},"end":{"row":38,"column":10}},"text":"e"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":38,"column":10},"end":{"row":38,"column":11}},"text":"r"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":38,"column":12},"end":{"row":38,"column":17}},"text":"scher"},{"action":"insertText","range":{"start":{"row":38,"column":12},"end":{"row":38,"column":13}},"text":"p"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":38,"column":13},"end":{"row":38,"column":14}},"text":"l"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":38,"column":14},"end":{"row":38,"column":15}},"text":"o"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":38,"column":15},"end":{"row":38,"column":16}},"text":"t"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":38,"column":16},"end":{"row":38,"column":17}},"text":"t"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":38,"column":17},"end":{"row":38,"column":18}},"text":"i"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":38,"column":18},"end":{"row":38,"column":19}},"text":"n"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":38,"column":19},"end":{"row":38,"column":20}},"text":"g"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":30,"column":23},"end":{"row":31,"column":0}},"text":"\n"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":31,"column":0},"end":{"row":31,"column":13}},"text":"rm logmodel/*"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":31,"column":0},"end":{"row":31,"column":2}},"text":"  "}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":31,"column":5},"end":{"row":31,"column":13}},"text":"logmodel"},{"action":"insertText","range":{"start":{"row":31,"column":5},"end":{"row":31,"column":6}},"text":"s"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":31,"column":6},"end":{"row":31,"column":7}},"text":"a"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":31,"column":7},"end":{"row":31,"column":8}},"text":"v"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":31,"column":8},"end":{"row":31,"column":9}},"text":"e"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":31,"column":9},"end":{"row":31,"column":10}},"text":"_"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":31,"column":10},"end":{"row":31,"column":11}},"text":"e"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":31,"column":11},"end":{"row":31,"column":12}},"text":"x"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":31,"column":12},"end":{"row":31,"column":13}},"text":"p"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":31,"column":13},"end":{"row":31,"column":14}},"text":"r"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":31,"column":14},"end":{"row":31,"column":15}},"text":"e"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":31,"column":15},"end":{"row":31,"column":16}},"text":"p"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":31,"column":16},"end":{"row":31,"column":17}},"text":"l"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":31,"column":17},"end":{"row":31,"column":18}},"text":"a"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":31,"column":18},"end":{"row":31,"column":19}},"text":"y"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":34,"column":0},"end":{"row":35,"column":0}},"text":"\n"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":34,"column":0},"end":{"row":34,"column":23}},"text":"elif [ $1 = 'e' ]; then"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":34,"column":23},"end":{"row":35,"column":0}},"text":"\n"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":34,"column":13},"end":{"row":34,"column":14}},"text":"e"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":34,"column":13},"end":{"row":34,"column":14}},"text":"d"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":35,"column":0},"end":{"row":35,"column":2}},"text":"  "}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":35,"column":2},"end":{"row":35,"column":26}},"text":"$PY experience_replay.py"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":35,"column":6},"end":{"row":35,"column":23}},"text":"experience_replay"},{"action":"insertText","range":{"start":{"row":35,"column":6},"end":{"row":35,"column":7}},"text":"d"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":35,"column":7},"end":{"row":35,"column":8}},"text":"r"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":35,"column":8},"end":{"row":35,"column":9}},"text":"l"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":35,"column":9},"end":{"row":35,"column":10}},"text":"_"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":35,"column":10},"end":{"row":35,"column":11}},"text":"p"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":35,"column":11},"end":{"row":35,"column":12}},"text":"l"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":35,"column":12},"end":{"row":35,"column":13}},"text":"o"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":35,"column":13},"end":{"row":35,"column":14}},"text":"t"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":35,"column":14},"end":{"row":35,"column":15}},"text":"s"}]}]],"redo":[]},"/eval_wmpi.py":{"scrollTop":1533,"scrollLeft":0,"selection":{"start":{"row":88,"column":19},"end":{"row":88,"column":19}},"lastUse":1545851586565,"undo":[[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":118,"column":20},"end":{"row":118,"column":23}},"text":"0.2"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":118,"column":23},"end":{"row":118,"column":24}},"text":","}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":118,"column":24},"end":{"row":118,"column":25}},"text":" "}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":118,"column":22},"end":{"row":118,"column":23}},"text":"2"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":118,"column":22},"end":{"row":118,"column":23}},"text":"4"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":118,"column":25},"end":{"row":118,"column":28}},"text":"0.2"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":118,"column":28},"end":{"row":118,"column":29}},"text":","}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":118,"column":29},"end":{"row":118,"column":30}},"text":" "}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":118,"column":27},"end":{"row":118,"column":28}},"text":"2"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":118,"column":27},"end":{"row":118,"column":28}},"text":"5"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":118,"column":30},"end":{"row":118,"column":33}},"text":"0.2"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":118,"column":33},"end":{"row":118,"column":34}},"text":","}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":118,"column":34},"end":{"row":118,"column":35}},"text":" "}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":118,"column":32},"end":{"row":118,"column":33}},"text":"2"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":118,"column":32},"end":{"row":118,"column":33}},"text":"6"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":118,"column":38},"end":{"row":118,"column":39}},"text":"5"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":118,"column":43},"end":{"row":118,"column":44}},"text":"5"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":118,"column":43},"end":{"row":118,"column":44}},"text":","}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":118,"column":44},"end":{"row":118,"column":45}},"text":" "}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":118,"column":45},"end":{"row":118,"column":48}},"text":"0.2"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":118,"column":47},"end":{"row":118,"column":48}},"text":"2"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":118,"column":47},"end":{"row":118,"column":48}},"text":"9"}]}],[{"group":"doc","deltas":[{"action":"removeLines","range":{"start":{"row":119,"column":0},"end":{"row":120,"column":0}},"nl":"\n","lines":["  # ro_l = [0.9, 0.95]"]}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":74,"column":15},"end":{"row":74,"column":16}},"text":"5"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":74,"column":15},"end":{"row":74,"column":16}},"text":"1"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":74,"column":16},"end":{"row":74,"column":17}},"text":"0"}]}]],"redo":[]},"/plot_scher.py":{"scrollTop":0,"scrollLeft":0,"selection":{"start":{"row":15,"column":22},"end":{"row":15,"column":22}},"lastUse":1545851222439,"undo":[],"redo":[]},"/model_plots.py":{"scrollTop":2551,"scrollLeft":0,"selection":{"start":{"row":177,"column":0},"end":{"row":177,"column":0}},"lastUse":1545850777093,"undo":[[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":0,"column":0},"end":{"row":0,"column":22}},"text":"from modeling import *"},{"action":"insertText","range":{"start":{"row":0,"column":22},"end":{"row":1,"column":0}},"text":"\n"},{"action":"insertLines","range":{"start":{"row":1,"column":0},"end":{"row":177,"column":0}},"lines":["","def get_data(red, r, ro):","  if red == 'Coding' and r == 2:","    d_l= [","      0,","      10.0,","      12.593969317272713,","      15.860806316440653,","      19.975050809645882,","      25.156517700764358,","      31.682041205285422,","      39.900265484793444,","      50.250271926652381,","      63.285038282887051,","      79.700983037710856,","      100.37517349334034,","      126.41218551910536,","      159.2031185756999,","      200.4999190556494,","      252.50898287025086,","      318.00903826036807,","      400.49960704664795,","      504.38797627252632,","      635.22466971774736,","      800.00000000000034]","    if ro == 0.5:","      sim_ET_l= [","        23.944456881887493,","        23.924892602441275,","        23.198682864860814,","        22.691584392480358,","        22.43986715618567,","        21.484092438055228,","        20.865332478622609,","        19.942906210502354,","        18.742643017954588,","        17.581513774102316,","        17.006839221519282,","        16.76659262987102,","        16.639109966817124,","        16.586265906547204,","        16.545301742454676,","        16.527165380235559,","        16.532973144177312,","        16.516654681711554,","        16.512261306150446,","        16.513146732067277,","        16.519155806661054]","      sim_StdT_l= [","        0.06927220206984129,","        0.066383984163648727,","        0.054677440467456026,","        0.051195104426943347,","        0.060353655766260651,","        0.050198304331823228,","        0.048874884443081454,","        0.061028724349391827,","        0.041710371443432655,","        0.041133775827590306,","        0.040837268114482309,","        0.030315885038746861,","        0.044545820068631441,","        0.033391723365472109,","        0.028332550550612932,","        0.034004456750220229,","        0.04248290397635264,","        0.029084688703680254,","        0.021380115583299084,","        0.026215484290762297,","        0.042044609281664251]","    elif ro == 0.6:","      sim_ET_l= [","        23.931077243509911,","        23.945970074296561,","        23.195529686663441,","        22.713596572569806,","        22.417791645548856,","        21.463525508648313,","        20.884608690248747,","        19.989085243463336,","        18.956394465310314,","        18.611599783577979,","        19.172396592226285,","        20.478952853905994,","        21.744695151782302,","        22.348133148867884,","        23.2498557865332,","        23.221473695649589,","        23.180007050179913,","        24.328278599940276,","        24.106399344358429,","        24.272833073439863,","        23.290656458841653]","      sim_StdT_l= [","        0.046742590489707365,","        0.047290679328663716,","        0.05825449358458816,","        0.063626048821668377,","        0.068764886891555341,","        0.055094076294105031,","        0.06188012976452037,","        0.040082905578311068,","        0.043025069492885003,","        0.10670941000401758,","        0.23863167379601213,","        0.53319554712106643,","        0.88313833573555423,","        0.98532769106087725,","        1.0272176643163009,","        1.1032863039287444,","        1.4435361139075793,","        1.8752070218105232,","        2.0805024264753644,","        2.0009593912669446,","        1.7699161273767812]","    return d_l, sim_ET_l, sim_StdT_l","","def plot_ET_wrt_d():","  red, r = 'Coding', 2","  ro = 0.5","  log(INFO, \"red= {}, r= {}, ro= {}\".format(red, r, ro) )","  d_l, sim_ET_l, sim_StdT_l = get_data(red, r, ro)","  blog(len_d_l=len(d_l), len_sim_ET_l=len(sim_ET_l), len_sim_StdT_l=len(sim_StdT_l) )","  ","  ET_wMGc_l, approx_ET_wMGc_l = [], []","  for d in d_l:","    ET_wMGc, EW_wMGc, Prqing_wMGc = ET_EW_Prqing_pareto_wMGc(ro, N, Cap, k, r, b, beta, a, alpha_gen, d, red)","    approx_ET_wMGc, approx_EW_wMGc, approx_Prqing_wMGc = approx_ET_EW_Prqing_pareto_wMGc(ro, N, Cap, k, r, b, beta, a, alpha_gen, d, red)","    ET_wMGc_l.append(ET_wMGc)","    approx_ET_wMGc_l.append(approx_ET_wMGc)","  ","  plot.errorbar(d_l, sim_ET_l, yerr=sim_StdT_l, label='Sim', c=next(darkcolor_c), marker=next(marker_c), ls=':')","  plot.plot(d_l, ET_wMGc_l, label='M/G/c model', c=next(darkcolor_c), marker=next(marker_c), ls=':')","  plot.plot(d_l, approx_ET_wMGc_l, label='Asymptotic M/G/c model', c=next(darkcolor_c), marker=next(marker_c), ls=':')","  plot.xscale('log')","  prettify(plot.gca() )","  fontsize = 14","  plot.legend(loc='best', framealpha=0.5, fontsize=12)","  plot.xlabel('d', fontsize=fontsize)","  plot.ylabel('E[T]', fontsize=fontsize)","  ","  plot.title(r'$N= {}$, $Cap= {}$, $\\rho_0= {}$, $r= {}$'.format(N, Cap, ro, r) + '\\n' \\","    + r'$k \\sim${}, $L \\sim${}, $Sl \\sim${}'.format(k.to_latex(), L.to_latex(), Sl.to_latex() ) )","  plot.gca().title.set_position([.5, 1.05] )","  fig = plot.gcf()","  fig.set_size_inches(5, 5)","  plot.savefig('plot_ET_wrt_d_r{}_ro{}.png'.format(r, ro), bbox_inches='tight')","  fig.clear()","  log(INFO, \"done.\")","","if __name__ == \"__main__\":","  N, Cap = 20, 10","  k = BZipf(1, 5)","  R = Uniform(1, 1)","  b, beta = 10, 4","  L = Pareto(b, beta)","  a, alpha = 1, 3","  Sl = Pareto(a, alpha)","  def alpha_gen(ro):","    return alpha","  ","  # ar = round(ar_for_ro(ro, N, Cap, k, R, L, S), 2)","  # sinfo_m = {","  #   'njob': 5000*N,","  #   'nworker': N, 'wcap': Cap, 'ar': ar,","  #   'k_rv': k,","  #   'reqed_rv': R,","  #   'lifetime_rv': L,","  #   'straggle_m': {'slowdown': lambda load: S.sample() } }","  # mapping_m = {'type': 'spreading'}","  # sching_m = {'type': 'expand_if_totaldemand_leq', 'r': r, 'threshold': None}","  ","  # u = 40*L.mean()*Sl.mean()","  # for d in [0, *np.logspace(math.log10(l), math.log10(u), 20) ]:","  ","  plot_ET_wrt_d()"]}]}]],"redo":[]},"/paper_plotting.py":{"scrollTop":2527,"scrollLeft":0,"selection":{"start":{"row":0,"column":0},"end":{"row":177,"column":0}},"lastUse":1545850275852,"undo":[[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":152,"column":26},"end":{"row":153,"column":0}},"text":"\n"},{"action":"insertText","range":{"start":{"row":153,"column":0},"end":{"row":153,"column":2}},"text":"  "}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":153,"column":2},"end":{"row":153,"column":27}},"text":"elif 3 <= STATE_LEN <= 6:"},{"action":"insertText","range":{"start":{"row":153,"column":27},"end":{"row":154,"column":0}},"text":"\n"},{"action":"insertLines","range":{"start":{"row":154,"column":0},"end":{"row":161,"column":0}},"lines":["  for wload_l in [[0.5, 0.5, 0.5, 0.5, 0.5, 0.5], [0.9, 0.9, 0.9, 0.9, 0.9, 0.9]]:","    print(\">>> wload_l= {}\".format(wload_l) )","    for cluster_qlen in [0, 1, 2, 10]:","      print(\">> cluster_qlen= {}\".format(cluster_qlen) )","      for D in D_l:","        qa_l = self.learner.get_a_q_l(state_(D, wload_l, cluster_qlen) )","        print(\"D= {}, qa_l= {}\".format(D, qa_l) )"]},{"action":"insertText","range":{"start":{"row":161,"column":0},"end":{"row":161,"column":32}},"text":"        blog(a=np.argmax(qa_l) )"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":152,"column":26},"end":{"row":153,"column":0}},"text":"\n"},{"action":"insertText","range":{"start":{"row":153,"column":0},"end":{"row":153,"column":2}},"text":"  "}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":153,"column":2},"end":{"row":153,"column":3}},"text":"#"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":153,"column":3},"end":{"row":153,"column":4}},"text":" "}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":153,"column":4},"end":{"row":153,"column":5}},"text":"F"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":153,"column":5},"end":{"row":153,"column":6}},"text":"o"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":153,"column":6},"end":{"row":153,"column":7}},"text":"r"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":153,"column":7},"end":{"row":153,"column":8}},"text":" "}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":153,"column":3},"end":{"row":153,"column":4}},"text":"#"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":154,"column":12},"end":{"row":154,"column":21}},"text":"STATE_LEN"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":153,"column":9},"end":{"row":153,"column":18}},"text":"STATE_LEN"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":153,"column":18},"end":{"row":153,"column":19}},"text":" "}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":153,"column":19},"end":{"row":153,"column":20}},"text":"="}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":153,"column":20},"end":{"row":153,"column":21}},"text":" "}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":153,"column":21},"end":{"row":153,"column":22}},"text":"3"}]}],[{"group":"doc","deltas":[{"action":"removeLines","range":{"start":{"row":154,"column":0},"end":{"row":155,"column":0}},"nl":"\n","lines":["  elif 3 <=  <= 6:"]}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":153,"column":22},"end":{"row":154,"column":0}},"text":"\n"},{"action":"insertText","range":{"start":{"row":154,"column":0},"end":{"row":154,"column":2}},"text":"  "}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":154,"column":2},"end":{"row":155,"column":0}},"text":"\n"},{"action":"insertText","range":{"start":{"row":155,"column":0},"end":{"row":155,"column":2}},"text":"  "}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":154,"column":2},"end":{"row":154,"column":3}},"text":"a"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":154,"column":3},"end":{"row":154,"column":4}},"text":"v"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":154,"column":4},"end":{"row":154,"column":5}},"text":"g"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":154,"column":4},"end":{"row":154,"column":5}},"text":"g"}]},{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":154,"column":3},"end":{"row":154,"column":4}},"text":"v"}]},{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":154,"column":2},"end":{"row":154,"column":3}},"text":"a"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":154,"column":2},"end":{"row":154,"column":3}},"text":"E"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":154,"column":2},"end":{"row":154,"column":3}},"text":"E"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":154,"column":2},"end":{"row":154,"column":3}},"text":"a"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":154,"column":3},"end":{"row":154,"column":4}},"text":"v"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":154,"column":3},"end":{"row":154,"column":4}},"text":"v"}]},{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":154,"column":2},"end":{"row":154,"column":3}},"text":"a"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":154,"column":2},"end":{"row":154,"column":3}},"text":"E"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":154,"column":3},"end":{"row":154,"column":4}},"text":"l"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":154,"column":4},"end":{"row":154,"column":5}},"text":"o"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":154,"column":5},"end":{"row":154,"column":6}},"text":"a"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":154,"column":6},"end":{"row":154,"column":7}},"text":"d"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":154,"column":7},"end":{"row":154,"column":8}},"text":" "}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":154,"column":8},"end":{"row":154,"column":9}},"text":"="}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":154,"column":9},"end":{"row":154,"column":10}},"text":" "}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":154,"column":10},"end":{"row":154,"column":11}},"text":"0"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":180,"column":0},"end":{"row":180,"column":23}},"text":"RedDRL_ro__Esl_l_m = {}"},{"action":"removeLines","range":{"start":{"row":151,"column":0},"end":{"row":180,"column":0}},"nl":"\n","lines":["# #############################  Learning plots  ############################# #","def plot_learned_policy():","  ## For STATE_LEN = 3","  Eload = 0","  ","  for wload_l in [[0.5, 0.5, 0.5, 0.5, 0.5, 0.5], [0.9, 0.9, 0.9, 0.9, 0.9, 0.9]]:","    print(\">>> wload_l= {}\".format(wload_l) )","    for cluster_qlen in [0, 1, 2, 10]:","      print(\">> cluster_qlen= {}\".format(cluster_qlen) )","      for D in D_l:","        qa_l = self.learner.get_a_q_l(state_(D, wload_l, cluster_qlen) )","        print(\"D= {}, qa_l= {}\".format(D, qa_l) )","        blog(a=np.argmax(qa_l) )","","def plot_Esl_vs_ro():","  ro_l = []","  ","","RedNone_ro__Esl_l_m = {}","RedAll_ro__Esl_l_m = {","  0.1: [],","  0.2: [],","  0.3: [],","  0.4: [],","  0.5: [],","  0.6: [],","  0.7: [],","  0.8: [],","  0.9: [] }"]}]}],[{"group":"doc","deltas":[{"action":"removeLines","range":{"start":{"row":151,"column":0},"end":{"row":152,"column":0}},"nl":"\n","lines":[""]}]}],[{"group":"doc","deltas":[{"action":"removeLines","range":{"start":{"row":151,"column":0},"end":{"row":152,"column":0}},"nl":"\n","lines":[""]}]}]],"redo":[]},"/learn_wmpi.py":{"scrollTop":161.5,"scrollLeft":0,"selection":{"start":{"row":38,"column":52},"end":{"row":38,"column":95}},"lastUse":1543248541942,"undo":[[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":190,"column":14},"end":{"row":190,"column":15}},"text":"1"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":5,"column":23},"end":{"row":6,"column":0}},"text":"\n"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":6,"column":0},"end":{"row":6,"column":1}},"text":"f"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":6,"column":1},"end":{"row":6,"column":2}},"text":"r"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":6,"column":2},"end":{"row":6,"column":3}},"text":"o"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":6,"column":3},"end":{"row":6,"column":4}},"text":"m"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":6,"column":4},"end":{"row":6,"column":5}},"text":" "}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":6,"column":5},"end":{"row":6,"column":6}},"text":"m"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":6,"column":6},"end":{"row":6,"column":7}},"text":"o"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":6,"column":7},"end":{"row":6,"column":8}},"text":"d"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":6,"column":8},"end":{"row":6,"column":9}},"text":"e"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":6,"column":9},"end":{"row":6,"column":10}},"text":"l"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":6,"column":10},"end":{"row":6,"column":11}},"text":"i"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":6,"column":11},"end":{"row":6,"column":12}},"text":"n"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":6,"column":12},"end":{"row":6,"column":13}},"text":"g"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":6,"column":12},"end":{"row":6,"column":13}},"text":"g"}]},{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":6,"column":11},"end":{"row":6,"column":12}},"text":"n"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":6,"column":11},"end":{"row":6,"column":12}},"text":"n"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":6,"column":12},"end":{"row":6,"column":13}},"text":"g"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":6,"column":13},"end":{"row":6,"column":14}},"text":" "}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":6,"column":14},"end":{"row":6,"column":15}},"text":"i"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":6,"column":15},"end":{"row":6,"column":16}},"text":"m"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":6,"column":16},"end":{"row":6,"column":17}},"text":"p"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":6,"column":17},"end":{"row":6,"column":18}},"text":"o"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":6,"column":18},"end":{"row":6,"column":19}},"text":"r"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":6,"column":19},"end":{"row":6,"column":20}},"text":"t"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":6,"column":20},"end":{"row":6,"column":21}},"text":" "}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":6,"column":21},"end":{"row":6,"column":22}},"text":"*"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":177,"column":2},"end":{"row":177,"column":3}},"text":"n"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":177,"column":3},"end":{"row":177,"column":4}},"text":"l"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":177,"column":4},"end":{"row":177,"column":5}},"text":"e"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":177,"column":5},"end":{"row":177,"column":6}},"text":"a"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":177,"column":6},"end":{"row":177,"column":7}},"text":"r"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":177,"column":7},"end":{"row":177,"column":8}},"text":"n"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":177,"column":8},"end":{"row":177,"column":9}},"text":"i"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":177,"column":9},"end":{"row":177,"column":10}},"text":"n"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":177,"column":10},"end":{"row":177,"column":11}},"text":"g"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":177,"column":11},"end":{"row":177,"column":12}},"text":"s"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":177,"column":12},"end":{"row":177,"column":13}},"text":"t"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":177,"column":13},"end":{"row":177,"column":14}},"text":"e"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":177,"column":14},"end":{"row":177,"column":15}},"text":"p"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":177,"column":15},"end":{"row":177,"column":16}},"text":"s"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":177,"column":16},"end":{"row":177,"column":17}},"text":"L"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":78,"column":19},"end":{"row":78,"column":20}},"text":"L"},{"action":"insertText","range":{"start":{"row":78,"column":19},"end":{"row":78,"column":33}},"text":"nlearningsteps"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":106,"column":15},"end":{"row":106,"column":16}},"text":"L"},{"action":"insertText","range":{"start":{"row":106,"column":15},"end":{"row":106,"column":29}},"text":"nlearningsteps"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":187,"column":11},"end":{"row":187,"column":12}},"text":"6"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":187,"column":11},"end":{"row":187,"column":12}},"text":"5"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":191,"column":23},"end":{"row":191,"column":30}},"text":"2000*N,"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":191,"column":22},"end":{"row":191,"column":23}},"text":" "}]},{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":191,"column":21},"end":{"row":191,"column":22}},"text":"#"}]},{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":191,"column":20},"end":{"row":191,"column":21}},"text":" "}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":191,"column":14},"end":{"row":191,"column":21}},"text":"2000*N,"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":191,"column":21},"end":{"row":191,"column":22}},"text":" "}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":191,"column":22},"end":{"row":191,"column":23}},"text":"#"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":191,"column":23},"end":{"row":191,"column":24}},"text":" "}]}],[{"group":"doc","deltas":[{"action":"removeLines","range":{"start":{"row":185,"column":0},"end":{"row":186,"column":0}},"nl":"\n","lines":["    def alpha_gen(ro):"]}]}],[{"group":"doc","deltas":[{"action":"removeLines","range":{"start":{"row":185,"column":0},"end":{"row":186,"column":0}},"nl":"\n","lines":["      return alpha"]}]}],[{"group":"doc","deltas":[{"action":"removeLines","range":{"start":{"row":170,"column":0},"end":{"row":171,"column":0}},"nl":"\n","lines":["  "]}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":184,"column":11},"end":{"row":184,"column":12}},"text":"5"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":184,"column":11},"end":{"row":184,"column":12}},"text":"6"}]}]],"redo":[]},"/policygrad_learning.py":{"scrollTop":169.5,"scrollLeft":0,"selection":{"start":{"row":29,"column":14},"end":{"row":29,"column":14}},"lastUse":1543194789961,"undo":[[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":28,"column":41},"end":{"row":28,"column":42}},"text":","}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":28,"column":42},"end":{"row":28,"column":43}},"text":" "}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":28,"column":43},"end":{"row":28,"column":44}},"text":"s"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":28,"column":44},"end":{"row":28,"column":45}},"text":"a"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":28,"column":45},"end":{"row":28,"column":46}},"text":"v"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":28,"column":46},"end":{"row":28,"column":47}},"text":"e"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":28,"column":47},"end":{"row":28,"column":48}},"text":"d"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":28,"column":47},"end":{"row":28,"column":48}},"text":"d"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":28,"column":47},"end":{"row":28,"column":48}},"text":"_"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":28,"column":48},"end":{"row":28,"column":49}},"text":"d"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":28,"column":49},"end":{"row":28,"column":50}},"text":"i"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":28,"column":50},"end":{"row":28,"column":51}},"text":"r"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":27,"column":46},"end":{"row":27,"column":63}},"text":", save_dir='save'"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":27,"column":63},"end":{"row":27,"column":64}},"text":","}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":27,"column":64},"end":{"row":27,"column":65}},"text":" "}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":27,"column":47},"end":{"row":27,"column":48}},"text":" "}]},{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":27,"column":46},"end":{"row":27,"column":47}},"text":","}]}]],"redo":[]},"/sim_objs.py":{"scrollTop":2145.5,"scrollLeft":0,"selection":{"start":{"row":127,"column":32},"end":{"row":127,"column":32}},"lastUse":1543174715350,"undo":[[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":304,"column":10},"end":{"row":304,"column":12}},"text":"# "}]}],[{"group":"doc","deltas":[{"action":"removeLines","range":{"start":{"row":301,"column":0},"end":{"row":302,"column":0}},"nl":"\n","lines":["        # print(\"job completed, jid= {}\".format(t.jid) )"]}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":3,"column":22},"end":{"row":3,"column":23}},"text":"*"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":3,"column":22},"end":{"row":3,"column":27}},"text":"Scher"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":3,"column":27},"end":{"row":3,"column":28}},"text":","}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":3,"column":28},"end":{"row":3,"column":29}},"text":" "}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":3,"column":29},"end":{"row":3,"column":36}},"text":"RLScher"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":3,"column":0},"end":{"row":3,"column":2}},"text":"# "}]}],[{"group":"doc","deltas":[{"action":"removeLines","range":{"start":{"row":3,"column":0},"end":{"row":4,"column":0}},"nl":"\n","lines":["# from scheduler import Scher, RLScher"]}]}],[{"group":"doc","deltas":[{"action":"removeLines","range":{"start":{"row":0,"column":0},"end":{"row":309,"column":0}},"nl":"\n","lines":["import math, random, simpy, pprint","from operator import itemgetter","","from rvs import *","from log_utils import *","","# #######################################  Task  ######################################## #","class Task(object):","  def __init__(self, _id, jid, reqed, demandperslot_rv, totaldemand, k, type_=None):","    self._id = _id","    self.jid = jid","    self.reqed = reqed","    self.demandperslot_rv = demandperslot_rv","    self.totaldemand = totaldemand","    self.k = k","    self.type_ = type_ # 's': systematic, 'r': redundant","    ","    self.demandperslot_rv_mean = demandperslot_rv.mean()","    ","    self.prev_hop_id = None","    self.binding_time = None","    self.run_time = None","    ","    self.cum_supply = 0","    self.cum_demand = 0","  ","  def __repr__(self):","    return \"Task[id= {}, jid= {}, type= {}]\".format(self._id, self.jid, self.type_)","  ","  def gen_demand(self):","    # d = min(self.demandperslot_rv.sample(), self.totaldemand - self.cum_demand)","    d = min(self.demandperslot_rv_mean, self.totaldemand - self.cum_demand)","    self.cum_demand += d","    return d","  ","  def take_supply(self, s):","    s_ = min(self.cum_demand - self.cum_supply, s)","    self.cum_supply += s_","    return s_","","class Job(object):","  def __init__(self, _id, k, n, demandperslot_rv, totaldemand):","    self._id = _id","    self.k = k","    self.n = n","    self.demandperslot_rv = demandperslot_rv","    self.totaldemand = totaldemand","    ","    self.reqed = self.demandperslot_rv.mean()","  ","  def __repr__(self):","    # return \"Job[id= {}]\".format(self._id)","    return \"Job[id= {}, k= {}, totaldemand= {}, reqed= {}]\".format(self._id, self.k, self.totaldemand, self.reqed)","","class JobGen(object):","  def __init__(self, env, ar, demandperslot_mean_rv, totaldemand_rv, k_rv, njob, out, **kwargs):","    self.env = env","    self.ar = ar","    self.demandperslot_mean_rv = demandperslot_mean_rv","    self.totaldemand_rv = totaldemand_rv","    self.k_rv = k_rv","    self.njob = njob","    self.out = out","    ","    self.nsent = 0","    ","    self.action = self.env.process(self.run_poisson() )","  ","  def run_poisson(self):","    while 1:","      yield self.env.timeout(random.expovariate(self.ar) )","      self.nsent += 1","      k = self.k_rv.sample()","      demandmean = self.demandperslot_mean_rv.sample()","      coeff_var = 0.7","      self.out.put(Job(","        _id = self.nsent,","        k = k, n = k,","        demandperslot_rv = TNormal(demandmean, demandmean*coeff_var),","        totaldemand = self.totaldemand_rv.sample() ) )","      ","      # if self.nsent >= self.njob:","      #   return","","# #########################################  Worker  ############################################# #","class Worker(object):","  def __init__(self, env, _id, cap, out_c, straggle_m):","    self.env = env","    self._id = _id","    self.cap = cap","    self.out_c = out_c","    self.straggle_m = straggle_m","    ","    self.cap_ = self.cap","    ","    self.timeslot = 1","    self.t_l = []","    env.process(self.run() )","    env.process(self.straggle() )","    ","    self.ntimeslots = 0","    self.avg_load = 0","  ","  def straggle(self):","    sl = self.straggle_m['slowdown']","    straggle_dur_rv = self.straggle_m['straggle_dur_rv']","    normal_dur_v = self.straggle_m['normal_dur_rv']","    while True:","      self.cap_ = self.cap*sl(self.sched_load() )","      yield (self.env.timeout(straggle_dur_rv.sample() ) )","      self.cap_ = self.cap","      yield (self.env.timeout(normal_dur_v.sample() ) )","  ","  def __repr__(self):","    return \"Worker[id= {}]\".format(self._id)","  ","  def sched_cap(self):","    if len(self.t_l) == 0:","      return 0","    return sum([t.reqed for t in self.t_l] )","  ","  def nonsched_cap(self):","    return self.cap - self.sched_cap()","  ","  def sched_load(self):","    return self.sched_cap()/self.cap","  ","  def update_avg_load(self, load):","    self.avg_load = (self.avg_load*(self.ntimeslots-1) + load)/self.ntimeslots","  ","  def run(self):","    while True:","      yield (self.env.timeout(self.timeslot) )","      self.ntimeslots += 1","      if len(self.t_l) == 0:","        self.update_avg_load(0)","        continue","      ","      for p in self.t_l:","        p.gen_demand()","      ","      # CPU scheduling","      cap_ = self.cap_","      sched_cap = self.sched_cap()","      total_supplytaken = 0","      for t in self.t_l:","        total_supplytaken += t.take_supply(min(t.reqed, t.reqed/sched_cap*cap_) )","      ","      t_l_ = self.t_l","      while cap_ - total_supplytaken > 0.01:","        t_l_ = [t for t in t_l_ if t.cum_demand - t.cum_supply > 0.01]","        if len(t_l_) == 0:","          break","        ","        supply_foreach = (cap_ - total_supplytaken)/len(t_l_)","        for t in t_l_:","          total_supplytaken += t.take_supply(supply_foreach)","      self.update_avg_load(self.sched_load() )","      # Check if a task is finished","      t_l_ = []","      for t in self.t_l:","        if t.cum_supply - t.totaldemand > -0.01:","          t.run_time = self.env.now - t.binding_time","          t.prev_hop_id = self._id","          self.out_c.put_c(t)","          slog(DEBUG, self.env, self, \"finished\", t)","        else:","          t_l_.append(t)","      self.t_l = t_l_","  ","  def put(self, t):","    avail_cap = self.nonsched_cap()","    if t.type_ == 's' and t.reqed > avail_cap:","      tred_l = [t for t in self.t_l if t.type_ == 'r']","      i = 0","      while i < len(tred_l) and avail_cap < t.reqed:","        tred = tred_l[i]","        avail_cap += tred.reqed","        self.t_l.remove(tred)","        i += 1","      if avail_cap < t.reqed:","        slog(ERROR, self.env, self, \"could not bind\", t)","        return","    elif t.type_ == 'r' and t.reqed > avail_cap:","      return","    ","    t.binding_time = self.env.now","    self.t_l.append(t)","    slog(DEBUG, self.env, self, \"binded, njob= {}\".format(len(self.t_l) ), t)","  ","  def put_c(self, m):","    slog(DEBUG, self.env, self, \"received\", m)","    ","    if m['message'] == 'remove':","      jid = m['jid']","      ti = None","      for i, t in enumerate(self.t_l):","        if t.jid == jid:","          ti = i","      if ti is not None:","        slog(DEBUG, self.env, self, \"removing\", self.t_l[ti] )","        del self.t_l[ti]","    else:","      log(ERROR, \"Unrecognized message;\", m=m)","","# #########################################  Cluster  ############################################ #","class Cluster(object):","  def __init__(self, env, njob, nworker, wcap, straggle_m, scher, **kwargs):","    self.env = env","    self.njob = njob","    self.nworker = nworker","    self.wcap = wcap","    self.straggle_m = straggle_m","    self.scher = scher","    ","    self.w_l = [Worker(env, i, wcap, self, straggle_m) for i in range(nworker) ]","    ","    self.store = simpy.Store(env)","    env.process(self.run() )","    ","    self.njob_finished = 0","    self.store_c = simpy.Store(env)","    self.wait_for_alljobs = env.process(self.run_c() )","    ","    self.jid__t_l_m = {}","    self.jid_info_m = {}","    ","  def __repr__(self):","    # return 'Cluster[' + '\\n' + \\","    #       '\\t njob= {}'.format(self.njob) + '\\n' + \\","    #       '\\t nworker= {}'.format(self.nworker) + '\\n' + \\","    #       '\\t wcap= {}'.format(self.wcap) + '\\n' + \\","    #       '\\t straggle_m= {}'.format(self.straggle_m) + '\\n' + \\","    #       '\\t scher= {}'.format(self.scher)","    return 'Cluster'","  ","  def run(self):","    while True:","      j = yield self.store.get()","      ","      while True:","        s, a, w_l = self.scher.schedule(j, self.w_l)","        if a == -1:","          slog(DEBUG, self.env, self, \"a = -1\", j)","          yield self.env.timeout(0.1)","        else:","          break","      # self.store.put(j)","      # self.jid_info_m[j._id] = {'fate': 'dropped'}","      ","      self.jid_info_m[j._id] = {'wait_time': self.env.now - j.arrival_time}","      wid_l = []","      for i, w in enumerate(w_l):","        type_ = 's' if i+1 <= j.k else 'r'","        w.put(Task(i+1, j._id, j.reqed, j.demandperslot_rv, j.totaldemand, j.k, type_) )","        wid_l.append(w._id)","      ","      self.jid__t_l_m[j._id] = []","      self.jid_info_m[j._id].update({","        'expected_run_time': j.totaldemand/j.demandperslot_rv.mean(),","        'wid_l': wid_l,","        's': s, 'a': a} )","  ","  def put(self, j):","    slog(DEBUG, self.env, self, \"received\", j)","    if len(self.store.items) >= 1000:","      # slog(WARNING, self.env, self, \">= 1000 tasks are in q! dropping.\", j)","      return","    j.arrival_time = self.env.now","    return self.store.put(j)","  ","  def run_c(self):","    while True:","      t = yield self.store_c.get()","      try:","        self.jid__t_l_m[t.jid].append(t)","      except KeyError: # may happen due to a task completion after the corresponding job finishes","        continue","      ","      t_l = self.jid__t_l_m[t.jid]","      if len(t_l) > t.k:","        log(ERROR, \"len(t_l)= {} > k= {}\".format(len(t_l), t.k) )","      elif len(t_l) < t.k:","        continue","      else:","        t_l = self.jid__t_l_m[t.jid]","        wrecvedfrom_id_l = [t.prev_hop_id for t in t_l]","        wsentto_id_l = self.jid_info_m[t.jid]['wid_l']","        for w in self.w_l:","          if w._id in wsentto_id_l and w._id not in wrecvedfrom_id_l:","            w.put_c({'message': 'remove', 'jid': t.jid} )","        ","        self.jid_info_m[t.jid].update({","          'fate': 'finished',","          'run_time': max([t.run_time for t in self.jid__t_l_m[t.jid] ] ) } )","        self.jid__t_l_m.pop(t.jid, None)","        slog(DEBUG, self.env, self, \"finished jid= {}\".format(t.jid), t)","        ","        ## This causes (s1, a1, r1), (s2, a2, r2) to be interleaved by more than one job","        # self.njob_finished += 1","        if t.jid <= self.njob:","          self.njob_finished += 1","          # log(WARNING, \"job completion;\", jid=t.jid, njob=self.njob, njob_finished=self.njob_finished)","          if self.njob_finished >= self.njob:","            return","  ","  def put_c(self, t):","    slog(DEBUG, self.env, self, \"received\", t)","    return self.store_c.put(t)"]},{"action":"insertText","range":{"start":{"row":0,"column":0},"end":{"row":0,"column":34}},"text":"import math, random, simpy, pprint"},{"action":"insertText","range":{"start":{"row":0,"column":34},"end":{"row":1,"column":0}},"text":"\n"},{"action":"insertLines","range":{"start":{"row":1,"column":0},"end":{"row":309,"column":0}},"lines":["from operator import itemgetter","","from rvs import *","from log_utils import *","","# #######################################  Task  ######################################## #","class Task(object):","  def __init__(self, _id, jid, reqed, demandperslot_rv, totaldemand, k, type_=None):","    self._id = _id","    self.jid = jid","    self.reqed = reqed","    self.demandperslot_rv = demandperslot_rv","    self.totaldemand = totaldemand","    self.k = k","    self.type_ = type_ # 's': systematic, 'r': redundant","    ","    self.demandperslot_rv_mean = demandperslot_rv.mean()","    ","    self.prev_hop_id = None","    self.binding_time = None","    self.run_time = None","    ","    self.cum_supply = 0","    self.cum_demand = 0","  ","  def __repr__(self):","    return \"Task[id= {}, jid= {}, type= {}]\".format(self._id, self.jid, self.type_)","  ","  def gen_demand(self):","    # d = min(self.demandperslot_rv.sample(), self.totaldemand - self.cum_demand)","    d = min(self.demandperslot_rv_mean, self.totaldemand - self.cum_demand)","    self.cum_demand += d","    return d","  ","  def take_supply(self, s):","    s_ = min(self.cum_demand - self.cum_supply, s)","    self.cum_supply += s_","    return s_","","class Job(object):","  def __init__(self, _id, k, n, demandperslot_rv, totaldemand):","    self._id = _id","    self.k = k","    self.n = n","    self.demandperslot_rv = demandperslot_rv","    self.totaldemand = totaldemand","    ","    self.reqed = self.demandperslot_rv.mean()","  ","  def __repr__(self):","    # return \"Job[id= {}]\".format(self._id)","    return \"Job[id= {}, k= {}, totaldemand= {}, reqed= {}]\".format(self._id, self.k, self.totaldemand, self.reqed)","","class JobGen(object):","  def __init__(self, env, ar, demandperslot_mean_rv, totaldemand_rv, k_rv, njob, out, **kwargs):","    self.env = env","    self.ar = ar","    self.demandperslot_mean_rv = demandperslot_mean_rv","    self.totaldemand_rv = totaldemand_rv","    self.k_rv = k_rv","    self.njob = njob","    self.out = out","    ","    self.nsent = 0","    ","    self.action = self.env.process(self.run_poisson() )","  ","  def run_poisson(self):","    while 1:","      yield self.env.timeout(random.expovariate(self.ar) )","      self.nsent += 1","      k = self.k_rv.sample()","      demandmean = self.demandperslot_mean_rv.sample()","      coeff_var = 0.7","      self.out.put(Job(","        _id = self.nsent,","        k = k, n = k,","        demandperslot_rv = TNormal(demandmean, demandmean*coeff_var),","        totaldemand = self.totaldemand_rv.sample() ) )","      ","      # if self.nsent >= self.njob:","      #   return","","# #########################################  Worker  ############################################# #","class Worker(object):","  def __init__(self, env, _id, cap, out_c, straggle_m):","    self.env = env","    self._id = _id","    self.cap = cap","    self.out_c = out_c","    self.straggle_m = straggle_m","    ","    self.cap_ = self.cap","    ","    self.timeslot = 1","    self.t_l = []","    env.process(self.run() )","    env.process(self.straggle() )","    ","    self.ntimeslots = 0","    self.avg_load = 0","  ","  def straggle(self):","    sl = self.straggle_m['slowdown']","    straggle_dur_rv = self.straggle_m['straggle_dur_rv']","    normal_dur_v = self.straggle_m['normal_dur_rv']","    while True:","      self.cap_ = self.cap*sl(self.sched_load() )","      yield (self.env.timeout(straggle_dur_rv.sample() ) )","      self.cap_ = self.cap","      yield (self.env.timeout(normal_dur_v.sample() ) )","  ","  def __repr__(self):","    return \"Worker[id= {}]\".format(self._id)","  ","  def sched_cap(self):","    if len(self.t_l) == 0:","      return 0","    return sum([t.reqed for t in self.t_l] )","  ","  def nonsched_cap(self):","    return self.cap - self.sched_cap()","  ","  def sched_load(self):","    return self.sched_cap()/self.cap","  ","  def update_avg_load(self, load):","    self.avg_load = (self.avg_load*(self.ntimeslots-1) + load)/self.ntimeslots","  ","  def run(self):","    while True:","      yield (self.env.timeout(self.timeslot) )","      self.ntimeslots += 1","      if len(self.t_l) == 0:","        self.update_avg_load(0)","        continue","      ","      for p in self.t_l:","        p.gen_demand()","      ","      # CPU scheduling","      cap_ = self.cap_","      sched_cap = self.sched_cap()","      total_supplytaken = 0","      for t in self.t_l:","        total_supplytaken += t.take_supply(min(t.reqed, t.reqed/sched_cap*cap_) )","      ","      t_l_ = self.t_l","      while cap_ - total_supplytaken > 0.01:","        t_l_ = [t for t in t_l_ if t.cum_demand - t.cum_supply > 0.01]","        if len(t_l_) == 0:","          break","        ","        supply_foreach = (cap_ - total_supplytaken)/len(t_l_)","        for t in t_l_:","          total_supplytaken += t.take_supply(supply_foreach)","      self.update_avg_load(self.sched_load() )","      # Check if a task is finished","      t_l_ = []","      for t in self.t_l:","        if t.cum_supply - t.totaldemand > -0.01:","          t.run_time = self.env.now - t.binding_time","          t.prev_hop_id = self._id","          self.out_c.put_c(t)","          slog(DEBUG, self.env, self, \"finished\", t)","        else:","          t_l_.append(t)","      self.t_l = t_l_","  ","  def put(self, t):","    avail_cap = self.nonsched_cap()","    if t.type_ == 's' and t.reqed > avail_cap:","      tred_l = [t for t in self.t_l if t.type_ == 'r']","      i = 0","      while i < len(tred_l) and avail_cap < t.reqed:","        tred = tred_l[i]","        avail_cap += tred.reqed","        self.t_l.remove(tred)","        i += 1","      if avail_cap < t.reqed:","        slog(ERROR, self.env, self, \"could not bind\", t)","        return","    elif t.type_ == 'r' and t.reqed > avail_cap:","      return","    ","    t.binding_time = self.env.now","    self.t_l.append(t)","    slog(DEBUG, self.env, self, \"binded, njob= {}\".format(len(self.t_l) ), t)","  ","  def put_c(self, m):","    slog(DEBUG, self.env, self, \"received\", m)","    ","    if m['message'] == 'remove':","      jid = m['jid']","      ti = None","      for i, t in enumerate(self.t_l):","        if t.jid == jid:","          ti = i","      if ti is not None:","        slog(DEBUG, self.env, self, \"removing\", self.t_l[ti] )","        del self.t_l[ti]","    else:","      log(ERROR, \"Unrecognized message;\", m=m)","","# #########################################  Cluster  ############################################ #","class Cluster(object):","  def __init__(self, env, njob, nworker, wcap, straggle_m, scher, **kwargs):","    self.env = env","    self.njob = njob","    self.nworker = nworker","    self.wcap = wcap","    self.straggle_m = straggle_m","    self.scher = scher","    ","    self.w_l = [Worker(env, i, wcap, self, straggle_m) for i in range(nworker) ]","    ","    self.store = simpy.Store(env)","    env.process(self.run() )","    ","    self.njob_finished = 0","    self.store_c = simpy.Store(env)","    self.wait_for_alljobs = env.process(self.run_c() )","    ","    self.jid__t_l_m = {}","    self.jid_info_m = {}","    ","  def __repr__(self):","    # return 'Cluster[' + '\\n' + \\","    #       '\\t njob= {}'.format(self.njob) + '\\n' + \\","    #       '\\t nworker= {}'.format(self.nworker) + '\\n' + \\","    #       '\\t wcap= {}'.format(self.wcap) + '\\n' + \\","    #       '\\t straggle_m= {}'.format(self.straggle_m) + '\\n' + \\","    #       '\\t scher= {}'.format(self.scher)","    return 'Cluster'","  ","  def run(self):","    while True:","      j = yield self.store.get()","      ","      while True:","        s, a, w_l = self.scher.schedule(j, self.w_l)","        if a == -1:","          slog(DEBUG, self.env, self, \"a = -1\", j)","          yield self.env.timeout(0.1)","        else:","          break","      # self.store.put(j)","      # self.jid_info_m[j._id] = {'fate': 'dropped'}","      ","      self.jid_info_m[j._id] = {'wait_time': self.env.now - j.arrival_time}","      wid_l = []","      for i, w in enumerate(w_l):","        type_ = 's' if i+1 <= j.k else 'r'","        w.put(Task(i+1, j._id, j.reqed, j.demandperslot_rv, j.totaldemand, j.k, type_) )","        wid_l.append(w._id)","      ","      self.jid__t_l_m[j._id] = []","      self.jid_info_m[j._id].update({","        'expected_run_time': j.totaldemand/j.demandperslot_rv.mean(),","        'wid_l': wid_l,","        's': s, 'a': a} )","  ","  def put(self, j):","    slog(DEBUG, self.env, self, \"received\", j)","    # if len(self.store.items) >= 1000:","    #   # slog(WARNING, self.env, self, \">= 1000 tasks are in q! dropping.\", j)","    #   return","    j.arrival_time = self.env.now","    return self.store.put(j)","  ","  def run_c(self):","    while True:","      t = yield self.store_c.get()","      try:","        self.jid__t_l_m[t.jid].append(t)","      except KeyError: # may happen due to a task completion after the corresponding job finishes","        continue","      ","      t_l = self.jid__t_l_m[t.jid]","      if len(t_l) > t.k:","        log(ERROR, \"len(t_l)= {} > k= {}\".format(len(t_l), t.k) )","      elif len(t_l) < t.k:","        continue","      else:","        t_l = self.jid__t_l_m[t.jid]","        wrecvedfrom_id_l = [t.prev_hop_id for t in t_l]","        wsentto_id_l = self.jid_info_m[t.jid]['wid_l']","        for w in self.w_l:","          if w._id in wsentto_id_l and w._id not in wrecvedfrom_id_l:","            w.put_c({'message': 'remove', 'jid': t.jid} )","        ","        self.jid_info_m[t.jid].update({","          'fate': 'finished',","          'run_time': max([t.run_time for t in self.jid__t_l_m[t.jid] ] ) } )","        self.jid__t_l_m.pop(t.jid, None)","        slog(DEBUG, self.env, self, \"finished jid= {}\".format(t.jid), t)","        ","        ## This causes (s1, a1, r1), (s2, a2, r2) to be interleaved by more than one job","        # self.njob_finished += 1","        if t.jid <= self.njob:","          self.njob_finished += 1","          # log(WARNING, \"job completion;\", jid=t.jid, njob=self.njob, njob_finished=self.njob_finished)","          if self.njob_finished >= self.njob:","            return","  ","  def put_c(self, t):","    slog(DEBUG, self.env, self, \"received\", t)","    return self.store_c.put(t)"]}]}],[{"group":"doc","deltas":[{"action":"removeLines","range":{"start":{"row":0,"column":0},"end":{"row":309,"column":0}},"nl":"\n","lines":["import math, random, simpy, pprint","from operator import itemgetter","","from rvs import *","from log_utils import *","","# #######################################  Task  ######################################## #","class Task(object):","  def __init__(self, _id, jid, reqed, demandperslot_rv, totaldemand, k, type_=None):","    self._id = _id","    self.jid = jid","    self.reqed = reqed","    self.demandperslot_rv = demandperslot_rv","    self.totaldemand = totaldemand","    self.k = k","    self.type_ = type_ # 's': systematic, 'r': redundant","    ","    self.demandperslot_rv_mean = demandperslot_rv.mean()","    ","    self.prev_hop_id = None","    self.binding_time = None","    self.run_time = None","    ","    self.cum_supply = 0","    self.cum_demand = 0","  ","  def __repr__(self):","    return \"Task[id= {}, jid= {}, type= {}]\".format(self._id, self.jid, self.type_)","  ","  def gen_demand(self):","    # d = min(self.demandperslot_rv.sample(), self.totaldemand - self.cum_demand)","    d = min(self.demandperslot_rv_mean, self.totaldemand - self.cum_demand)","    self.cum_demand += d","    return d","  ","  def take_supply(self, s):","    s_ = min(self.cum_demand - self.cum_supply, s)","    self.cum_supply += s_","    return s_","","class Job(object):","  def __init__(self, _id, k, n, demandperslot_rv, totaldemand):","    self._id = _id","    self.k = k","    self.n = n","    self.demandperslot_rv = demandperslot_rv","    self.totaldemand = totaldemand","    ","    self.reqed = self.demandperslot_rv.mean()","  ","  def __repr__(self):","    # return \"Job[id= {}]\".format(self._id)","    return \"Job[id= {}, k= {}, totaldemand= {}, reqed= {}]\".format(self._id, self.k, self.totaldemand, self.reqed)","","class JobGen(object):","  def __init__(self, env, ar, demandperslot_mean_rv, totaldemand_rv, k_rv, njob, out, **kwargs):","    self.env = env","    self.ar = ar","    self.demandperslot_mean_rv = demandperslot_mean_rv","    self.totaldemand_rv = totaldemand_rv","    self.k_rv = k_rv","    self.njob = njob","    self.out = out","    ","    self.nsent = 0","    ","    self.action = self.env.process(self.run_poisson() )","  ","  def run_poisson(self):","    while 1:","      yield self.env.timeout(random.expovariate(self.ar) )","      self.nsent += 1","      k = self.k_rv.sample()","      demandmean = self.demandperslot_mean_rv.sample()","      coeff_var = 0.7","      self.out.put(Job(","        _id = self.nsent,","        k = k, n = k,","        demandperslot_rv = TNormal(demandmean, demandmean*coeff_var),","        totaldemand = self.totaldemand_rv.sample() ) )","      ","      # if self.nsent >= self.njob:","      #   return","","# #########################################  Worker  ############################################# #","class Worker(object):","  def __init__(self, env, _id, cap, out_c, straggle_m):","    self.env = env","    self._id = _id","    self.cap = cap","    self.out_c = out_c","    self.straggle_m = straggle_m","    ","    self.cap_ = self.cap","    ","    self.timeslot = 1","    self.t_l = []","    env.process(self.run() )","    env.process(self.straggle() )","    ","    self.ntimeslots = 0","    self.avg_load = 0","  ","  def straggle(self):","    sl = self.straggle_m['slowdown']","    straggle_dur_rv = self.straggle_m['straggle_dur_rv']","    normal_dur_v = self.straggle_m['normal_dur_rv']","    while True:","      self.cap_ = self.cap*sl(self.sched_load() )","      yield (self.env.timeout(straggle_dur_rv.sample() ) )","      self.cap_ = self.cap","      yield (self.env.timeout(normal_dur_v.sample() ) )","  ","  def __repr__(self):","    return \"Worker[id= {}]\".format(self._id)","  ","  def sched_cap(self):","    if len(self.t_l) == 0:","      return 0","    return sum([t.reqed for t in self.t_l] )","  ","  def nonsched_cap(self):","    return self.cap - self.sched_cap()","  ","  def sched_load(self):","    return self.sched_cap()/self.cap","  ","  def update_avg_load(self, load):","    self.avg_load = (self.avg_load*(self.ntimeslots-1) + load)/self.ntimeslots","  ","  def run(self):","    while True:","      yield (self.env.timeout(self.timeslot) )","      self.ntimeslots += 1","      if len(self.t_l) == 0:","        self.update_avg_load(0)","        continue","      ","      for p in self.t_l:","        p.gen_demand()","      ","      # CPU scheduling","      cap_ = self.cap_","      sched_cap = self.sched_cap()","      total_supplytaken = 0","      for t in self.t_l:","        total_supplytaken += t.take_supply(min(t.reqed, t.reqed/sched_cap*cap_) )","      ","      t_l_ = self.t_l","      while cap_ - total_supplytaken > 0.01:","        t_l_ = [t for t in t_l_ if t.cum_demand - t.cum_supply > 0.01]","        if len(t_l_) == 0:","          break","        ","        supply_foreach = (cap_ - total_supplytaken)/len(t_l_)","        for t in t_l_:","          total_supplytaken += t.take_supply(supply_foreach)","      self.update_avg_load(self.sched_load() )","      # Check if a task is finished","      t_l_ = []","      for t in self.t_l:","        if t.cum_supply - t.totaldemand > -0.01:","          t.run_time = self.env.now - t.binding_time","          t.prev_hop_id = self._id","          self.out_c.put_c(t)","          slog(DEBUG, self.env, self, \"finished\", t)","        else:","          t_l_.append(t)","      self.t_l = t_l_","  ","  def put(self, t):","    avail_cap = self.nonsched_cap()","    if t.type_ == 's' and t.reqed > avail_cap:","      tred_l = [t for t in self.t_l if t.type_ == 'r']","      i = 0","      while i < len(tred_l) and avail_cap < t.reqed:","        tred = tred_l[i]","        avail_cap += tred.reqed","        self.t_l.remove(tred)","        i += 1","      if avail_cap < t.reqed:","        slog(ERROR, self.env, self, \"could not bind\", t)","        return","    elif t.type_ == 'r' and t.reqed > avail_cap:","      return","    ","    t.binding_time = self.env.now","    self.t_l.append(t)","    slog(DEBUG, self.env, self, \"binded, njob= {}\".format(len(self.t_l) ), t)","  ","  def put_c(self, m):","    slog(DEBUG, self.env, self, \"received\", m)","    ","    if m['message'] == 'remove':","      jid = m['jid']","      ti = None","      for i, t in enumerate(self.t_l):","        if t.jid == jid:","          ti = i","      if ti is not None:","        slog(DEBUG, self.env, self, \"removing\", self.t_l[ti] )","        del self.t_l[ti]","    else:","      log(ERROR, \"Unrecognized message;\", m=m)","","# #########################################  Cluster  ############################################ #","class Cluster(object):","  def __init__(self, env, njob, nworker, wcap, straggle_m, scher, **kwargs):","    self.env = env","    self.njob = njob","    self.nworker = nworker","    self.wcap = wcap","    self.straggle_m = straggle_m","    self.scher = scher","    ","    self.w_l = [Worker(env, i, wcap, self, straggle_m) for i in range(nworker) ]","    ","    self.store = simpy.Store(env)","    env.process(self.run() )","    ","    self.njob_finished = 0","    self.store_c = simpy.Store(env)","    self.wait_for_alljobs = env.process(self.run_c() )","    ","    self.jid__t_l_m = {}","    self.jid_info_m = {}","    ","  def __repr__(self):","    # return 'Cluster[' + '\\n' + \\","    #       '\\t njob= {}'.format(self.njob) + '\\n' + \\","    #       '\\t nworker= {}'.format(self.nworker) + '\\n' + \\","    #       '\\t wcap= {}'.format(self.wcap) + '\\n' + \\","    #       '\\t straggle_m= {}'.format(self.straggle_m) + '\\n' + \\","    #       '\\t scher= {}'.format(self.scher)","    return 'Cluster'","  ","  def run(self):","    while True:","      j = yield self.store.get()","      ","      while True:","        s, a, w_l = self.scher.schedule(j, self.w_l)","        if a == -1:","          slog(DEBUG, self.env, self, \"a = -1\", j)","          yield self.env.timeout(0.1)","        else:","          break","      # self.store.put(j)","      # self.jid_info_m[j._id] = {'fate': 'dropped'}","      ","      self.jid_info_m[j._id] = {'wait_time': self.env.now - j.arrival_time}","      wid_l = []","      for i, w in enumerate(w_l):","        type_ = 's' if i+1 <= j.k else 'r'","        w.put(Task(i+1, j._id, j.reqed, j.demandperslot_rv, j.totaldemand, j.k, type_) )","        wid_l.append(w._id)","      ","      self.jid__t_l_m[j._id] = []","      self.jid_info_m[j._id].update({","        'expected_run_time': j.totaldemand/j.demandperslot_rv.mean(),","        'wid_l': wid_l,","        's': s, 'a': a} )","  ","  def put(self, j):","    slog(DEBUG, self.env, self, \"received\", j)","    # if len(self.store.items) >= 1000:","    #   # slog(WARNING, self.env, self, \">= 1000 tasks are in q! dropping.\", j)","    #   return","    j.arrival_time = self.env.now","    return self.store.put(j)","  ","  def run_c(self):","    while True:","      t = yield self.store_c.get()","      try:","        self.jid__t_l_m[t.jid].append(t)","      except KeyError: # may happen due to a task completion after the corresponding job finishes","        continue","      ","      t_l = self.jid__t_l_m[t.jid]","      if len(t_l) > t.k:","        log(ERROR, \"len(t_l)= {} > k= {}\".format(len(t_l), t.k) )","      elif len(t_l) < t.k:","        continue","      else:","        t_l = self.jid__t_l_m[t.jid]","        wrecvedfrom_id_l = [t.prev_hop_id for t in t_l]","        wsentto_id_l = self.jid_info_m[t.jid]['wid_l']","        for w in self.w_l:","          if w._id in wsentto_id_l and w._id not in wrecvedfrom_id_l:","            w.put_c({'message': 'remove', 'jid': t.jid} )","        ","        self.jid_info_m[t.jid].update({","          'fate': 'finished',","          'run_time': max([t.run_time for t in self.jid__t_l_m[t.jid] ] ) } )","        self.jid__t_l_m.pop(t.jid, None)","        slog(DEBUG, self.env, self, \"finished jid= {}\".format(t.jid), t)","        ","        ## This causes (s1, a1, r1), (s2, a2, r2) to be interleaved by more than one job","        # self.njob_finished += 1","        if t.jid <= self.njob:","          self.njob_finished += 1","          # log(WARNING, \"job completion;\", jid=t.jid, njob=self.njob, njob_finished=self.njob_finished)","          if self.njob_finished >= self.njob:","            return","  ","  def put_c(self, t):","    slog(DEBUG, self.env, self, \"received\", t)","    return self.store_c.put(t)"]},{"action":"insertText","range":{"start":{"row":0,"column":0},"end":{"row":0,"column":34}},"text":"import math, random, simpy, pprint"},{"action":"insertText","range":{"start":{"row":0,"column":34},"end":{"row":1,"column":0}},"text":"\n"},{"action":"insertLines","range":{"start":{"row":1,"column":0},"end":{"row":309,"column":0}},"lines":["from operator import itemgetter","","from rvs import *","from log_utils import *","","# #######################################  Task  ######################################## #","class Task(object):","  def __init__(self, _id, jid, reqed, demandperslot_rv, totaldemand, k, type_=None):","    self._id = _id","    self.jid = jid","    self.reqed = reqed","    self.demandperslot_rv = demandperslot_rv","    self.totaldemand = totaldemand","    self.k = k","    self.type_ = type_ # 's': systematic, 'r': redundant","    ","    self.demandperslot_rv_mean = demandperslot_rv.mean()","    ","    self.prev_hop_id = None","    self.binding_time = None","    self.run_time = None","    ","    self.cum_supply = 0","    self.cum_demand = 0","  ","  def __repr__(self):","    return \"Task[id= {}, jid= {}, type= {}]\".format(self._id, self.jid, self.type_)","  ","  def gen_demand(self):","    # d = min(self.demandperslot_rv.sample(), self.totaldemand - self.cum_demand)","    d = min(self.demandperslot_rv_mean, self.totaldemand - self.cum_demand)","    self.cum_demand += d","    return d","  ","  def take_supply(self, s):","    s_ = min(self.cum_demand - self.cum_supply, s)","    self.cum_supply += s_","    return s_","","class Job(object):","  def __init__(self, _id, k, n, demandperslot_rv, totaldemand):","    self._id = _id","    self.k = k","    self.n = n","    self.demandperslot_rv = demandperslot_rv","    self.totaldemand = totaldemand","    ","    self.reqed = self.demandperslot_rv.mean()","  ","  def __repr__(self):","    # return \"Job[id= {}]\".format(self._id)","    return \"Job[id= {}, k= {}, totaldemand= {}, reqed= {}]\".format(self._id, self.k, self.totaldemand, self.reqed)","","class JobGen(object):","  def __init__(self, env, ar, demandperslot_mean_rv, totaldemand_rv, k_rv, njob, out, **kwargs):","    self.env = env","    self.ar = ar","    self.demandperslot_mean_rv = demandperslot_mean_rv","    self.totaldemand_rv = totaldemand_rv","    self.k_rv = k_rv","    self.njob = njob","    self.out = out","    ","    self.nsent = 0","    ","    self.action = self.env.process(self.run_poisson() )","  ","  def run_poisson(self):","    while 1:","      yield self.env.timeout(random.expovariate(self.ar) )","      self.nsent += 1","      k = self.k_rv.sample()","      demandmean = self.demandperslot_mean_rv.sample()","      coeff_var = 0.7","      self.out.put(Job(","        _id = self.nsent,","        k = k, n = k,","        demandperslot_rv = TNormal(demandmean, demandmean*coeff_var),","        totaldemand = self.totaldemand_rv.sample() ) )","      ","      # if self.nsent >= self.njob:","      #   return","","# #########################################  Worker  ############################################# #","class Worker(object):","  def __init__(self, env, _id, cap, out_c, straggle_m):","    self.env = env","    self._id = _id","    self.cap = cap","    self.out_c = out_c","    self.straggle_m = straggle_m","    ","    self.cap_ = self.cap","    ","    self.timeslot = 1","    self.t_l = []","    env.process(self.run() )","    env.process(self.straggle() )","    ","    self.ntimeslots = 0","    self.avg_load = 0","  ","  def straggle(self):","    sl = self.straggle_m['slowdown']","    straggle_dur_rv = self.straggle_m['straggle_dur_rv']","    normal_dur_v = self.straggle_m['normal_dur_rv']","    while True:","      self.cap_ = self.cap*sl(self.sched_load() )","      yield (self.env.timeout(straggle_dur_rv.sample() ) )","      self.cap_ = self.cap","      yield (self.env.timeout(normal_dur_v.sample() ) )","  ","  def __repr__(self):","    return \"Worker[id= {}]\".format(self._id)","  ","  def sched_cap(self):","    if len(self.t_l) == 0:","      return 0","    return sum([t.reqed for t in self.t_l] )","  ","  def nonsched_cap(self):","    return self.cap - self.sched_cap()","  ","  def sched_load(self):","    return self.sched_cap()/self.cap","  ","  def update_avg_load(self, load):","    self.avg_load = (self.avg_load*(self.ntimeslots-1) + load)/self.ntimeslots","  ","  def run(self):","    while True:","      yield (self.env.timeout(self.timeslot) )","      self.ntimeslots += 1","      if len(self.t_l) == 0:","        self.update_avg_load(0)","        continue","      ","      for p in self.t_l:","        p.gen_demand()","      ","      # CPU scheduling","      cap_ = self.cap_","      sched_cap = self.sched_cap()","      total_supplytaken = 0","      for t in self.t_l:","        total_supplytaken += t.take_supply(min(t.reqed, t.reqed/sched_cap*cap_) )","      ","      t_l_ = self.t_l","      while cap_ - total_supplytaken > 0.01:","        t_l_ = [t for t in t_l_ if t.cum_demand - t.cum_supply > 0.01]","        if len(t_l_) == 0:","          break","        ","        supply_foreach = (cap_ - total_supplytaken)/len(t_l_)","        for t in t_l_:","          total_supplytaken += t.take_supply(supply_foreach)","      self.update_avg_load(self.sched_load() )","      # Check if a task is finished","      t_l_ = []","      for t in self.t_l:","        if t.cum_supply - t.totaldemand > -0.01:","          t.run_time = self.env.now - t.binding_time","          t.prev_hop_id = self._id","          self.out_c.put_c(t)","          slog(DEBUG, self.env, self, \"finished\", t)","        else:","          t_l_.append(t)","      self.t_l = t_l_","  ","  def put(self, t):","    avail_cap = self.nonsched_cap()","    if t.type_ == 's' and t.reqed > avail_cap:","      tred_l = [t for t in self.t_l if t.type_ == 'r']","      i = 0","      while i < len(tred_l) and avail_cap < t.reqed:","        tred = tred_l[i]","        avail_cap += tred.reqed","        self.t_l.remove(tred)","        i += 1","      if avail_cap < t.reqed:","        slog(ERROR, self.env, self, \"could not bind\", t)","        return","    elif t.type_ == 'r' and t.reqed > avail_cap:","      return","    ","    t.binding_time = self.env.now","    self.t_l.append(t)","    slog(DEBUG, self.env, self, \"binded, njob= {}\".format(len(self.t_l) ), t)","  ","  def put_c(self, m):","    slog(DEBUG, self.env, self, \"received\", m)","    ","    if m['message'] == 'remove':","      jid = m['jid']","      ti = None","      for i, t in enumerate(self.t_l):","        if t.jid == jid:","          ti = i","      if ti is not None:","        slog(DEBUG, self.env, self, \"removing\", self.t_l[ti] )","        del self.t_l[ti]","    else:","      log(ERROR, \"Unrecognized message;\", m=m)","","# #########################################  Cluster  ############################################ #","class Cluster(object):","  def __init__(self, env, njob, nworker, wcap, straggle_m, scher, **kwargs):","    self.env = env","    self.njob = njob","    self.nworker = nworker","    self.wcap = wcap","    self.straggle_m = straggle_m","    self.scher = scher","    ","    self.w_l = [Worker(env, i, wcap, self, straggle_m) for i in range(nworker) ]","    ","    self.store = simpy.Store(env)","    env.process(self.run() )","    ","    self.njob_finished = 0","    self.store_c = simpy.Store(env)","    self.wait_for_alljobs = env.process(self.run_c() )","    ","    self.jid__t_l_m = {}","    self.jid_info_m = {}","    ","  def __repr__(self):","    # return 'Cluster[' + '\\n' + \\","    #       '\\t njob= {}'.format(self.njob) + '\\n' + \\","    #       '\\t nworker= {}'.format(self.nworker) + '\\n' + \\","    #       '\\t wcap= {}'.format(self.wcap) + '\\n' + \\","    #       '\\t straggle_m= {}'.format(self.straggle_m) + '\\n' + \\","    #       '\\t scher= {}'.format(self.scher)","    return 'Cluster'","  ","  def run(self):","    while True:","      j = yield self.store.get()","      ","      while True:","        s, a, w_l = self.scher.schedule(j, self.w_l)","        if a == -1:","          slog(DEBUG, self.env, self, \"a = -1\", j)","          yield self.env.timeout(0.1)","        else:","          break","      # self.store.put(j)","      # self.jid_info_m[j._id] = {'fate': 'dropped'}","      ","      self.jid_info_m[j._id] = {'wait_time': self.env.now - j.arrival_time}","      wid_l = []","      for i, w in enumerate(w_l):","        type_ = 's' if i+1 <= j.k else 'r'","        w.put(Task(i+1, j._id, j.reqed, j.demandperslot_rv, j.totaldemand, j.k, type_) )","        wid_l.append(w._id)","      ","      self.jid__t_l_m[j._id] = []","      self.jid_info_m[j._id].update({","        'expected_run_time': j.totaldemand/j.demandperslot_rv.mean(),","        'wid_l': wid_l,","        's': s, 'a': a} )","  ","  def put(self, j):","    slog(DEBUG, self.env, self, \"received\", j)","    if len(self.store.items) >= 1000:","      # slog(WARNING, self.env, self, \">= 1000 tasks are in q! dropping.\", j)","      return","    j.arrival_time = self.env.now","    return self.store.put(j)","  ","  def run_c(self):","    while True:","      t = yield self.store_c.get()","      try:","        self.jid__t_l_m[t.jid].append(t)","      except KeyError: # may happen due to a task completion after the corresponding job finishes","        continue","      ","      t_l = self.jid__t_l_m[t.jid]","      if len(t_l) > t.k:","        log(ERROR, \"len(t_l)= {} > k= {}\".format(len(t_l), t.k) )","      elif len(t_l) < t.k:","        continue","      else:","        t_l = self.jid__t_l_m[t.jid]","        wrecvedfrom_id_l = [t.prev_hop_id for t in t_l]","        wsentto_id_l = self.jid_info_m[t.jid]['wid_l']","        for w in self.w_l:","          if w._id in wsentto_id_l and w._id not in wrecvedfrom_id_l:","            w.put_c({'message': 'remove', 'jid': t.jid} )","        ","        self.jid_info_m[t.jid].update({","          'fate': 'finished',","          'run_time': max([t.run_time for t in self.jid__t_l_m[t.jid] ] ) } )","        self.jid__t_l_m.pop(t.jid, None)","        slog(DEBUG, self.env, self, \"finished jid= {}\".format(t.jid), t)","        ","        ## This causes (s1, a1, r1), (s2, a2, r2) to be interleaved by more than one job","        # self.njob_finished += 1","        if t.jid <= self.njob:","          self.njob_finished += 1","          # log(WARNING, \"job completion;\", jid=t.jid, njob=self.njob, njob_finished=self.njob_finished)","          if self.njob_finished >= self.njob:","            return","  ","  def put_c(self, t):","    slog(DEBUG, self.env, self, \"received\", t)","    return self.store_c.put(t)"]}]}],[{"group":"doc","deltas":[{"action":"removeLines","range":{"start":{"row":0,"column":0},"end":{"row":309,"column":0}},"nl":"\n","lines":["import math, random, simpy, pprint","from operator import itemgetter","","from rvs import *","from log_utils import *","","# #######################################  Task  ######################################## #","class Task(object):","  def __init__(self, _id, jid, reqed, demandperslot_rv, totaldemand, k, type_=None):","    self._id = _id","    self.jid = jid","    self.reqed = reqed","    self.demandperslot_rv = demandperslot_rv","    self.totaldemand = totaldemand","    self.k = k","    self.type_ = type_ # 's': systematic, 'r': redundant","    ","    self.demandperslot_rv_mean = demandperslot_rv.mean()","    ","    self.prev_hop_id = None","    self.binding_time = None","    self.run_time = None","    ","    self.cum_supply = 0","    self.cum_demand = 0","  ","  def __repr__(self):","    return \"Task[id= {}, jid= {}, type= {}]\".format(self._id, self.jid, self.type_)","  ","  def gen_demand(self):","    # d = min(self.demandperslot_rv.sample(), self.totaldemand - self.cum_demand)","    d = min(self.demandperslot_rv_mean, self.totaldemand - self.cum_demand)","    self.cum_demand += d","    return d","  ","  def take_supply(self, s):","    s_ = min(self.cum_demand - self.cum_supply, s)","    self.cum_supply += s_","    return s_","","class Job(object):","  def __init__(self, _id, k, n, demandperslot_rv, totaldemand):","    self._id = _id","    self.k = k","    self.n = n","    self.demandperslot_rv = demandperslot_rv","    self.totaldemand = totaldemand","    ","    self.reqed = self.demandperslot_rv.mean()","  ","  def __repr__(self):","    # return \"Job[id= {}]\".format(self._id)","    return \"Job[id= {}, k= {}, totaldemand= {}, reqed= {}]\".format(self._id, self.k, self.totaldemand, self.reqed)","","class JobGen(object):","  def __init__(self, env, ar, demandperslot_mean_rv, totaldemand_rv, k_rv, njob, out, **kwargs):","    self.env = env","    self.ar = ar","    self.demandperslot_mean_rv = demandperslot_mean_rv","    self.totaldemand_rv = totaldemand_rv","    self.k_rv = k_rv","    self.njob = njob","    self.out = out","    ","    self.nsent = 0","    ","    self.action = self.env.process(self.run_poisson() )","  ","  def run_poisson(self):","    while 1:","      yield self.env.timeout(random.expovariate(self.ar) )","      self.nsent += 1","      k = self.k_rv.sample()","      demandmean = self.demandperslot_mean_rv.sample()","      coeff_var = 0.7","      self.out.put(Job(","        _id = self.nsent,","        k = k, n = k,","        demandperslot_rv = TNormal(demandmean, demandmean*coeff_var),","        totaldemand = self.totaldemand_rv.sample() ) )","      ","      # if self.nsent >= self.njob:","      #   return","","# #########################################  Worker  ############################################# #","class Worker(object):","  def __init__(self, env, _id, cap, out_c, straggle_m):","    self.env = env","    self._id = _id","    self.cap = cap","    self.out_c = out_c","    self.straggle_m = straggle_m","    ","    self.cap_ = self.cap","    ","    self.timeslot = 1","    self.t_l = []","    env.process(self.run() )","    env.process(self.straggle() )","    ","    self.ntimeslots = 0","    self.avg_load = 0","  ","  def straggle(self):","    sl = self.straggle_m['slowdown']","    straggle_dur_rv = self.straggle_m['straggle_dur_rv']","    normal_dur_v = self.straggle_m['normal_dur_rv']","    while True:","      self.cap_ = self.cap*sl(self.sched_load() )","      yield (self.env.timeout(straggle_dur_rv.sample() ) )","      self.cap_ = self.cap","      yield (self.env.timeout(normal_dur_v.sample() ) )","  ","  def __repr__(self):","    return \"Worker[id= {}]\".format(self._id)","  ","  def sched_cap(self):","    if len(self.t_l) == 0:","      return 0","    return sum([t.reqed for t in self.t_l] )","  ","  def nonsched_cap(self):","    return self.cap - self.sched_cap()","  ","  def sched_load(self):","    return self.sched_cap()/self.cap","  ","  def update_avg_load(self, load):","    self.avg_load = (self.avg_load*(self.ntimeslots-1) + load)/self.ntimeslots","  ","  def run(self):","    while True:","      yield (self.env.timeout(self.timeslot) )","      self.ntimeslots += 1","      if len(self.t_l) == 0:","        self.update_avg_load(0)","        continue","      ","      for p in self.t_l:","        p.gen_demand()","      ","      # CPU scheduling","      cap_ = self.cap_","      sched_cap = self.sched_cap()","      total_supplytaken = 0","      for t in self.t_l:","        total_supplytaken += t.take_supply(min(t.reqed, t.reqed/sched_cap*cap_) )","      ","      t_l_ = self.t_l","      while cap_ - total_supplytaken > 0.01:","        t_l_ = [t for t in t_l_ if t.cum_demand - t.cum_supply > 0.01]","        if len(t_l_) == 0:","          break","        ","        supply_foreach = (cap_ - total_supplytaken)/len(t_l_)","        for t in t_l_:","          total_supplytaken += t.take_supply(supply_foreach)","      self.update_avg_load(self.sched_load() )","      # Check if a task is finished","      t_l_ = []","      for t in self.t_l:","        if t.cum_supply - t.totaldemand > -0.01:","          t.run_time = self.env.now - t.binding_time","          t.prev_hop_id = self._id","          self.out_c.put_c(t)","          slog(DEBUG, self.env, self, \"finished\", t)","        else:","          t_l_.append(t)","      self.t_l = t_l_","  ","  def put(self, t):","    avail_cap = self.nonsched_cap()","    if t.type_ == 's' and t.reqed > avail_cap:","      tred_l = [t for t in self.t_l if t.type_ == 'r']","      i = 0","      while i < len(tred_l) and avail_cap < t.reqed:","        tred = tred_l[i]","        avail_cap += tred.reqed","        self.t_l.remove(tred)","        i += 1","      if avail_cap < t.reqed:","        slog(ERROR, self.env, self, \"could not bind\", t)","        return","    elif t.type_ == 'r' and t.reqed > avail_cap:","      return","    ","    t.binding_time = self.env.now","    self.t_l.append(t)","    slog(DEBUG, self.env, self, \"binded, njob= {}\".format(len(self.t_l) ), t)","  ","  def put_c(self, m):","    slog(DEBUG, self.env, self, \"received\", m)","    ","    if m['message'] == 'remove':","      jid = m['jid']","      ti = None","      for i, t in enumerate(self.t_l):","        if t.jid == jid:","          ti = i","      if ti is not None:","        slog(DEBUG, self.env, self, \"removing\", self.t_l[ti] )","        del self.t_l[ti]","    else:","      log(ERROR, \"Unrecognized message;\", m=m)","","# #########################################  Cluster  ############################################ #","class Cluster(object):","  def __init__(self, env, njob, nworker, wcap, straggle_m, scher, **kwargs):","    self.env = env","    self.njob = njob","    self.nworker = nworker","    self.wcap = wcap","    self.straggle_m = straggle_m","    self.scher = scher","    ","    self.w_l = [Worker(env, i, wcap, self, straggle_m) for i in range(nworker) ]","    ","    self.store = simpy.Store(env)","    env.process(self.run() )","    ","    self.njob_finished = 0","    self.store_c = simpy.Store(env)","    self.wait_for_alljobs = env.process(self.run_c() )","    ","    self.jid__t_l_m = {}","    self.jid_info_m = {}","    ","  def __repr__(self):","    # return 'Cluster[' + '\\n' + \\","    #       '\\t njob= {}'.format(self.njob) + '\\n' + \\","    #       '\\t nworker= {}'.format(self.nworker) + '\\n' + \\","    #       '\\t wcap= {}'.format(self.wcap) + '\\n' + \\","    #       '\\t straggle_m= {}'.format(self.straggle_m) + '\\n' + \\","    #       '\\t scher= {}'.format(self.scher)","    return 'Cluster'","  ","  def run(self):","    while True:","      j = yield self.store.get()","      ","      while True:","        s, a, w_l = self.scher.schedule(j, self.w_l)","        if a == -1:","          slog(DEBUG, self.env, self, \"a = -1\", j)","          yield self.env.timeout(0.1)","        else:","          break","      # self.store.put(j)","      # self.jid_info_m[j._id] = {'fate': 'dropped'}","      ","      self.jid_info_m[j._id] = {'wait_time': self.env.now - j.arrival_time}","      wid_l = []","      for i, w in enumerate(w_l):","        type_ = 's' if i+1 <= j.k else 'r'","        w.put(Task(i+1, j._id, j.reqed, j.demandperslot_rv, j.totaldemand, j.k, type_) )","        wid_l.append(w._id)","      ","      self.jid__t_l_m[j._id] = []","      self.jid_info_m[j._id].update({","        'expected_run_time': j.totaldemand/j.demandperslot_rv.mean(),","        'wid_l': wid_l,","        's': s, 'a': a} )","  ","  def put(self, j):","    slog(DEBUG, self.env, self, \"received\", j)","    if len(self.store.items) >= 1000:","      # slog(WARNING, self.env, self, \">= 1000 tasks are in q! dropping.\", j)","      return","    j.arrival_time = self.env.now","    return self.store.put(j)","  ","  def run_c(self):","    while True:","      t = yield self.store_c.get()","      try:","        self.jid__t_l_m[t.jid].append(t)","      except KeyError: # may happen due to a task completion after the corresponding job finishes","        continue","      ","      t_l = self.jid__t_l_m[t.jid]","      if len(t_l) > t.k:","        log(ERROR, \"len(t_l)= {} > k= {}\".format(len(t_l), t.k) )","      elif len(t_l) < t.k:","        continue","      else:","        t_l = self.jid__t_l_m[t.jid]","        wrecvedfrom_id_l = [t.prev_hop_id for t in t_l]","        wsentto_id_l = self.jid_info_m[t.jid]['wid_l']","        for w in self.w_l:","          if w._id in wsentto_id_l and w._id not in wrecvedfrom_id_l:","            w.put_c({'message': 'remove', 'jid': t.jid} )","        ","        self.jid_info_m[t.jid].update({","          'fate': 'finished',","          'run_time': max([t.run_time for t in self.jid__t_l_m[t.jid] ] ) } )","        self.jid__t_l_m.pop(t.jid, None)","        slog(DEBUG, self.env, self, \"finished jid= {}\".format(t.jid), t)","        ","        ## This causes (s1, a1, r1), (s2, a2, r2) to be interleaved by more than one job","        # self.njob_finished += 1","        if t.jid <= self.njob:","          self.njob_finished += 1","          # log(WARNING, \"job completion;\", jid=t.jid, njob=self.njob, njob_finished=self.njob_finished)","          if self.njob_finished >= self.njob:","            return","  ","  def put_c(self, t):","    slog(DEBUG, self.env, self, \"received\", t)","    return self.store_c.put(t)"]},{"action":"insertText","range":{"start":{"row":0,"column":0},"end":{"row":0,"column":34}},"text":"import math, random, simpy, pprint"},{"action":"insertText","range":{"start":{"row":0,"column":34},"end":{"row":1,"column":0}},"text":"\n"},{"action":"insertLines","range":{"start":{"row":1,"column":0},"end":{"row":309,"column":0}},"lines":["from operator import itemgetter","","from rvs import *","from log_utils import *","","# #######################################  Task  ######################################## #","class Task(object):","  def __init__(self, _id, jid, reqed, demandperslot_rv, totaldemand, k, type_=None):","    self._id = _id","    self.jid = jid","    self.reqed = reqed","    self.demandperslot_rv = demandperslot_rv","    self.totaldemand = totaldemand","    self.k = k","    self.type_ = type_ # 's': systematic, 'r': redundant","    ","    self.demandperslot_rv_mean = demandperslot_rv.mean()","    ","    self.prev_hop_id = None","    self.binding_time = None","    self.run_time = None","    ","    self.cum_supply = 0","    self.cum_demand = 0","  ","  def __repr__(self):","    return \"Task[id= {}, jid= {}, type= {}]\".format(self._id, self.jid, self.type_)","  ","  def gen_demand(self):","    # d = min(self.demandperslot_rv.sample(), self.totaldemand - self.cum_demand)","    d = min(self.demandperslot_rv_mean, self.totaldemand - self.cum_demand)","    self.cum_demand += d","    return d","  ","  def take_supply(self, s):","    s_ = min(self.cum_demand - self.cum_supply, s)","    self.cum_supply += s_","    return s_","","class Job(object):","  def __init__(self, _id, k, n, demandperslot_rv, totaldemand):","    self._id = _id","    self.k = k","    self.n = n","    self.demandperslot_rv = demandperslot_rv","    self.totaldemand = totaldemand","    ","    self.reqed = self.demandperslot_rv.mean()","  ","  def __repr__(self):","    # return \"Job[id= {}]\".format(self._id)","    return \"Job[id= {}, k= {}, totaldemand= {}, reqed= {}]\".format(self._id, self.k, self.totaldemand, self.reqed)","","class JobGen(object):","  def __init__(self, env, ar, demandperslot_mean_rv, totaldemand_rv, k_rv, njob, out, **kwargs):","    self.env = env","    self.ar = ar","    self.demandperslot_mean_rv = demandperslot_mean_rv","    self.totaldemand_rv = totaldemand_rv","    self.k_rv = k_rv","    self.njob = njob","    self.out = out","    ","    self.nsent = 0","    ","    self.action = self.env.process(self.run_poisson() )","  ","  def run_poisson(self):","    while 1:","      yield self.env.timeout(random.expovariate(self.ar) )","      self.nsent += 1","      k = self.k_rv.sample()","      demandmean = self.demandperslot_mean_rv.sample()","      coeff_var = 0.7","      self.out.put(Job(","        _id = self.nsent,","        k = k, n = k,","        demandperslot_rv = TNormal(demandmean, demandmean*coeff_var),","        totaldemand = self.totaldemand_rv.sample() ) )","      ","      # if self.nsent >= self.njob:","      #   return","","# #########################################  Worker  ############################################# #","class Worker(object):","  def __init__(self, env, _id, cap, out_c, straggle_m):","    self.env = env","    self._id = _id","    self.cap = cap","    self.out_c = out_c","    self.straggle_m = straggle_m","    ","    self.cap_ = self.cap","    ","    self.timeslot = 1","    self.t_l = []","    env.process(self.run() )","    env.process(self.straggle() )","    ","    self.ntimeslots = 0","    self.avg_load = 0","  ","  def straggle(self):","    sl = self.straggle_m['slowdown']","    straggle_dur_rv = self.straggle_m['straggle_dur_rv']","    normal_dur_v = self.straggle_m['normal_dur_rv']","    while True:","      self.cap_ = self.cap*sl(self.sched_load() )","      yield (self.env.timeout(straggle_dur_rv.sample() ) )","      self.cap_ = self.cap","      yield (self.env.timeout(normal_dur_v.sample() ) )","  ","  def __repr__(self):","    return \"Worker[id= {}]\".format(self._id)","  ","  def sched_cap(self):","    if len(self.t_l) == 0:","      return 0","    return sum([t.reqed for t in self.t_l] )","  ","  def nonsched_cap(self):","    return self.cap - self.sched_cap()","  ","  def sched_load(self):","    return self.sched_cap()/self.cap","  ","  def update_avg_load(self, load):","    self.avg_load = (self.avg_load*(self.ntimeslots-1) + load)/self.ntimeslots","  ","  def run(self):","    while True:","      yield (self.env.timeout(self.timeslot) )","      self.ntimeslots += 1","      if len(self.t_l) == 0:","        self.update_avg_load(0)","        continue","      ","      for p in self.t_l:","        p.gen_demand()","      ","      # CPU scheduling","      cap_ = self.cap_","      sched_cap = self.sched_cap()","      total_supplytaken = 0","      for t in self.t_l:","        total_supplytaken += t.take_supply(min(t.reqed, t.reqed/sched_cap*cap_) )","      ","      t_l_ = self.t_l","      while cap_ - total_supplytaken > 0.01:","        t_l_ = [t for t in t_l_ if t.cum_demand - t.cum_supply > 0.01]","        if len(t_l_) == 0:","          break","        ","        supply_foreach = (cap_ - total_supplytaken)/len(t_l_)","        for t in t_l_:","          total_supplytaken += t.take_supply(supply_foreach)","      self.update_avg_load(self.sched_load() )","      # Check if a task is finished","      t_l_ = []","      for t in self.t_l:","        if t.cum_supply - t.totaldemand > -0.01:","          t.run_time = self.env.now - t.binding_time","          t.prev_hop_id = self._id","          self.out_c.put_c(t)","          slog(DEBUG, self.env, self, \"finished\", t)","        else:","          t_l_.append(t)","      self.t_l = t_l_","  ","  def put(self, t):","    avail_cap = self.nonsched_cap()","    if t.type_ == 's' and t.reqed > avail_cap:","      tred_l = [t for t in self.t_l if t.type_ == 'r']","      i = 0","      while i < len(tred_l) and avail_cap < t.reqed:","        tred = tred_l[i]","        avail_cap += tred.reqed","        self.t_l.remove(tred)","        i += 1","      if avail_cap < t.reqed:","        slog(ERROR, self.env, self, \"could not bind\", t)","        return","    elif t.type_ == 'r' and t.reqed > avail_cap:","      return","    ","    t.binding_time = self.env.now","    self.t_l.append(t)","    slog(DEBUG, self.env, self, \"binded, njob= {}\".format(len(self.t_l) ), t)","  ","  def put_c(self, m):","    slog(DEBUG, self.env, self, \"received\", m)","    ","    if m['message'] == 'remove':","      jid = m['jid']","      ti = None","      for i, t in enumerate(self.t_l):","        if t.jid == jid:","          ti = i","      if ti is not None:","        slog(DEBUG, self.env, self, \"removing\", self.t_l[ti] )","        del self.t_l[ti]","    else:","      log(ERROR, \"Unrecognized message;\", m=m)","","# #########################################  Cluster  ############################################ #","class Cluster(object):","  def __init__(self, env, njob, nworker, wcap, straggle_m, scher, **kwargs):","    self.env = env","    self.njob = njob","    self.nworker = nworker","    self.wcap = wcap","    self.straggle_m = straggle_m","    self.scher = scher","    ","    self.w_l = [Worker(env, i, wcap, self, straggle_m) for i in range(nworker) ]","    ","    self.store = simpy.Store(env)","    env.process(self.run() )","    ","    self.njob_finished = 0","    self.store_c = simpy.Store(env)","    self.wait_for_alljobs = env.process(self.run_c() )","    ","    self.jid__t_l_m = {}","    self.jid_info_m = {}","    ","  def __repr__(self):","    # return 'Cluster[' + '\\n' + \\","    #       '\\t njob= {}'.format(self.njob) + '\\n' + \\","    #       '\\t nworker= {}'.format(self.nworker) + '\\n' + \\","    #       '\\t wcap= {}'.format(self.wcap) + '\\n' + \\","    #       '\\t straggle_m= {}'.format(self.straggle_m) + '\\n' + \\","    #       '\\t scher= {}'.format(self.scher)","    return 'Cluster'","  ","  def run(self):","    while True:","      j = yield self.store.get()","      ","      while True:","        s, a, w_l = self.scher.schedule(j, self.w_l)","        if a == -1:","          slog(DEBUG, self.env, self, \"a = -1\", j)","          yield self.env.timeout(0.1)","        else:","          break","      # self.store.put(j)","      # self.jid_info_m[j._id] = {'fate': 'dropped'}","      ","      self.jid_info_m[j._id] = {'wait_time': self.env.now - j.arrival_time}","      wid_l = []","      for i, w in enumerate(w_l):","        type_ = 's' if i+1 <= j.k else 'r'","        w.put(Task(i+1, j._id, j.reqed, j.demandperslot_rv, j.totaldemand, j.k, type_) )","        wid_l.append(w._id)","      ","      self.jid__t_l_m[j._id] = []","      self.jid_info_m[j._id].update({","        'expected_run_time': j.totaldemand/j.demandperslot_rv.mean(),","        'wid_l': wid_l,","        's': s, 'a': a} )","  ","  def put(self, j):","    slog(DEBUG, self.env, self, \"received\", j)","    # if len(self.store.items) >= 1000:","    #   # slog(WARNING, self.env, self, \">= 1000 tasks are in q! dropping.\", j)","    #   return","    j.arrival_time = self.env.now","    return self.store.put(j)","  ","  def run_c(self):","    while True:","      t = yield self.store_c.get()","      try:","        self.jid__t_l_m[t.jid].append(t)","      except KeyError: # may happen due to a task completion after the corresponding job finishes","        continue","      ","      t_l = self.jid__t_l_m[t.jid]","      if len(t_l) > t.k:","        log(ERROR, \"len(t_l)= {} > k= {}\".format(len(t_l), t.k) )","      elif len(t_l) < t.k:","        continue","      else:","        t_l = self.jid__t_l_m[t.jid]","        wrecvedfrom_id_l = [t.prev_hop_id for t in t_l]","        wsentto_id_l = self.jid_info_m[t.jid]['wid_l']","        for w in self.w_l:","          if w._id in wsentto_id_l and w._id not in wrecvedfrom_id_l:","            w.put_c({'message': 'remove', 'jid': t.jid} )","        ","        self.jid_info_m[t.jid].update({","          'fate': 'finished',","          'run_time': max([t.run_time for t in self.jid__t_l_m[t.jid] ] ) } )","        self.jid__t_l_m.pop(t.jid, None)","        slog(DEBUG, self.env, self, \"finished jid= {}\".format(t.jid), t)","        ","        ## This causes (s1, a1, r1), (s2, a2, r2) to be interleaved by more than one job","        # self.njob_finished += 1","        if t.jid <= self.njob:","          self.njob_finished += 1","          # log(WARNING, \"job completion;\", jid=t.jid, njob=self.njob, njob_finished=self.njob_finished)","          if self.njob_finished >= self.njob:","            return","  ","  def put_c(self, t):","    slog(DEBUG, self.env, self, \"received\", t)","    return self.store_c.put(t)"]}]}],[{"group":"doc","deltas":[{"action":"removeLines","range":{"start":{"row":0,"column":0},"end":{"row":309,"column":0}},"nl":"\n","lines":["import math, random, simpy, pprint","from operator import itemgetter","","from rvs import *","from log_utils import *","","# #######################################  Task  ######################################## #","class Task(object):","  def __init__(self, _id, jid, reqed, demandperslot_rv, totaldemand, k, type_=None):","    self._id = _id","    self.jid = jid","    self.reqed = reqed","    self.demandperslot_rv = demandperslot_rv","    self.totaldemand = totaldemand","    self.k = k","    self.type_ = type_ # 's': systematic, 'r': redundant","    ","    self.demandperslot_rv_mean = demandperslot_rv.mean()","    ","    self.prev_hop_id = None","    self.binding_time = None","    self.run_time = None","    ","    self.cum_supply = 0","    self.cum_demand = 0","  ","  def __repr__(self):","    return \"Task[id= {}, jid= {}, type= {}]\".format(self._id, self.jid, self.type_)","  ","  def gen_demand(self):","    # d = min(self.demandperslot_rv.sample(), self.totaldemand - self.cum_demand)","    d = min(self.demandperslot_rv_mean, self.totaldemand - self.cum_demand)","    self.cum_demand += d","    return d","  ","  def take_supply(self, s):","    s_ = min(self.cum_demand - self.cum_supply, s)","    self.cum_supply += s_","    return s_","","class Job(object):","  def __init__(self, _id, k, n, demandperslot_rv, totaldemand):","    self._id = _id","    self.k = k","    self.n = n","    self.demandperslot_rv = demandperslot_rv","    self.totaldemand = totaldemand","    ","    self.reqed = self.demandperslot_rv.mean()","  ","  def __repr__(self):","    # return \"Job[id= {}]\".format(self._id)","    return \"Job[id= {}, k= {}, totaldemand= {}, reqed= {}]\".format(self._id, self.k, self.totaldemand, self.reqed)","","class JobGen(object):","  def __init__(self, env, ar, demandperslot_mean_rv, totaldemand_rv, k_rv, njob, out, **kwargs):","    self.env = env","    self.ar = ar","    self.demandperslot_mean_rv = demandperslot_mean_rv","    self.totaldemand_rv = totaldemand_rv","    self.k_rv = k_rv","    self.njob = njob","    self.out = out","    ","    self.nsent = 0","    ","    self.action = self.env.process(self.run_poisson() )","  ","  def run_poisson(self):","    while 1:","      yield self.env.timeout(random.expovariate(self.ar) )","      self.nsent += 1","      k = self.k_rv.sample()","      demandmean = self.demandperslot_mean_rv.sample()","      coeff_var = 0.7","      self.out.put(Job(","        _id = self.nsent,","        k = k, n = k,","        demandperslot_rv = TNormal(demandmean, demandmean*coeff_var),","        totaldemand = self.totaldemand_rv.sample() ) )","      ","      # if self.nsent >= self.njob:","      #   return","","# #########################################  Worker  ############################################# #","class Worker(object):","  def __init__(self, env, _id, cap, out_c, straggle_m):","    self.env = env","    self._id = _id","    self.cap = cap","    self.out_c = out_c","    self.straggle_m = straggle_m","    ","    self.cap_ = self.cap","    ","    self.timeslot = 1","    self.t_l = []","    env.process(self.run() )","    env.process(self.straggle() )","    ","    self.ntimeslots = 0","    self.avg_load = 0","  ","  def straggle(self):","    sl = self.straggle_m['slowdown']","    straggle_dur_rv = self.straggle_m['straggle_dur_rv']","    normal_dur_v = self.straggle_m['normal_dur_rv']","    while True:","      self.cap_ = self.cap*sl(self.sched_load() )","      yield (self.env.timeout(straggle_dur_rv.sample() ) )","      self.cap_ = self.cap","      yield (self.env.timeout(normal_dur_v.sample() ) )","  ","  def __repr__(self):","    return \"Worker[id= {}]\".format(self._id)","  ","  def sched_cap(self):","    if len(self.t_l) == 0:","      return 0","    return sum([t.reqed for t in self.t_l] )","  ","  def nonsched_cap(self):","    return self.cap - self.sched_cap()","  ","  def sched_load(self):","    return self.sched_cap()/self.cap","  ","  def update_avg_load(self, load):","    self.avg_load = (self.avg_load*(self.ntimeslots-1) + load)/self.ntimeslots","  ","  def run(self):","    while True:","      yield (self.env.timeout(self.timeslot) )","      self.ntimeslots += 1","      if len(self.t_l) == 0:","        self.update_avg_load(0)","        continue","      ","      for p in self.t_l:","        p.gen_demand()","      ","      # CPU scheduling","      cap_ = self.cap_","      sched_cap = self.sched_cap()","      total_supplytaken = 0","      for t in self.t_l:","        total_supplytaken += t.take_supply(min(t.reqed, t.reqed/sched_cap*cap_) )","      ","      t_l_ = self.t_l","      while cap_ - total_supplytaken > 0.01:","        t_l_ = [t for t in t_l_ if t.cum_demand - t.cum_supply > 0.01]","        if len(t_l_) == 0:","          break","        ","        supply_foreach = (cap_ - total_supplytaken)/len(t_l_)","        for t in t_l_:","          total_supplytaken += t.take_supply(supply_foreach)","      self.update_avg_load(self.sched_load() )","      # Check if a task is finished","      t_l_ = []","      for t in self.t_l:","        if t.cum_supply - t.totaldemand > -0.01:","          t.run_time = self.env.now - t.binding_time","          t.prev_hop_id = self._id","          self.out_c.put_c(t)","          slog(DEBUG, self.env, self, \"finished\", t)","        else:","          t_l_.append(t)","      self.t_l = t_l_","  ","  def put(self, t):","    avail_cap = self.nonsched_cap()","    if t.type_ == 's' and t.reqed > avail_cap:","      tred_l = [t for t in self.t_l if t.type_ == 'r']","      i = 0","      while i < len(tred_l) and avail_cap < t.reqed:","        tred = tred_l[i]","        avail_cap += tred.reqed","        self.t_l.remove(tred)","        i += 1","      if avail_cap < t.reqed:","        slog(ERROR, self.env, self, \"could not bind\", t)","        return","    elif t.type_ == 'r' and t.reqed > avail_cap:","      return","    ","    t.binding_time = self.env.now","    self.t_l.append(t)","    slog(DEBUG, self.env, self, \"binded, njob= {}\".format(len(self.t_l) ), t)","  ","  def put_c(self, m):","    slog(DEBUG, self.env, self, \"received\", m)","    ","    if m['message'] == 'remove':","      jid = m['jid']","      ti = None","      for i, t in enumerate(self.t_l):","        if t.jid == jid:","          ti = i","      if ti is not None:","        slog(DEBUG, self.env, self, \"removing\", self.t_l[ti] )","        del self.t_l[ti]","    else:","      log(ERROR, \"Unrecognized message;\", m=m)","","# #########################################  Cluster  ############################################ #","class Cluster(object):","  def __init__(self, env, njob, nworker, wcap, straggle_m, scher, **kwargs):","    self.env = env","    self.njob = njob","    self.nworker = nworker","    self.wcap = wcap","    self.straggle_m = straggle_m","    self.scher = scher","    ","    self.w_l = [Worker(env, i, wcap, self, straggle_m) for i in range(nworker) ]","    ","    self.store = simpy.Store(env)","    env.process(self.run() )","    ","    self.njob_finished = 0","    self.store_c = simpy.Store(env)","    self.wait_for_alljobs = env.process(self.run_c() )","    ","    self.jid__t_l_m = {}","    self.jid_info_m = {}","    ","  def __repr__(self):","    # return 'Cluster[' + '\\n' + \\","    #       '\\t njob= {}'.format(self.njob) + '\\n' + \\","    #       '\\t nworker= {}'.format(self.nworker) + '\\n' + \\","    #       '\\t wcap= {}'.format(self.wcap) + '\\n' + \\","    #       '\\t straggle_m= {}'.format(self.straggle_m) + '\\n' + \\","    #       '\\t scher= {}'.format(self.scher)","    return 'Cluster'","  ","  def run(self):","    while True:","      j = yield self.store.get()","      ","      while True:","        s, a, w_l = self.scher.schedule(j, self.w_l)","        if a == -1:","          slog(DEBUG, self.env, self, \"a = -1\", j)","          yield self.env.timeout(0.1)","        else:","          break","      # self.store.put(j)","      # self.jid_info_m[j._id] = {'fate': 'dropped'}","      ","      self.jid_info_m[j._id] = {'wait_time': self.env.now - j.arrival_time}","      wid_l = []","      for i, w in enumerate(w_l):","        type_ = 's' if i+1 <= j.k else 'r'","        w.put(Task(i+1, j._id, j.reqed, j.demandperslot_rv, j.totaldemand, j.k, type_) )","        wid_l.append(w._id)","      ","      self.jid__t_l_m[j._id] = []","      self.jid_info_m[j._id].update({","        'expected_run_time': j.totaldemand/j.demandperslot_rv.mean(),","        'wid_l': wid_l,","        's': s, 'a': a} )","  ","  def put(self, j):","    slog(DEBUG, self.env, self, \"received\", j)","    # if len(self.store.items) >= 1000:","    #   # slog(WARNING, self.env, self, \">= 1000 tasks are in q! dropping.\", j)","    #   return","    j.arrival_time = self.env.now","    return self.store.put(j)","  ","  def run_c(self):","    while True:","      t = yield self.store_c.get()","      try:","        self.jid__t_l_m[t.jid].append(t)","      except KeyError: # may happen due to a task completion after the corresponding job finishes","        continue","      ","      t_l = self.jid__t_l_m[t.jid]","      if len(t_l) > t.k:","        log(ERROR, \"len(t_l)= {} > k= {}\".format(len(t_l), t.k) )","      elif len(t_l) < t.k:","        continue","      else:","        t_l = self.jid__t_l_m[t.jid]","        wrecvedfrom_id_l = [t.prev_hop_id for t in t_l]","        wsentto_id_l = self.jid_info_m[t.jid]['wid_l']","        for w in self.w_l:","          if w._id in wsentto_id_l and w._id not in wrecvedfrom_id_l:","            w.put_c({'message': 'remove', 'jid': t.jid} )","        ","        self.jid_info_m[t.jid].update({","          'fate': 'finished',","          'run_time': max([t.run_time for t in self.jid__t_l_m[t.jid] ] ) } )","        self.jid__t_l_m.pop(t.jid, None)","        slog(DEBUG, self.env, self, \"finished jid= {}\".format(t.jid), t)","        ","        ## This causes (s1, a1, r1), (s2, a2, r2) to be interleaved by more than one job","        # self.njob_finished += 1","        if t.jid <= self.njob:","          self.njob_finished += 1","          # log(WARNING, \"job completion;\", jid=t.jid, njob=self.njob, njob_finished=self.njob_finished)","          if self.njob_finished >= self.njob:","            return","  ","  def put_c(self, t):","    slog(DEBUG, self.env, self, \"received\", t)","    return self.store_c.put(t)"]},{"action":"insertText","range":{"start":{"row":0,"column":0},"end":{"row":0,"column":34}},"text":"import math, random, simpy, pprint"},{"action":"insertText","range":{"start":{"row":0,"column":34},"end":{"row":1,"column":0}},"text":"\n"},{"action":"insertLines","range":{"start":{"row":1,"column":0},"end":{"row":309,"column":0}},"lines":["from operator import itemgetter","","from rvs import *","from log_utils import *","","# #######################################  Task  ######################################## #","class Task(object):","  def __init__(self, _id, jid, reqed, demandperslot_rv, totaldemand, k, type_=None):","    self._id = _id","    self.jid = jid","    self.reqed = reqed","    self.demandperslot_rv = demandperslot_rv","    self.totaldemand = totaldemand","    self.k = k","    self.type_ = type_ # 's': systematic, 'r': redundant","    ","    self.demandperslot_rv_mean = demandperslot_rv.mean()","    ","    self.prev_hop_id = None","    self.binding_time = None","    self.run_time = None","    ","    self.cum_supply = 0","    self.cum_demand = 0","  ","  def __repr__(self):","    return \"Task[id= {}, jid= {}, type= {}]\".format(self._id, self.jid, self.type_)","  ","  def gen_demand(self):","    # d = min(self.demandperslot_rv.sample(), self.totaldemand - self.cum_demand)","    d = min(self.demandperslot_rv_mean, self.totaldemand - self.cum_demand)","    self.cum_demand += d","    return d","  ","  def take_supply(self, s):","    s_ = min(self.cum_demand - self.cum_supply, s)","    self.cum_supply += s_","    return s_","","class Job(object):","  def __init__(self, _id, k, n, demandperslot_rv, totaldemand):","    self._id = _id","    self.k = k","    self.n = n","    self.demandperslot_rv = demandperslot_rv","    self.totaldemand = totaldemand","    ","    self.reqed = self.demandperslot_rv.mean()","  ","  def __repr__(self):","    # return \"Job[id= {}]\".format(self._id)","    return \"Job[id= {}, k= {}, totaldemand= {}, reqed= {}]\".format(self._id, self.k, self.totaldemand, self.reqed)","","class JobGen(object):","  def __init__(self, env, ar, demandperslot_mean_rv, totaldemand_rv, k_rv, njob, out, **kwargs):","    self.env = env","    self.ar = ar","    self.demandperslot_mean_rv = demandperslot_mean_rv","    self.totaldemand_rv = totaldemand_rv","    self.k_rv = k_rv","    self.njob = njob","    self.out = out","    ","    self.nsent = 0","    ","    self.action = self.env.process(self.run_poisson() )","  ","  def run_poisson(self):","    while 1:","      yield self.env.timeout(random.expovariate(self.ar) )","      self.nsent += 1","      k = self.k_rv.sample()","      demandmean = self.demandperslot_mean_rv.sample()","      coeff_var = 0.7","      self.out.put(Job(","        _id = self.nsent,","        k = k, n = k,","        demandperslot_rv = TNormal(demandmean, demandmean*coeff_var),","        totaldemand = self.totaldemand_rv.sample() ) )","      ","      # if self.nsent >= self.njob:","      #   return","","# #########################################  Worker  ############################################# #","class Worker(object):","  def __init__(self, env, _id, cap, out_c, straggle_m):","    self.env = env","    self._id = _id","    self.cap = cap","    self.out_c = out_c","    self.straggle_m = straggle_m","    ","    self.cap_ = self.cap","    ","    self.timeslot = 1","    self.t_l = []","    env.process(self.run() )","    env.process(self.straggle() )","    ","    self.ntimeslots = 0","    self.avg_load = 0","  ","  def straggle(self):","    sl = self.straggle_m['slowdown']","    straggle_dur_rv = self.straggle_m['straggle_dur_rv']","    normal_dur_v = self.straggle_m['normal_dur_rv']","    while True:","      self.cap_ = self.cap*sl(self.sched_load() )","      yield (self.env.timeout(straggle_dur_rv.sample() ) )","      self.cap_ = self.cap","      yield (self.env.timeout(normal_dur_v.sample() ) )","  ","  def __repr__(self):","    return \"Worker[id= {}]\".format(self._id)","  ","  def sched_cap(self):","    if len(self.t_l) == 0:","      return 0","    return sum([t.reqed for t in self.t_l] )","  ","  def nonsched_cap(self):","    return self.cap - self.sched_cap()","  ","  def sched_load(self):","    return self.sched_cap()/self.cap","  ","  def update_avg_load(self, load):","    self.avg_load = (self.avg_load*(self.ntimeslots-1) + load)/self.ntimeslots","  ","  def run(self):","    while True:","      yield (self.env.timeout(self.timeslot) )","      self.ntimeslots += 1","      if len(self.t_l) == 0:","        self.update_avg_load(0)","        continue","      ","      for p in self.t_l:","        p.gen_demand()","      ","      # CPU scheduling","      cap_ = self.cap_","      sched_cap = self.sched_cap()","      total_supplytaken = 0","      for t in self.t_l:","        total_supplytaken += t.take_supply(min(t.reqed, t.reqed/sched_cap*cap_) )","      ","      t_l_ = self.t_l","      while cap_ - total_supplytaken > 0.01:","        t_l_ = [t for t in t_l_ if t.cum_demand - t.cum_supply > 0.01]","        if len(t_l_) == 0:","          break","        ","        supply_foreach = (cap_ - total_supplytaken)/len(t_l_)","        for t in t_l_:","          total_supplytaken += t.take_supply(supply_foreach)","      self.update_avg_load(self.sched_load() )","      # Check if a task is finished","      t_l_ = []","      for t in self.t_l:","        if t.cum_supply - t.totaldemand > -0.01:","          t.run_time = self.env.now - t.binding_time","          t.prev_hop_id = self._id","          self.out_c.put_c(t)","          slog(DEBUG, self.env, self, \"finished\", t)","        else:","          t_l_.append(t)","      self.t_l = t_l_","  ","  def put(self, t):","    avail_cap = self.nonsched_cap()","    if t.type_ == 's' and t.reqed > avail_cap:","      tred_l = [t for t in self.t_l if t.type_ == 'r']","      i = 0","      while i < len(tred_l) and avail_cap < t.reqed:","        tred = tred_l[i]","        avail_cap += tred.reqed","        self.t_l.remove(tred)","        i += 1","      if avail_cap < t.reqed:","        slog(ERROR, self.env, self, \"could not bind\", t)","        return","    elif t.type_ == 'r' and t.reqed > avail_cap:","      return","    ","    t.binding_time = self.env.now","    self.t_l.append(t)","    slog(DEBUG, self.env, self, \"binded, njob= {}\".format(len(self.t_l) ), t)","  ","  def put_c(self, m):","    slog(DEBUG, self.env, self, \"received\", m)","    ","    if m['message'] == 'remove':","      jid = m['jid']","      ti = None","      for i, t in enumerate(self.t_l):","        if t.jid == jid:","          ti = i","      if ti is not None:","        slog(DEBUG, self.env, self, \"removing\", self.t_l[ti] )","        del self.t_l[ti]","    else:","      log(ERROR, \"Unrecognized message;\", m=m)","","# #########################################  Cluster  ############################################ #","class Cluster(object):","  def __init__(self, env, njob, nworker, wcap, straggle_m, scher, **kwargs):","    self.env = env","    self.njob = njob","    self.nworker = nworker","    self.wcap = wcap","    self.straggle_m = straggle_m","    self.scher = scher","    ","    self.w_l = [Worker(env, i, wcap, self, straggle_m) for i in range(nworker) ]","    ","    self.store = simpy.Store(env)","    env.process(self.run() )","    ","    self.njob_finished = 0","    self.store_c = simpy.Store(env)","    self.wait_for_alljobs = env.process(self.run_c() )","    ","    self.jid__t_l_m = {}","    self.jid_info_m = {}","    ","  def __repr__(self):","    # return 'Cluster[' + '\\n' + \\","    #       '\\t njob= {}'.format(self.njob) + '\\n' + \\","    #       '\\t nworker= {}'.format(self.nworker) + '\\n' + \\","    #       '\\t wcap= {}'.format(self.wcap) + '\\n' + \\","    #       '\\t straggle_m= {}'.format(self.straggle_m) + '\\n' + \\","    #       '\\t scher= {}'.format(self.scher)","    return 'Cluster'","  ","  def run(self):","    while True:","      j = yield self.store.get()","      ","      while True:","        s, a, w_l = self.scher.schedule(j, self.w_l, self)","        if a == -1:","          slog(DEBUG, self.env, self, \"a = -1\", j)","          yield self.env.timeout(0.1)","        else:","          break","      # self.store.put(j)","      # self.jid_info_m[j._id] = {'fate': 'dropped'}","      ","      self.jid_info_m[j._id] = {'wait_time': self.env.now - j.arrival_time}","      wid_l = []","      for i, w in enumerate(w_l):","        type_ = 's' if i+1 <= j.k else 'r'","        w.put(Task(i+1, j._id, j.reqed, j.demandperslot_rv, j.totaldemand, j.k, type_) )","        wid_l.append(w._id)","      ","      self.jid__t_l_m[j._id] = []","      self.jid_info_m[j._id].update({","        'expected_run_time': j.totaldemand/j.demandperslot_rv.mean(),","        'wid_l': wid_l,","        's': s, 'a': a} )","  ","  def put(self, j):","    slog(DEBUG, self.env, self, \"received\", j)","    # if len(self.store.items) >= 1000:","    #   # slog(WARNING, self.env, self, \">= 1000 tasks are in q! dropping.\", j)","    #   return","    j.arrival_time = self.env.now","    return self.store.put(j)","  ","  def run_c(self):","    while True:","      t = yield self.store_c.get()","      try:","        self.jid__t_l_m[t.jid].append(t)","      except KeyError: # may happen due to a task completion after the corresponding job finishes","        continue","      ","      t_l = self.jid__t_l_m[t.jid]","      if len(t_l) > t.k:","        log(ERROR, \"len(t_l)= {} > k= {}\".format(len(t_l), t.k) )","      elif len(t_l) < t.k:","        continue","      else:","        t_l = self.jid__t_l_m[t.jid]","        wrecvedfrom_id_l = [t.prev_hop_id for t in t_l]","        wsentto_id_l = self.jid_info_m[t.jid]['wid_l']","        for w in self.w_l:","          if w._id in wsentto_id_l and w._id not in wrecvedfrom_id_l:","            w.put_c({'message': 'remove', 'jid': t.jid} )","        ","        self.jid_info_m[t.jid].update({","          'fate': 'finished',","          'run_time': max([t.run_time for t in self.jid__t_l_m[t.jid] ] ) } )","        self.jid__t_l_m.pop(t.jid, None)","        slog(DEBUG, self.env, self, \"finished jid= {}\".format(t.jid), t)","        ","        ## This causes (s1, a1, r1), (s2, a2, r2) to be interleaved by more than one job","        # self.njob_finished += 1","        if t.jid <= self.njob:","          self.njob_finished += 1","          # log(WARNING, \"job completion;\", jid=t.jid, njob=self.njob, njob_finished=self.njob_finished)","          if self.njob_finished >= self.njob:","            return","  ","  def put_c(self, t):","    slog(DEBUG, self.env, self, \"received\", t)","    return self.store_c.put(t)"]}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":129,"column":2},"end":{"row":130,"column":0}},"text":"\n"},{"action":"insertText","range":{"start":{"row":130,"column":0},"end":{"row":130,"column":2}},"text":"  "}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":130,"column":2},"end":{"row":131,"column":0}},"text":"\n"},{"action":"insertText","range":{"start":{"row":131,"column":0},"end":{"row":131,"column":2}},"text":"  "}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":130,"column":2},"end":{"row":130,"column":3}},"text":"d"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":130,"column":3},"end":{"row":130,"column":4}},"text":"e"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":130,"column":4},"end":{"row":130,"column":5}},"text":"f"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":130,"column":5},"end":{"row":130,"column":6}},"text":" "}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":130,"column":6},"end":{"row":130,"column":7}},"text":"a"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":130,"column":7},"end":{"row":130,"column":8}},"text":"v"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":130,"column":8},"end":{"row":130,"column":9}},"text":"g"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":130,"column":9},"end":{"row":130,"column":10}},"text":"_"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":130,"column":10},"end":{"row":130,"column":11}},"text":"l"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":130,"column":11},"end":{"row":130,"column":12}},"text":"o"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":130,"column":12},"end":{"row":130,"column":13}},"text":"a"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":130,"column":13},"end":{"row":130,"column":14}},"text":"d"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":130,"column":14},"end":{"row":130,"column":15}},"text":"("}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":130,"column":15},"end":{"row":130,"column":16}},"text":")"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":130,"column":15},"end":{"row":130,"column":16}},"text":"s"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":130,"column":16},"end":{"row":130,"column":17}},"text":"e"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":130,"column":17},"end":{"row":130,"column":18}},"text":"l"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":130,"column":18},"end":{"row":130,"column":19}},"text":"f"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":130,"column":20},"end":{"row":130,"column":21}},"text":":"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":130,"column":21},"end":{"row":131,"column":0}},"text":"\n"},{"action":"insertText","range":{"start":{"row":131,"column":0},"end":{"row":131,"column":4}},"text":"    "}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":131,"column":4},"end":{"row":131,"column":5}},"text":"r"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":131,"column":5},"end":{"row":131,"column":6}},"text":"e"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":131,"column":6},"end":{"row":131,"column":7}},"text":"t"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":131,"column":7},"end":{"row":131,"column":8}},"text":"u"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":131,"column":8},"end":{"row":131,"column":9}},"text":"r"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":131,"column":9},"end":{"row":131,"column":10}},"text":"n"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":131,"column":10},"end":{"row":131,"column":11}},"text":" "}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":131,"column":11},"end":{"row":131,"column":12}},"text":"s"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":131,"column":12},"end":{"row":131,"column":13}},"text":"e"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":131,"column":13},"end":{"row":131,"column":14}},"text":"l"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":131,"column":14},"end":{"row":131,"column":15}},"text":"f"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":131,"column":15},"end":{"row":131,"column":16}},"text":"."}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":131,"column":16},"end":{"row":131,"column":24}},"text":"avg_load"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":256,"column":25},"end":{"row":256,"column":26}},"text":"1"}]},{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":256,"column":24},"end":{"row":256,"column":25}},"text":"+"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":256,"column":26},"end":{"row":256,"column":27}},"text":"="}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":131,"column":16},"end":{"row":131,"column":17}},"text":"_"},{"action":"insertText","range":{"start":{"row":128,"column":26},"end":{"row":128,"column":27}},"text":"_"},{"action":"insertText","range":{"start":{"row":128,"column":9},"end":{"row":128,"column":10}},"text":"_"},{"action":"insertText","range":{"start":{"row":101,"column":9},"end":{"row":101,"column":10}},"text":"_"}]}]],"redo":[]},"/plot_data.txt":{"scrollTop":2149.5,"scrollLeft":0,"selection":{"start":{"row":120,"column":15},"end":{"row":120,"column":15}},"lastUse":1543174223569,"undo":[[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":108,"column":0},"end":{"row":108,"column":19}},"text":"0.9538063826254225]"},{"action":"removeLines","range":{"start":{"row":89,"column":0},"end":{"row":108,"column":0}},"nl":"\n","lines":["0.5999999999999999,","0.6157467308171394,","0.6236299301978064,","0.627576453015591,","0.6714632278922441,","0.7214078114002883,","0.7458257460758722,","0.8656477793705992,","0.9080580925756165,","0.9298573195059526,","0.9412653160639112,","0.9472736912882197,","0.9504318494488518,","0.9520816379048556,","0.9529371991828801,","0.9533778486642345,","0.9536034778351002,","0.953718460245436,","0.9537768349283025,"]},{"action":"removeText","range":{"start":{"row":88,"column":1},"end":{"row":88,"column":43}},"text":"approx_Prqing_wMGc_l: [0.5999999999999999,"},{"action":"removeText","range":{"start":{"row":88,"column":1},"end":{"row":89,"column":0}},"text":"\n"}]},{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":88,"column":0},"end":{"row":88,"column":1}},"text":" "}]},{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":87,"column":20},"end":{"row":88,"column":0}},"text":"\n"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":88,"column":0},"end":{"row":88,"column":1}},"text":" "}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":129,"column":0},"end":{"row":129,"column":20}},"text":"0.98927117547603249]"},{"action":"removeLines","range":{"start":{"row":110,"column":0},"end":{"row":129,"column":0}},"nl":"\n","lines":["5.6853071837931328e-05,","0.00055703020314273551,","0.0014031235325431975,","0.0021173314675507196,","0.038791036320182118,","0.27765538877276891,","0.48567356852078197,","0.9380009259724128,","0.97090751484445925,","0.98103456511593867,","0.98526089425843688,","0.98725657849401005,","0.98824947280727171,","0.98875382336218498,","0.98901167304434545,","0.98914419757202399,","0.98913247705784269,","0.9892450286410811,","0.98926239010748918,"]},{"action":"removeText","range":{"start":{"row":109,"column":1},"end":{"row":109,"column":40}},"text":"Prqing_wMGc_l: [5.6853071837931328e-05,"},{"action":"removeText","range":{"start":{"row":109,"column":1},"end":{"row":110,"column":0}},"text":"\n"}]},{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":109,"column":0},"end":{"row":109,"column":1}},"text":" "}]},{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":108,"column":21},"end":{"row":109,"column":0}},"text":"\n"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":4,"column":45},"end":{"row":4,"column":46}},"text":" "}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":4,"column":45},"end":{"row":4,"column":46}},"text":" "}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":1,"column":38},"end":{"row":1,"column":45}},"text":"ro= 0.6"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":1,"column":37},"end":{"row":1,"column":38}},"text":" "}]},{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":1,"column":36},"end":{"row":1,"column":37}},"text":","}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":24,"column":7},"end":{"row":25,"column":0}},"text":"\n"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":25,"column":0},"end":{"row":26,"column":0}},"text":"\n"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":26,"column":0},"end":{"row":27,"column":0}},"text":"\n"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":26,"column":0},"end":{"row":26,"column":7}},"text":"ro= 0.6"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":26,"column":0},"end":{"row":26,"column":1}},"text":">"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":26,"column":1},"end":{"row":26,"column":2}},"text":">"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":26,"column":2},"end":{"row":26,"column":3}},"text":" "}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":27,"column":0},"end":{"row":27,"column":10}},"text":">> ro= 0.6"}]}],[{"group":"doc","deltas":[{"action":"removeLines","range":{"start":{"row":27,"column":0},"end":{"row":28,"column":0}},"nl":"\n","lines":[">> ro= 0.6"]}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":136,"column":0},"end":{"row":136,"column":7}},"text":"800.01]"},{"action":"removeLines","range":{"start":{"row":126,"column":0},"end":{"row":136,"column":0}},"nl":"\n","lines":["d_l: [0,","10.0,","16.27,","26.48,","43.09,","70.12,","114.1,","185.66,","302.12,","491.63,"]}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":126,"column":0},"end":{"row":126,"column":10}},"text":">> ro= 0.6"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":126,"column":9},"end":{"row":126,"column":10}},"text":"6"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":126,"column":9},"end":{"row":126,"column":10}},"text":"5"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":124,"column":0},"end":{"row":124,"column":33}},"text":" mapping_m: {'type': 'spreading'}"},{"action":"removeLines","range":{"start":{"row":112,"column":0},"end":{"row":124,"column":0}},"nl":"\n","lines":["# #################################################################### #","INFO] <module>:: red= \"Coding\", r= 2, ro= 0.5","INFO] <module>:: rank= 3, num_mpiprocs= 20"," sinfo_m: {'ar': 2.2799999999999998,","'k_rv': BZipf([1, 5], tail index= 1),","'lifetime_rv': Pareto(loc= 10, a= 4),","'njob': 100000,","'nworker': 20,","'reqed_rv': Uniform[1, 1],","'straggle_m': {'slowdown': <function <lambda> at 0x7fa5c0cf8f28>},","'wcap': 10}"," sching_m: {'r': 2, 'threshold': None, 'type': 'expand_if_totaldemand_leq'}"]}]},{"group":"doc","deltas":[{"action":"removeLines","range":{"start":{"row":111,"column":0},"end":{"row":112,"column":0}},"nl":"\n","lines":[""]}]},{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":110,"column":21},"end":{"row":111,"column":0}},"text":"\n"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":24,"column":0},"end":{"row":24,"column":7}},"text":"800.01]"},{"action":"removeLines","range":{"start":{"row":14,"column":0},"end":{"row":24,"column":0}},"nl":"\n","lines":["d_l: [0,","10.0,","16.27,","26.48,","43.09,","70.12,","114.1,","185.66,","302.12,","491.63,"]},{"action":"insertText","range":{"start":{"row":14,"column":0},"end":{"row":14,"column":82}},"text":"d_l = [0, 10.0, 16.27, 26.48, 43.09, 70.12, 114.1, 185.66, 302.12, 491.63, 800.01]"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":186,"column":0},"end":{"row":186,"column":22}},"text":"0.0068067238544177499]"},{"action":"removeLines","range":{"start":{"row":102,"column":0},"end":{"row":186,"column":0}},"nl":"\n","lines":[">> ro= 0.5","sim_StdT_l: [0.06927220206984129,","0.066383984163648727,","0.054677440467456026,","0.051195104426943347,","0.060353655766260651,","0.050198304331823228,","0.048874884443081454,","0.061028724349391827,","0.041710371443432655,","0.041133775827590306,","0.040837268114482309,","0.030315885038746861,","0.044545820068631441,","0.033391723365472109,","0.028332550550612932,","0.034004456750220229,","0.04248290397635264,","0.029084688703680254,","0.021380115583299084,","0.026215484290762297,","0.042044609281664251]","sim_ET_l: [23.944456881887493,","23.924892602441275,","23.198682864860814,","22.691584392480358,","22.43986715618567,","21.484092438055228,","20.865332478622609,","19.942906210502354,","18.742643017954588,","17.581513774102316,","17.006839221519282,","16.76659262987102,","16.639109966817124,","16.586265906547204,","16.545301742454676,","16.527165380235559,","16.532973144177312,","16.516654681711554,","16.512261306150446,","16.513146732067277,","16.519155806661054]","sim_EPrqing_l: [0.00048922271544252455,","0.00050071588601073721,","0.0005262255998936254,","0.0005866836888859967,","0.00057370297692700526,","0.00072815908732050329,","0.00082311900079861094,","0.0022004891421913407,","0.012340560083907565,","0.053274285959814607,","0.090715361524983051,","0.11618894271622997,","0.12978178335581536,","0.13819353419386116,","0.13814368293429988,","0.13975876160274256,","0.14352686105844975,","0.14252322669215753,","0.14134164858738163,","0.14359997152274126,","0.14078954410870681]","sim_StdPrqing_l: [6.9770235910902946e-05,","5.6970891243661871e-05,","5.7525795893053037e-05,","7.9100242371592927e-05,","7.2810934364331596e-05,","0.00012070511465055014,","0.00013736766513887275,","0.00045252938643274281,","0.0011054275858465262,","0.003762515141766903,","0.0049187842816309493,","0.0060696659102802948,","0.0080097513827522542,","0.0066169273261042875,","0.0062222510802043664,","0.0065323261603438777,","0.0089353516053847556,","0.0070247725324461717,","0.0060076361761951689,","0.0064490843261096184,"]}]}],[{"group":"doc","deltas":[{"action":"removeLines","range":{"start":{"row":102,"column":0},"end":{"row":103,"column":0}},"nl":"\n","lines":[""]}]}],[{"group":"doc","deltas":[{"action":"removeLines","range":{"start":{"row":102,"column":0},"end":{"row":103,"column":0}},"nl":"\n","lines":[""]}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":15,"column":0},"end":{"row":16,"column":0}},"text":"\n"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":16,"column":0},"end":{"row":17,"column":0}},"text":"\n"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":16,"column":0},"end":{"row":16,"column":10}},"text":">> ro= 0.5"},{"action":"insertText","range":{"start":{"row":16,"column":10},"end":{"row":17,"column":0}},"text":"\n"},{"action":"insertLines","range":{"start":{"row":17,"column":0},"end":{"row":100,"column":0}},"lines":["sim_StdT_l: [0.06927220206984129,","0.066383984163648727,","0.054677440467456026,","0.051195104426943347,","0.060353655766260651,","0.050198304331823228,","0.048874884443081454,","0.061028724349391827,","0.041710371443432655,","0.041133775827590306,","0.040837268114482309,","0.030315885038746861,","0.044545820068631441,","0.033391723365472109,","0.028332550550612932,","0.034004456750220229,","0.04248290397635264,","0.029084688703680254,","0.021380115583299084,","0.026215484290762297,","0.042044609281664251]","sim_ET_l: [23.944456881887493,","23.924892602441275,","23.198682864860814,","22.691584392480358,","22.43986715618567,","21.484092438055228,","20.865332478622609,","19.942906210502354,","18.742643017954588,","17.581513774102316,","17.006839221519282,","16.76659262987102,","16.639109966817124,","16.586265906547204,","16.545301742454676,","16.527165380235559,","16.532973144177312,","16.516654681711554,","16.512261306150446,","16.513146732067277,","16.519155806661054]","sim_EPrqing_l: [0.00048922271544252455,","0.00050071588601073721,","0.0005262255998936254,","0.0005866836888859967,","0.00057370297692700526,","0.00072815908732050329,","0.00082311900079861094,","0.0022004891421913407,","0.012340560083907565,","0.053274285959814607,","0.090715361524983051,","0.11618894271622997,","0.12978178335581536,","0.13819353419386116,","0.13814368293429988,","0.13975876160274256,","0.14352686105844975,","0.14252322669215753,","0.14134164858738163,","0.14359997152274126,","0.14078954410870681]","sim_StdPrqing_l: [6.9770235910902946e-05,","5.6970891243661871e-05,","5.7525795893053037e-05,","7.9100242371592927e-05,","7.2810934364331596e-05,","0.00012070511465055014,","0.00013736766513887275,","0.00045252938643274281,","0.0011054275858465262,","0.003762515141766903,","0.0049187842816309493,","0.0060696659102802948,","0.0080097513827522542,","0.0066169273261042875,","0.0062222510802043664,","0.0065323261603438777,","0.0089353516053847556,","0.0070247725324461717,","0.0060076361761951689,","0.0064490843261096184,"]},{"action":"insertText","range":{"start":{"row":100,"column":0},"end":{"row":100,"column":22}},"text":"0.0068067238544177499]"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":14,"column":0},"end":{"row":14,"column":82}},"text":"d_l = [0, 10.0, 16.27, 26.48, 43.09, 70.12, 114.1, 185.66, 302.12, 491.63, 800.01]"},{"action":"insertText","range":{"start":{"row":14,"column":0},"end":{"row":14,"column":6}},"text":"d_l= ["},{"action":"insertText","range":{"start":{"row":14,"column":6},"end":{"row":15,"column":0}},"text":"\n"},{"action":"insertLines","range":{"start":{"row":15,"column":0},"end":{"row":35,"column":0}},"lines":["0,","10.0,","12.593969317272713,","15.860806316440653,","19.975050809645882,","25.156517700764358,","31.682041205285422,","39.900265484793444,","50.250271926652381,","63.285038282887051,","79.700983037710856,","100.37517349334034,","126.41218551910536,","159.2031185756999,","200.4999190556494,","252.50898287025086,","318.00903826036807,","400.49960704664795,","504.38797627252632,","635.22466971774736,"]},{"action":"insertText","range":{"start":{"row":35,"column":0},"end":{"row":35,"column":19}},"text":"800.00000000000034]"}]}]],"redo":[]}},"window":{"width":1920,"height":1057,"top":23,"left":0,"isMaximized":true}}