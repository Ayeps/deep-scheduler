{"split":"2-0","session.current":["/learn_wmpi.py","/rlearning.py"],"session.open":{"/rlearning.py":{"scrollTop":1334,"scrollLeft":0,"selection":{"start":{"row":98,"column":55},"end":{"row":98,"column":55}},"lastUse":1535767951319,"undo":[[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":89,"column":13},"end":{"row":89,"column":14}},"text":" "}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":89,"column":14},"end":{"row":89,"column":15}},"text":"="}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":89,"column":15},"end":{"row":89,"column":16}},"text":" "}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":89,"column":16},"end":{"row":89,"column":17}},"text":"i"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":89,"column":17},"end":{"row":89,"column":18}},"text":"f"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":89,"column":18},"end":{"row":89,"column":19}},"text":" "}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":89,"column":19},"end":{"row":89,"column":28}},"text":"save_name"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":89,"column":28},"end":{"row":89,"column":29}},"text":" "}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":89,"column":29},"end":{"row":89,"column":30}},"text":"i"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":89,"column":30},"end":{"row":89,"column":31}},"text":"s"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":89,"column":31},"end":{"row":89,"column":32}},"text":" "}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":89,"column":32},"end":{"row":89,"column":33}},"text":"N"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":89,"column":33},"end":{"row":89,"column":34}},"text":"o"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":89,"column":34},"end":{"row":89,"column":35}},"text":"n"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":89,"column":35},"end":{"row":89,"column":36}},"text":"e"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":89,"column":36},"end":{"row":89,"column":37}},"text":" "}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":89,"column":37},"end":{"row":89,"column":38}},"text":"e"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":89,"column":38},"end":{"row":89,"column":39}},"text":"l"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":89,"column":39},"end":{"row":89,"column":40}},"text":"s"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":89,"column":40},"end":{"row":89,"column":41}},"text":"e"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":89,"column":41},"end":{"row":89,"column":42}},"text":" "}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":89,"column":42},"end":{"row":89,"column":56}},"text":"self.save_name"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":89,"column":16},"end":{"row":89,"column":30}},"text":"self.save_name"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":89,"column":30},"end":{"row":89,"column":31}},"text":" "}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":88,"column":21},"end":{"row":88,"column":22}},"text":","}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":88,"column":22},"end":{"row":88,"column":23}},"text":" "}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":88,"column":23},"end":{"row":88,"column":24}},"text":"s"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":88,"column":24},"end":{"row":88,"column":25}},"text":"a"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":88,"column":25},"end":{"row":88,"column":26}},"text":"v"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":88,"column":26},"end":{"row":88,"column":27}},"text":"e"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":88,"column":27},"end":{"row":88,"column":28}},"text":"_"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":88,"column":28},"end":{"row":88,"column":29}},"text":"n"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":88,"column":29},"end":{"row":88,"column":30}},"text":"a"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":88,"column":30},"end":{"row":88,"column":31}},"text":"m"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":88,"column":31},"end":{"row":88,"column":32}},"text":"e"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":89,"column":57},"end":{"row":89,"column":66}},"text":"save_name"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":88,"column":32},"end":{"row":88,"column":33}},"text":"="}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":88,"column":33},"end":{"row":88,"column":34}},"text":"N"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":88,"column":34},"end":{"row":88,"column":35}},"text":"o"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":88,"column":35},"end":{"row":88,"column":36}},"text":"n"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":88,"column":36},"end":{"row":88,"column":37}},"text":"e"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":93,"column":26},"end":{"row":94,"column":0}},"text":"\n"},{"action":"insertText","range":{"start":{"row":94,"column":0},"end":{"row":94,"column":4}},"text":"    "}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":94,"column":4},"end":{"row":94,"column":66}},"text":"save_name = self.save_name if save_name is None else save_name"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":72,"column":65},"end":{"row":72,"column":82}},"text":", save_dir='save'"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":82,"column":96},"end":{"row":82,"column":106}},"text":"save_dir, "}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":82,"column":23},"end":{"row":82,"column":24}},"text":"}"}]},{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":82,"column":22},"end":{"row":82,"column":23}},"text":"{"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":82,"column":22},"end":{"row":82,"column":23}},"text":"s"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":82,"column":23},"end":{"row":82,"column":24}},"text":"a"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":82,"column":24},"end":{"row":82,"column":25}},"text":"v"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":82,"column":25},"end":{"row":82,"column":26}},"text":"e"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":93,"column":24},"end":{"row":93,"column":40}},"text":", save_name=None"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":98,"column":6},"end":{"row":98,"column":8}},"text":"# "}]}]],"redo":[]},"/scheduler.py":{"scrollTop":423,"scrollLeft":0,"selection":{"start":{"row":34,"column":24},"end":{"row":34,"column":31}},"lastUse":1535752699152,"undo":[[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":50,"column":27},"end":{"row":50,"column":28}},"text":","}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":50,"column":28},"end":{"row":50,"column":29}},"text":" "}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":50,"column":29},"end":{"row":50,"column":35}},"text":"t_sl_l"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":51,"column":21},"end":{"row":51,"column":32}},"text":"avg_s= {}, "}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":51,"column":53},"end":{"row":51,"column":69}},"text":"np.mean(t_s_l), "}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":51,"column":41},"end":{"row":51,"column":42}},"text":","}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":51,"column":42},"end":{"row":51,"column":43}},"text":" "}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":51,"column":43},"end":{"row":51,"column":44}},"text":"a"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":51,"column":44},"end":{"row":51,"column":45}},"text":"v"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":51,"column":45},"end":{"row":51,"column":46}},"text":"g"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":51,"column":46},"end":{"row":51,"column":47}},"text":"_"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":51,"column":47},"end":{"row":51,"column":48}},"text":"s"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":51,"column":48},"end":{"row":51,"column":49}},"text":"l"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":51,"column":49},"end":{"row":51,"column":50}},"text":"="}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":51,"column":50},"end":{"row":51,"column":51}},"text":" "}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":51,"column":51},"end":{"row":51,"column":52}},"text":"{"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":51,"column":52},"end":{"row":51,"column":53}},"text":"}"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":51,"column":95},"end":{"row":51,"column":96}},"text":","}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":51,"column":96},"end":{"row":51,"column":97}},"text":" "}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":51,"column":97},"end":{"row":51,"column":98}},"text":"n"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":51,"column":98},"end":{"row":51,"column":99}},"text":"p"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":51,"column":99},"end":{"row":51,"column":100}},"text":"."}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":51,"column":100},"end":{"row":51,"column":101}},"text":"m"},{"action":"insertText","range":{"start":{"row":51,"column":101},"end":{"row":51,"column":102}},"text":"e"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":51,"column":102},"end":{"row":51,"column":103}},"text":"a"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":51,"column":103},"end":{"row":51,"column":104}},"text":"n"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":51,"column":104},"end":{"row":51,"column":105}},"text":"("}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":51,"column":105},"end":{"row":51,"column":106}},"text":")"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":51,"column":105},"end":{"row":51,"column":111}},"text":"t_sl_l"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":67,"column":31},"end":{"row":67,"column":32}},"text":","}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":67,"column":32},"end":{"row":67,"column":33}},"text":" "}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":67,"column":33},"end":{"row":67,"column":39}},"text":"t_sl_l"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":70,"column":23},"end":{"row":70,"column":34}},"text":"avg_s= {}, "}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":70,"column":55},"end":{"row":70,"column":71}},"text":"np.mean(t_s_l), "}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":70,"column":43},"end":{"row":70,"column":44}},"text":","}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":70,"column":44},"end":{"row":70,"column":45}},"text":" "}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":70,"column":45},"end":{"row":70,"column":46}},"text":"a"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":70,"column":46},"end":{"row":70,"column":47}},"text":"v"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":70,"column":47},"end":{"row":70,"column":48}},"text":"h"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":70,"column":47},"end":{"row":70,"column":48}},"text":"h"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":70,"column":47},"end":{"row":70,"column":48}},"text":"g"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":70,"column":48},"end":{"row":70,"column":49}},"text":"_"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":70,"column":49},"end":{"row":70,"column":50}},"text":"s"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":70,"column":50},"end":{"row":70,"column":51}},"text":"l"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":70,"column":51},"end":{"row":70,"column":52}},"text":"="}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":70,"column":52},"end":{"row":70,"column":53}},"text":" "}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":70,"column":53},"end":{"row":70,"column":54}},"text":"{"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":70,"column":54},"end":{"row":70,"column":55}},"text":"}"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":70,"column":97},"end":{"row":70,"column":98}},"text":","}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":70,"column":98},"end":{"row":70,"column":99}},"text":" "}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":70,"column":99},"end":{"row":70,"column":100}},"text":"n"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":70,"column":100},"end":{"row":70,"column":101}},"text":"p"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":70,"column":101},"end":{"row":70,"column":102}},"text":"."}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":70,"column":102},"end":{"row":70,"column":103}},"text":"m"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":70,"column":103},"end":{"row":70,"column":104}},"text":"e"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":70,"column":104},"end":{"row":70,"column":105}},"text":"a"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":70,"column":105},"end":{"row":70,"column":106}},"text":"n"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":70,"column":106},"end":{"row":70,"column":107}},"text":"("}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":70,"column":107},"end":{"row":70,"column":108}},"text":")"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":70,"column":107},"end":{"row":70,"column":113}},"text":"t_sl_l"}]}]],"redo":[]},"/learn_wmpi.py":{"scrollTop":0.5,"scrollLeft":0,"selection":{"start":{"row":13,"column":25},"end":{"row":13,"column":25}},"lastUse":1535752544364,"undo":[[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":7,"column":10},"end":{"row":7,"column":19}},"text":"howtorep_"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":85,"column":2},"end":{"row":85,"column":16}},"text":"plot_eval_wmpi"},{"action":"insertText","range":{"start":{"row":85,"column":2},"end":{"row":85,"column":12}},"text":"learn_wmpi"}]}],[{"group":"doc","deltas":[{"action":"removeLines","range":{"start":{"row":47,"column":0},"end":{"row":48,"column":0}},"nl":"\n","lines":["    sching_m = {'name': 'reptod-wlearning', 'd': d, 's_len': s_len, 'opt': sching_opt}"]}]}],[{"group":"doc","deltas":[{"action":"removeLines","range":{"start":{"row":55,"column":0},"end":{"row":56,"column":0}},"nl":"\n","lines":["      T = Ti(sim_step)"]}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":84,"column":2},"end":{"row":85,"column":0}},"text":"\n"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":84,"column":0},"end":{"row":84,"column":2}},"text":"  "}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":84,"column":0},"end":{"row":84,"column":2}},"text":"  "}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":55,"column":48},"end":{"row":55,"column":52}},"text":"ns, "}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":55,"column":49},"end":{"row":55,"column":54}},"text":"ching"},{"action":"insertText","range":{"start":{"row":55,"column":49},"end":{"row":55,"column":50}},"text":"i"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":55,"column":50},"end":{"row":55,"column":51}},"text":"n"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":55,"column":51},"end":{"row":55,"column":52}},"text":"f"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":55,"column":52},"end":{"row":55,"column":53}},"text":"o"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":55,"column":57},"end":{"row":55,"column":62}},"text":"scher"},{"action":"insertText","range":{"start":{"row":55,"column":57},"end":{"row":55,"column":58}},"text":"m"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":55,"column":58},"end":{"row":55,"column":59}},"text":"a"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":55,"column":59},"end":{"row":55,"column":60}},"text":"p"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":55,"column":60},"end":{"row":55,"column":61}},"text":"p"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":55,"column":61},"end":{"row":55,"column":62}},"text":"i"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":55,"column":62},"end":{"row":55,"column":63}},"text":"n"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":55,"column":63},"end":{"row":55,"column":64}},"text":"g"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":55,"column":64},"end":{"row":55,"column":65}},"text":"_"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":55,"column":65},"end":{"row":55,"column":66}},"text":"m"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":55,"column":68},"end":{"row":55,"column":88}},"text":"J, S, ar, T, jg_type"},{"action":"insertText","range":{"start":{"row":55,"column":68},"end":{"row":55,"column":69}},"text":"s"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":55,"column":69},"end":{"row":55,"column":70}},"text":"c"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":55,"column":70},"end":{"row":55,"column":71}},"text":"h"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":55,"column":71},"end":{"row":55,"column":72}},"text":"e"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":55,"column":72},"end":{"row":55,"column":73}},"text":"r"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":71,"column":25},"end":{"row":72,"column":0}},"text":"\n"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":72,"column":0},"end":{"row":72,"column":33}},"text":"mapping_m = {'type': 'spreading'}"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":55,"column":57},"end":{"row":55,"column":68}},"text":"mapping_m, "}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":37,"column":12},"end":{"row":37,"column":13}},"text":"l"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":37,"column":13},"end":{"row":37,"column":14}},"text":"e"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":37,"column":14},"end":{"row":37,"column":15}},"text":"a"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":37,"column":15},"end":{"row":37,"column":16}},"text":"r"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":37,"column":16},"end":{"row":37,"column":17}},"text":"n"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":37,"column":17},"end":{"row":37,"column":18}},"text":"e"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":37,"column":18},"end":{"row":37,"column":19}},"text":"r"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":37,"column":19},"end":{"row":37,"column":20}},"text":"."}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":65,"column":14},"end":{"row":65,"column":15}},"text":"0"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":13,"column":22},"end":{"row":14,"column":0}},"text":"\n"},{"action":"insertText","range":{"start":{"row":14,"column":0},"end":{"row":14,"column":6}},"text":"      "}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":14,"column":6},"end":{"row":14,"column":7}},"text":"b"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":14,"column":7},"end":{"row":14,"column":8}},"text":"l"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":14,"column":8},"end":{"row":14,"column":9}},"text":"o"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":14,"column":9},"end":{"row":14,"column":10}},"text":"g"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":14,"column":10},"end":{"row":14,"column":11}},"text":"("}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":14,"column":11},"end":{"row":14,"column":12}},"text":")"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":14,"column":11},"end":{"row":14,"column":18}},"text":"sinfo_m"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":14,"column":18},"end":{"row":14,"column":19}},"text":"="}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":14,"column":19},"end":{"row":14,"column":26}},"text":"sinfo_m"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":14,"column":6},"end":{"row":14,"column":27}},"text":"blog(sinfo_m=sinfo_m)"}]}],[{"group":"doc","deltas":[{"action":"removeLines","range":{"start":{"row":14,"column":0},"end":{"row":15,"column":0}},"nl":"\n","lines":["      "]}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":12,"column":15},"end":{"row":13,"column":0}},"text":"\n"},{"action":"insertText","range":{"start":{"row":13,"column":0},"end":{"row":13,"column":4}},"text":"    "}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":13,"column":4},"end":{"row":13,"column":25}},"text":"blog(sinfo_m=sinfo_m)"}]}]],"redo":[]},"/learn_howtorep_wmpi.py":{"scrollTop":2541,"scrollLeft":0,"selection":{"start":{"row":171,"column":23},"end":{"row":171,"column":23}},"lastUse":1535752055253,"undo":[[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":18,"column":0},"end":{"row":18,"column":8}},"text":"'wjsize'"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":18,"column":0},"end":{"row":18,"column":1}},"text":"s"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":18,"column":1},"end":{"row":18,"column":2}},"text":"c"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":18,"column":2},"end":{"row":18,"column":3}},"text":"h"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":18,"column":3},"end":{"row":18,"column":4}},"text":"i"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":18,"column":4},"end":{"row":18,"column":5}},"text":"n"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":18,"column":5},"end":{"row":18,"column":6}},"text":"g"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":18,"column":6},"end":{"row":18,"column":7}},"text":"_"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":18,"column":7},"end":{"row":18,"column":8}},"text":"o"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":18,"column":8},"end":{"row":18,"column":9}},"text":"p"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":18,"column":9},"end":{"row":18,"column":10}},"text":"t"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":18,"column":10},"end":{"row":18,"column":11}},"text":" "}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":18,"column":11},"end":{"row":18,"column":12}},"text":"="}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":18,"column":12},"end":{"row":18,"column":13}},"text":" "}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":18,"column":21},"end":{"row":18,"column":22}},"text":" "}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":18,"column":22},"end":{"row":18,"column":31}},"text":"if wjsize"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":18,"column":31},"end":{"row":18,"column":32}},"text":" "}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":18,"column":32},"end":{"row":18,"column":33}},"text":"e"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":18,"column":33},"end":{"row":18,"column":34}},"text":"l"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":18,"column":34},"end":{"row":18,"column":35}},"text":"s"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":18,"column":35},"end":{"row":18,"column":36}},"text":"e"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":18,"column":36},"end":{"row":18,"column":37}},"text":" "}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":18,"column":37},"end":{"row":18,"column":38}},"text":"N"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":18,"column":38},"end":{"row":18,"column":39}},"text":"o"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":18,"column":39},"end":{"row":18,"column":40}},"text":"n"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":18,"column":40},"end":{"row":18,"column":41}},"text":"e"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":56,"column":71},"end":{"row":56,"column":72}},"text":","}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":56,"column":72},"end":{"row":56,"column":73}},"text":" "}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":56,"column":73},"end":{"row":56,"column":74}},"text":"'"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":56,"column":74},"end":{"row":56,"column":75}},"text":"'"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":56,"column":74},"end":{"row":56,"column":75}},"text":"o"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":56,"column":75},"end":{"row":56,"column":76}},"text":"p"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":56,"column":76},"end":{"row":56,"column":77}},"text":"t"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":56,"column":78},"end":{"row":56,"column":79}},"text":":"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":56,"column":79},"end":{"row":56,"column":80}},"text":" "}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":56,"column":80},"end":{"row":56,"column":81}},"text":"s"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":56,"column":81},"end":{"row":56,"column":82}},"text":"c"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":56,"column":82},"end":{"row":56,"column":83}},"text":"i"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":56,"column":82},"end":{"row":56,"column":83}},"text":"i"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":56,"column":82},"end":{"row":56,"column":83}},"text":"h"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":56,"column":83},"end":{"row":56,"column":84}},"text":"i"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":56,"column":84},"end":{"row":56,"column":85}},"text":"n"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":56,"column":85},"end":{"row":56,"column":86}},"text":"g"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":56,"column":86},"end":{"row":56,"column":87}},"text":"_"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":56,"column":87},"end":{"row":56,"column":88}},"text":"o"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":56,"column":88},"end":{"row":56,"column":89}},"text":"p"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":56,"column":89},"end":{"row":56,"column":90}},"text":"t"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":19,"column":21},"end":{"row":19,"column":22}},"text":"0"}]},{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":19,"column":20},"end":{"row":19,"column":21}},"text":"0"}]},{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":19,"column":19},"end":{"row":19,"column":20}},"text":"1"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":19,"column":19},"end":{"row":19,"column":20}},"text":"5"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":23,"column":13},"end":{"row":23,"column":14}},"text":"3"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":23,"column":13},"end":{"row":23,"column":14}},"text":"4"}]}],[{"group":"doc","deltas":[{"action":"removeLines","range":{"start":{"row":25,"column":0},"end":{"row":33,"column":0}},"nl":"\n","lines":["# ns, d = 10, 2","# J = TPareto(1, 10**4, 1.1)","# ar_ub = 0.8*2.95*ar_ub/3","# ar_l = [*np.linspace(0.01, 0.8*ar_ub, 4, endpoint=False), *np.linspace(0.8*ar_ub, ar_ub, 4) ]","","# ns, d = 10, 2","# J = Exp(0.05, D=1)","# ar_ub = 2.95*ar_ub/3"]}]}],[{"group":"doc","deltas":[{"action":"removeLines","range":{"start":{"row":25,"column":0},"end":{"row":26,"column":0}},"nl":"\n","lines":["# ar_l = [*np.linspace(0.01, 0.9*ar_ub, 4, endpoint=False), *np.linspace(0.9*ar_ub, ar_ub, 4) ]"]}]}],[{"group":"doc","deltas":[{"action":"removeLines","range":{"start":{"row":25,"column":0},"end":{"row":26,"column":0}},"nl":"\n","lines":[""]}]}]],"redo":[[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":25,"column":21},"end":{"row":25,"column":36}},"text":"PolicyGradScher"},{"action":"insertText","range":{"start":{"row":25,"column":21},"end":{"row":25,"column":22}},"text":"*"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":25,"column":9},"end":{"row":25,"column":10}},"text":"d"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":25,"column":10},"end":{"row":25,"column":11}},"text":"u"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":25,"column":11},"end":{"row":25,"column":12}},"text":"l"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":25,"column":12},"end":{"row":25,"column":13}},"text":"e"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":25,"column":9},"end":{"row":25,"column":10}},"text":"r"}]}]]},"/mrun.sh":{"scrollTop":0,"scrollLeft":0,"selection":{"start":{"row":15,"column":54},"end":{"row":15,"column":54}},"lastUse":1535751821950,"undo":[[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":30,"column":9},"end":{"row":30,"column":10}},"text":"2"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":30,"column":9},"end":{"row":30,"column":10}},"text":"1"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":30,"column":10},"end":{"row":30,"column":11}},"text":"0"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":30,"column":10},"end":{"row":30,"column":11}},"text":"0"}]},{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":30,"column":9},"end":{"row":30,"column":10}},"text":"1"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":30,"column":9},"end":{"row":30,"column":10}},"text":"5"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":30,"column":9},"end":{"row":30,"column":10}},"text":"5"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":30,"column":9},"end":{"row":30,"column":10}},"text":"3"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":30,"column":9},"end":{"row":30,"column":10}},"text":"3"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":30,"column":9},"end":{"row":30,"column":10}},"text":"2"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":38,"column":16},"end":{"row":38,"column":17}},"text":"3"}]},{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":38,"column":15},"end":{"row":38,"column":16}},"text":"0"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":38,"column":15},"end":{"row":38,"column":16}},"text":"1"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":38,"column":16},"end":{"row":38,"column":17}},"text":"0"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":38,"column":15},"end":{"row":38,"column":16}},"text":"1"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":38,"column":15},"end":{"row":38,"column":16}},"text":"2"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":30,"column":9},"end":{"row":30,"column":10}},"text":"2"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":30,"column":9},"end":{"row":30,"column":10}},"text":"3"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":28,"column":0},"end":{"row":28,"column":19}},"text":"  sbatch jscript.sh"},{"action":"removeLines","range":{"start":{"row":8,"column":0},"end":{"row":28,"column":0}},"nl":"\n","lines":["elif [ $1 = 's' ]; then","  #SBATCH --error=log/slurm.%N.%j.err","  NTASKS=21","  echo \"#!/bin/bash","#SBATCH --partition=main             # Partition (job queue)","#SBATCH --job-name=learn_shortestq","#SBATCH --nodes=$NTASKS              # Number of nodes you require","#SBATCH --ntasks=$NTASKS             # Total # of tasks across all nodes","#SBATCH --cpus-per-task=1            # Cores per task (>1 if multithread tasks)","#SBATCH --mem=24000                  # Real memory (RAM) required (MB)","#SBATCH --time=00:20:00              # Total run time limit (HH:MM:SS)","#SBATCH --export=ALL                 # Export your current env to the job env","#SBATCH --output=log/slurm.%N.%j.out","","export MV2_ENABLE_AFFINITY=0","srun --mpi=pmi2 python3 $PWD/learn_shortestq_wmpi.py","  \" > jscript.sh","  ","  rm -r __pycache__","  rm log/*"]}]}],[{"group":"doc","deltas":[{"action":"removeLines","range":{"start":{"row":8,"column":0},"end":{"row":9,"column":0}},"nl":"\n","lines":[""]}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":9,"column":9},"end":{"row":9,"column":10}},"text":"3"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":9,"column":9},"end":{"row":9,"column":10}},"text":"1"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":17,"column":16},"end":{"row":17,"column":17}},"text":"0"}]},{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":17,"column":15},"end":{"row":17,"column":16}},"text":"2"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":17,"column":15},"end":{"row":17,"column":16}},"text":"1"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":17,"column":15},"end":{"row":17,"column":16}},"text":"1"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":17,"column":15},"end":{"row":17,"column":16}},"text":"2"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":17,"column":36},"end":{"row":17,"column":37}},"text":" "}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":22,"column":35},"end":{"row":22,"column":44}},"text":"howtorep_"}]}],[{"group":"doc","deltas":[{"action":"removeLines","range":{"start":{"row":25,"column":0},"end":{"row":26,"column":0}},"nl":"\n","lines":["  rm -r __pycache__"]}]}]],"redo":[]},"/w_queues/mrun.sh":{"scrollTop":0,"scrollLeft":0,"selection":{"start":{"row":17,"column":20},"end":{"row":17,"column":20}},"lastUse":1535751817939,"undo":[],"redo":[]},"/srun.sh":{"scrollTop":0,"scrollLeft":0,"selection":{"start":{"row":7,"column":32},"end":{"row":7,"column":32}},"lastUse":1535740042070,"undo":[[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":5,"column":61},"end":{"row":5,"column":62}},"text":"8"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":5,"column":61},"end":{"row":5,"column":62}},"text":"1"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":5,"column":62},"end":{"row":5,"column":63}},"text":"0"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":5,"column":61},"end":{"row":5,"column":62}},"text":"1"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":5,"column":61},"end":{"row":5,"column":62}},"text":"2"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":5,"column":70},"end":{"row":5,"column":71}},"text":"8"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":5,"column":70},"end":{"row":5,"column":71}},"text":"1"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":5,"column":71},"end":{"row":5,"column":72}},"text":"6"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":5,"column":83},"end":{"row":5,"column":84}},"text":"2"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":5,"column":83},"end":{"row":5,"column":84}},"text":"3"}]}]],"redo":[]},"/sim_objs.py":{"scrollTop":3113,"scrollLeft":0,"selection":{"start":{"row":207,"column":4},"end":{"row":207,"column":4}},"lastUse":1535663769973,"undo":[[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":217,"column":9},"end":{"row":217,"column":10}},"text":":"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":217,"column":10},"end":{"row":217,"column":11}},"text":" "}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":217,"column":11},"end":{"row":217,"column":12}},"text":"s"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":217,"column":12},"end":{"row":217,"column":13}},"text":","}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":217,"column":13},"end":{"row":217,"column":14}},"text":" "}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":217,"column":14},"end":{"row":217,"column":15}},"text":"'"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":217,"column":15},"end":{"row":217,"column":16}},"text":"'"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":217,"column":15},"end":{"row":217,"column":16}},"text":"a"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":217,"column":17},"end":{"row":217,"column":18}},"text":":"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":217,"column":18},"end":{"row":217,"column":19}},"text":" "}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":217,"column":19},"end":{"row":217,"column":20}},"text":"a"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":205,"column":29},"end":{"row":205,"column":30}},"text":"n"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":205,"column":29},"end":{"row":205,"column":30}},"text":"s"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":205,"column":30},"end":{"row":205,"column":31}},"text":"c"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":205,"column":31},"end":{"row":205,"column":32}},"text":"h"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":205,"column":32},"end":{"row":205,"column":33}},"text":"e"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":205,"column":33},"end":{"row":205,"column":34}},"text":"d"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":205,"column":34},"end":{"row":205,"column":35}},"text":"u"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":205,"column":35},"end":{"row":205,"column":36}},"text":"l"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":205,"column":36},"end":{"row":205,"column":37}},"text":"e"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":206,"column":4},"end":{"row":207,"column":0}},"text":"\n"},{"action":"insertText","range":{"start":{"row":207,"column":0},"end":{"row":207,"column":4}},"text":"    "}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":207,"column":4},"end":{"row":208,"column":0}},"text":"\n"},{"action":"insertText","range":{"start":{"row":208,"column":0},"end":{"row":208,"column":4}},"text":"    "}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":205,"column":4},"end":{"row":205,"column":9}},"text":"job.n"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":206,"column":4},"end":{"row":206,"column":9}},"text":"job.n"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":205,"column":5},"end":{"row":205,"column":6}},"text":" "}]},{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":205,"column":4},"end":{"row":205,"column":5}},"text":","}]}],[{"group":"doc","deltas":[{"action":"removeLines","range":{"start":{"row":207,"column":0},"end":{"row":208,"column":0}},"nl":"\n","lines":["    "]}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":206,"column":9},"end":{"row":206,"column":10}},"text":" "}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":206,"column":10},"end":{"row":206,"column":11}},"text":"="}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":206,"column":11},"end":{"row":206,"column":12}},"text":" "}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":206,"column":12},"end":{"row":206,"column":13}},"text":"j"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":206,"column":13},"end":{"row":206,"column":14}},"text":"o"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":206,"column":14},"end":{"row":206,"column":15}},"text":"b"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":206,"column":15},"end":{"row":206,"column":16}},"text":"."}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":206,"column":16},"end":{"row":206,"column":17}},"text":"k"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":206,"column":17},"end":{"row":206,"column":18}},"text":"*"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":206,"column":18},"end":{"row":206,"column":19}},"text":"a"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":206,"column":12},"end":{"row":206,"column":13}},"text":"i"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":206,"column":13},"end":{"row":206,"column":14}},"text":"n"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":206,"column":14},"end":{"row":206,"column":15}},"text":"t"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":206,"column":15},"end":{"row":206,"column":16}},"text":"("}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":206,"column":23},"end":{"row":206,"column":24}},"text":")"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":206,"column":22},"end":{"row":206,"column":23}},"text":"("}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":206,"column":24},"end":{"row":206,"column":25}},"text":")"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":206,"column":25},"end":{"row":206,"column":26}},"text":" "}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":206,"column":24},"end":{"row":206,"column":25}},"text":"+"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":206,"column":25},"end":{"row":206,"column":26}},"text":"1"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":206,"column":24},"end":{"row":206,"column":25}},"text":" "}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":206,"column":26},"end":{"row":206,"column":27}},"text":" "}]}]],"redo":[]},"/run.sh":{"scrollTop":0,"scrollLeft":0,"selection":{"start":{"row":12,"column":2},"end":{"row":12,"column":2}},"lastUse":1535659531370,"undo":[[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":32,"column":0},"end":{"row":32,"column":16}},"text":"  $PYTHON rvs.py"},{"action":"removeLines","range":{"start":{"row":12,"column":0},"end":{"row":32,"column":0}},"nl":"\n","lines":["elif [ $1 = 'tb' ]; then","  tensorboard --logdir=/home/ubuntu/deep-scheduler/log","elif [ $1 = 's' ]; then","  # $PYTHON scheduling.py","  $PYTHON learn_shortestq.py","elif [ $1 = 'r' ]; then","  $PYTHON learn_howtorep.py","elif [ $1 = 'e' ]; then","  $PYTHON howtorep_exp.py","elif [ $1 = 'c' ]; then","  $PYTHON reptod_wcancel.py","elif [ $1 = 'd' ]; then","  $PYTHON deneme.py","elif [ $1 = 'p' ]; then","  $PYTHON profile_scher.py","elif [ $1 = 'm' ]; then","  # $PYTHON mg1_wred.py","  # $PYTHON mgs_wred.py","  $PYTHON mg1.py","elif [ $1 = 'rv' ]; then"]}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":12,"column":0},"end":{"row":12,"column":2}},"text":"  "}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":12,"column":2},"end":{"row":13,"column":0}},"text":"\n"},{"action":"insertText","range":{"start":{"row":13,"column":0},"end":{"row":13,"column":2}},"text":"  "}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":12,"column":0},"end":{"row":12,"column":2}},"text":"  "}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":12,"column":0},"end":{"row":12,"column":23}},"text":"elif [ $1 = 't' ]; then"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":12,"column":13},"end":{"row":12,"column":14}},"text":"t"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":12,"column":13},"end":{"row":12,"column":14}},"text":"s"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":11,"column":8},"end":{"row":11,"column":9}},"text":"N"},{"action":"removeText","range":{"start":{"row":3,"column":5},"end":{"row":3,"column":6}},"text":"N"}]},{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":11,"column":7},"end":{"row":11,"column":8}},"text":"O"},{"action":"removeText","range":{"start":{"row":3,"column":4},"end":{"row":3,"column":5}},"text":"O"}]},{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":11,"column":6},"end":{"row":11,"column":7}},"text":"H"},{"action":"removeText","range":{"start":{"row":3,"column":3},"end":{"row":3,"column":4}},"text":"H"}]},{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":11,"column":5},"end":{"row":11,"column":6}},"text":"T"},{"action":"removeText","range":{"start":{"row":3,"column":2},"end":{"row":3,"column":3}},"text":"T"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":13,"column":2},"end":{"row":13,"column":17}},"text":"$PY tutorial.py"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":13,"column":6},"end":{"row":13,"column":14}},"text":"tutorial"},{"action":"insertText","range":{"start":{"row":13,"column":6},"end":{"row":13,"column":7}},"text":"s"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":13,"column":7},"end":{"row":13,"column":8}},"text":"i"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":13,"column":8},"end":{"row":13,"column":9}},"text":"m"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":13,"column":9},"end":{"row":13,"column":10}},"text":"_"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":13,"column":10},"end":{"row":13,"column":11}},"text":"e"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":13,"column":11},"end":{"row":13,"column":12}},"text":"x"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":13,"column":12},"end":{"row":13,"column":13}},"text":"p"}]}],[{"group":"doc","deltas":[{"action":"removeLines","range":{"start":{"row":4,"column":0},"end":{"row":5,"column":0}},"nl":"\n","lines":["PKILL=/usr/bin/pkill"]}]}],[{"group":"doc","deltas":[{"action":"removeLines","range":{"start":{"row":5,"column":0},"end":{"row":6,"column":0}},"nl":"\n","lines":["# rm -r __pycache__"]}]}],[{"group":"doc","deltas":[{"action":"removeLines","range":{"start":{"row":7,"column":0},"end":{"row":10,"column":0}},"nl":"\n","lines":["elif [ $1 = 't' ]; then","  rm log/*","  $PY tutorial.py"]}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":8,"column":2},"end":{"row":8,"column":4}},"text":"# "}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":8,"column":18},"end":{"row":9,"column":0}},"text":"\n"},{"action":"insertText","range":{"start":{"row":9,"column":0},"end":{"row":9,"column":2}},"text":"  "}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":9,"column":2},"end":{"row":9,"column":16}},"text":"$PY sim_exp.py"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":9,"column":6},"end":{"row":9,"column":13}},"text":"sim_exp"},{"action":"insertText","range":{"start":{"row":9,"column":6},"end":{"row":9,"column":7}},"text":"s"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":9,"column":7},"end":{"row":9,"column":8}},"text":"c"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":9,"column":8},"end":{"row":9,"column":9}},"text":"h"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":9,"column":9},"end":{"row":9,"column":10}},"text":"e"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":9,"column":10},"end":{"row":9,"column":11}},"text":"d"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":9,"column":11},"end":{"row":9,"column":12}},"text":"u"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":9,"column":12},"end":{"row":9,"column":13}},"text":"l"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":9,"column":13},"end":{"row":9,"column":14}},"text":"e"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":9,"column":14},"end":{"row":9,"column":15}},"text":"r"}]}]],"redo":[]},"/w_queues/run.sh":{"scrollTop":0,"scrollLeft":0,"selection":{"start":{"row":23,"column":20},"end":{"row":23,"column":20}},"lastUse":1535659378289,"undo":[],"redo":[]},"/sim_exp.py":{"scrollTop":0,"scrollLeft":0,"selection":{"start":{"row":26,"column":23},"end":{"row":26,"column":23}},"lastUse":1535576382329,"undo":[[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":11,"column":28},"end":{"row":11,"column":33}},"text":"scher"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":11,"column":33},"end":{"row":11,"column":34}},"text":"="}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":13,"column":52},"end":{"row":13,"column":59}},"text":"Scher()"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":11,"column":34},"end":{"row":11,"column":41}},"text":"Scher()"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":11,"column":41},"end":{"row":11,"column":42}},"text":" "}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":13,"column":52},"end":{"row":13,"column":57}},"text":"scher"}]}],[{"group":"doc","deltas":[{"action":"removeLines","range":{"start":{"row":114,"column":0},"end":{"row":119,"column":0}},"nl":"\n","lines":["  def w_rlscher():","    ar = ar_ub*3/4","    sinfo_m['ar'] = ar","    print(\"\\nar= {}\".format(ar) )","    "]}]}],[{"group":"doc","deltas":[{"action":"removeLines","range":{"start":{"row":114,"column":0},"end":{"row":115,"column":0}},"nl":"\n","lines":["  "]}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":67,"column":0},"end":{"row":67,"column":101}},"text":"    print(\"avg_s= {}, avg_a= {}, avg_r= {}\".format(np.mean(t_s_l), np.mean(t_a_l), np.mean(t_r_l) ) )"},{"action":"removeLines","range":{"start":{"row":41,"column":0},"end":{"row":67,"column":0}},"nl":"\n","lines":["def sample_traj(sinfo_m, mapping_m, scher):","  def reward(slowdown):","    return 1/slowdown","  ","  env = simpy.Environment()","  cl = Cluster(env, mapper=Mapper(mapping_m), scher=scher, **sinfo_m)","  jg = JobGen(env, out=cl, **sinfo_m)","  env.run(until=cl.wait_for_alljobs)","  ","  T = sinfo_m['njob']","  t_s_l, t_a_l, t_r_l = np.zeros((T, scher.s_len)), np.zeros((T, 1)), np.zeros((T, 1))","  ","  t = 0","  for jid, jinfo_m in sorted(cl.jid_info_m.iteritems(), key=itemgetter(0) ):","    blog(t=t, jid=jid, jinfo_m=jinfo_m)","    if jinfo_m['fate'] == 'finished':","      t_s_l[t, :] = jinfo_m['s']","      t_a_l[t, :] = jinfo_m['a']","      t_r_l[t, :] = reward(jinfo_m['runtime']/jinfo_m['expected_lifetime'] )","      t += 1","  return t_s_l, t_a_l, t_r_l","","def evaluate(sinfo_m, scher):","  alog(\"scher= {}\".format(scher) )","  for _ in range(3):","    t_s_l, t_a_l, t_r_l = sample_traj(scher, sinfo_m)"]}]}],[{"group":"doc","deltas":[{"action":"removeLines","range":{"start":{"row":41,"column":0},"end":{"row":42,"column":0}},"nl":"\n","lines":[""]}]}],[{"group":"doc","deltas":[{"action":"removeLines","range":{"start":{"row":41,"column":0},"end":{"row":42,"column":0}},"nl":"\n","lines":[""]}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":61,"column":2},"end":{"row":61,"column":42}},"text":"ar_ub = arrival_rate_upperbound(sinfo_m)"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":58,"column":35},"end":{"row":59,"column":0}},"text":"\n"},{"action":"insertText","range":{"start":{"row":59,"column":0},"end":{"row":59,"column":2}},"text":"  "}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":59,"column":2},"end":{"row":59,"column":42}},"text":"ar_ub = arrival_rate_upperbound(sinfo_m)"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":60,"column":7},"end":{"row":60,"column":12}},"text":"ar_ub"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":60,"column":12},"end":{"row":60,"column":13}},"text":"="}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":60,"column":13},"end":{"row":60,"column":18}},"text":"ar_ub"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":60,"column":18},"end":{"row":60,"column":19}},"text":","}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":60,"column":19},"end":{"row":60,"column":20}},"text":" "}]}],[{"group":"doc","deltas":[{"action":"removeLines","range":{"start":{"row":63,"column":0},"end":{"row":64,"column":0}},"nl":"\n","lines":["  print(\"ar_ub= {}\".format(ar_ub) )"]}]}],[{"group":"doc","deltas":[{"action":"removeLines","range":{"start":{"row":63,"column":0},"end":{"row":64,"column":0}},"nl":"\n","lines":["  "]}]}],[{"group":"doc","deltas":[{"action":"removeLines","range":{"start":{"row":62,"column":0},"end":{"row":63,"column":0}},"nl":"\n","lines":["  "]}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":11,"column":34},"end":{"row":11,"column":41}},"text":"Scher()"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":11,"column":26},"end":{"row":11,"column":35}},"text":", scher= "}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":13,"column":52},"end":{"row":13,"column":57}},"text":"scher"},{"action":"insertText","range":{"start":{"row":13,"column":52},"end":{"row":13,"column":59}},"text":"Scher()"}]}]],"redo":[[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":26,"column":23},"end":{"row":26,"column":24}},"text":"r"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":26,"column":24},"end":{"row":26,"column":25}},"text":"l"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":26,"column":25},"end":{"row":26,"column":26}},"text":"e"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":26,"column":26},"end":{"row":26,"column":27}},"text":"a"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":26,"column":27},"end":{"row":26,"column":28}},"text":"r"}]}]]},"/learn_howtorep.py":{"scrollTop":147,"scrollLeft":0,"selection":{"start":{"row":36,"column":2},"end":{"row":36,"column":2}},"lastUse":1535483376529,"undo":[[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":51,"column":33},"end":{"row":51,"column":34}},"text":"o"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":51,"column":34},"end":{"row":51,"column":35}},"text":"p"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":51,"column":35},"end":{"row":51,"column":36}},"text":"t"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":51,"column":39},"end":{"row":51,"column":40}},"text":"="}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":51,"column":40},"end":{"row":51,"column":41}},"text":"="}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":51,"column":41},"end":{"row":51,"column":42}},"text":" "}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":51,"column":51},"end":{"row":51,"column":54}},"text":"in "},{"action":"insertText","range":{"start":{"row":51,"column":51},"end":{"row":51,"column":52}},"text":"e"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":51,"column":52},"end":{"row":51,"column":53}},"text":"l"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":51,"column":53},"end":{"row":51,"column":54}},"text":"s"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":51,"column":54},"end":{"row":51,"column":55}},"text":"e"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":51,"column":55},"end":{"row":51,"column":56}},"text":" "}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":51,"column":56},"end":{"row":51,"column":57}},"text":"F"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":51,"column":57},"end":{"row":51,"column":58}},"text":"a"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":51,"column":58},"end":{"row":51,"column":59}},"text":"l"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":51,"column":59},"end":{"row":51,"column":60}},"text":"s"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":51,"column":60},"end":{"row":51,"column":61}},"text":"e"}]}],[{"group":"doc","deltas":[{"action":"removeLines","range":{"start":{"row":52,"column":0},"end":{"row":53,"column":0}},"nl":"\n","lines":["      "]}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":52,"column":36},"end":{"row":52,"column":42}},"text":"wjsize"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":41,"column":47},"end":{"row":41,"column":59}},"text":"=self.wjsize"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":38,"column":23},"end":{"row":38,"column":24}},"text":","}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":38,"column":24},"end":{"row":38,"column":25}},"text":" "}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":38,"column":25},"end":{"row":38,"column":26}},"text":"w"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":38,"column":26},"end":{"row":38,"column":27}},"text":"j"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":38,"column":27},"end":{"row":38,"column":28}},"text":"s"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":38,"column":28},"end":{"row":38,"column":29}},"text":"i"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":38,"column":29},"end":{"row":38,"column":30}},"text":"z"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":38,"column":30},"end":{"row":38,"column":31}},"text":"e"}]}],[{"group":"doc","deltas":[{"action":"removeLines","range":{"start":{"row":22,"column":0},"end":{"row":23,"column":0}},"nl":"\n","lines":["    self.wjsize = wjsize"]}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":15,"column":72},"end":{"row":15,"column":86}},"text":", wjsize=False"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":52,"column":18},"end":{"row":52,"column":53}},"text":"self.sching_m['s_len'] == len(ql_l)"},{"action":"insertText","range":{"start":{"row":52,"column":18},"end":{"row":52,"column":24}},"text":"wjsize"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":52,"column":45},"end":{"row":52,"column":46}},"text":" "}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":52,"column":30},"end":{"row":52,"column":45}},"text":"ql_l + [j.size]"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":52,"column":10},"end":{"row":52,"column":25}},"text":"ql_l + [j.size]"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":52,"column":25},"end":{"row":52,"column":29}},"text":"ql_l"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":52,"column":41},"end":{"row":52,"column":45}},"text":"ql_l"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":50,"column":23},"end":{"row":50,"column":24}},"text":"s"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":50,"column":24},"end":{"row":50,"column":25}},"text":"e"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":50,"column":25},"end":{"row":50,"column":26}},"text":"l"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":50,"column":26},"end":{"row":50,"column":27}},"text":"f"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":50,"column":27},"end":{"row":50,"column":28}},"text":"."}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":50,"column":23},"end":{"row":50,"column":28}},"text":"'opt'"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":50,"column":28},"end":{"row":50,"column":29}},"text":" "}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":50,"column":29},"end":{"row":50,"column":30}},"text":"i"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":50,"column":30},"end":{"row":50,"column":31}},"text":"n"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":50,"column":31},"end":{"row":50,"column":32}},"text":" "}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":50,"column":32},"end":{"row":50,"column":45}},"text":"self.sching_m"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":50,"column":45},"end":{"row":50,"column":46}},"text":" "}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":50,"column":46},"end":{"row":50,"column":47}},"text":"a"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":50,"column":47},"end":{"row":50,"column":48}},"text":"n"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":50,"column":48},"end":{"row":50,"column":49}},"text":"d"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":50,"column":49},"end":{"row":50,"column":50}},"text":" "}]}]],"redo":[]},"/rvs.py":{"scrollTop":0,"scrollLeft":0,"selection":{"start":{"row":26,"column":6},"end":{"row":26,"column":6}},"lastUse":1535470674426,"undo":[[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":458,"column":18},"end":{"row":458,"column":26}},"text":"num_succ"},{"action":"insertText","range":{"start":{"row":458,"column":18},"end":{"row":458,"column":19}},"text":"n"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":458,"column":45},"end":{"row":458,"column":48}},"text":"l_l"},{"action":"insertText","range":{"start":{"row":458,"column":45},"end":{"row":458,"column":46}},"text":"n"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":458,"column":55},"end":{"row":459,"column":0}},"text":"\n"},{"action":"insertText","range":{"start":{"row":459,"column":0},"end":{"row":459,"column":4}},"text":"    "}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":459,"column":0},"end":{"row":459,"column":2}},"text":"  "}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":459,"column":2},"end":{"row":459,"column":19}},"text":"def cdf(self, x):"},{"action":"insertText","range":{"start":{"row":459,"column":19},"end":{"row":460,"column":0}},"text":"\n"},{"action":"insertLines","range":{"start":{"row":460,"column":0},"end":{"row":466,"column":0}},"lines":["    return self.dist.cdf(x - self.l_l)","  ","  def tail(self, x):","    return 1 - self.cdf(x)","  ","  def gen_sample(self):"]},{"action":"insertText","range":{"start":{"row":466,"column":0},"end":{"row":466,"column":32}},"text":"    return self.dist.rvs(size=1)"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":459,"column":2},"end":{"row":460,"column":0}},"text":"\n"},{"action":"insertText","range":{"start":{"row":460,"column":0},"end":{"row":460,"column":2}},"text":"  "}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":455,"column":14},"end":{"row":456,"column":0}},"text":"\n"},{"action":"insertText","range":{"start":{"row":456,"column":0},"end":{"row":456,"column":4}},"text":"    "}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":456,"column":4},"end":{"row":457,"column":0}},"text":"\n"},{"action":"insertText","range":{"start":{"row":457,"column":0},"end":{"row":457,"column":4}},"text":"    "}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":457,"column":4},"end":{"row":457,"column":47}},"text":"self.dist = scipy.stats.nbinom(num_succ, p)"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":457,"column":35},"end":{"row":457,"column":43}},"text":"num_succ"},{"action":"insertText","range":{"start":{"row":457,"column":35},"end":{"row":457,"column":36}},"text":"n"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":463,"column":26},"end":{"row":463,"column":37}},"text":" - self.l_l"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":461,"column":2},"end":{"row":462,"column":0}},"text":"\n"},{"action":"insertText","range":{"start":{"row":462,"column":0},"end":{"row":462,"column":2}},"text":"  "}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":462,"column":2},"end":{"row":463,"column":0}},"text":"\n"},{"action":"insertText","range":{"start":{"row":463,"column":0},"end":{"row":463,"column":2}},"text":"  "}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":462,"column":2},"end":{"row":462,"column":19}},"text":"def cdf(self, x):"},{"action":"insertText","range":{"start":{"row":462,"column":19},"end":{"row":463,"column":0}},"text":"\n"},{"action":"insertText","range":{"start":{"row":463,"column":0},"end":{"row":463,"column":25}},"text":"  return self.dist.cdf(x)"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":463,"column":2},"end":{"row":463,"column":4}},"text":"  "}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":462,"column":6},"end":{"row":462,"column":7}},"text":"c"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":462,"column":6},"end":{"row":462,"column":7}},"text":"p"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":463,"column":21},"end":{"row":463,"column":22}},"text":"c"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":463,"column":21},"end":{"row":463,"column":22}},"text":"p"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":557,"column":18},"end":{"row":557,"column":19}},"text":"l"},{"action":"removeText","range":{"start":{"row":536,"column":11},"end":{"row":536,"column":12}},"text":"l"},{"action":"removeText","range":{"start":{"row":522,"column":41},"end":{"row":522,"column":42}},"text":"l"}]},{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":557,"column":17},"end":{"row":557,"column":18}},"text":"a"},{"action":"removeText","range":{"start":{"row":536,"column":10},"end":{"row":536,"column":11}},"text":"a"},{"action":"removeText","range":{"start":{"row":522,"column":40},"end":{"row":522,"column":41}},"text":"a"}]},{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":557,"column":16},"end":{"row":557,"column":17}},"text":"i"},{"action":"removeText","range":{"start":{"row":536,"column":9},"end":{"row":536,"column":10}},"text":"i"},{"action":"removeText","range":{"start":{"row":522,"column":39},"end":{"row":522,"column":40}},"text":"i"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":138,"column":2},"end":{"row":139,"column":0}},"text":"\n"},{"action":"insertText","range":{"start":{"row":139,"column":0},"end":{"row":139,"column":2}},"text":"  "}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":139,"column":2},"end":{"row":140,"column":0}},"text":"\n"},{"action":"insertText","range":{"start":{"row":140,"column":0},"end":{"row":140,"column":2}},"text":"  "}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":139,"column":2},"end":{"row":139,"column":22}},"text":"def moment(self, i):"},{"action":"insertText","range":{"start":{"row":139,"column":22},"end":{"row":140,"column":0}},"text":"\n"},{"action":"insertText","range":{"start":{"row":140,"column":0},"end":{"row":140,"column":28}},"text":"  return moment_ith(i, self)"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":140,"column":2},"end":{"row":140,"column":4}},"text":"  "}]}],[{"group":"doc","deltas":[{"action":"removeLines","range":{"start":{"row":0,"column":0},"end":{"row":704,"column":0}},"nl":"\n","lines":["import matplotlib","matplotlib.rcParams['pdf.fonttype'] = 42","matplotlib.rcParams['ps.fonttype'] = 42","matplotlib.use('Agg')","import matplotlib.pyplot as plot","","import math, random, numpy, csv","from cmath import *","from scipy.stats import *","from patch import *","","class RV(): # Random Variable","  def __init__(self, l_l, u_l):","    self.l_l = l_l","    self.u_l = u_l","","class Exp(RV):","  def __init__(self, mu, D=0):","    RV.__init__(self, l_l=D, u_l=float(\"inf\") )","    self.D = D","    self.mu = mu","  ","  def __str__(self):","    return r'Exp(D={}, \\mu={})'.format(self.D, self.mu)","  ","  def tail(self, x):","    if x <= self.l_l:","      return 1","    return math.exp(-self.mu*(x - self.D) )","  ","  def cdf(self, x):","    if x <= self.l_l:","      return 0","    return 1 - math.exp(-self.mu*(x - self.D) )","  ","  def pdf(self, x):","    if x <= self.l_l:","      return 0","    return self.mu*math.exp(-self.mu*(x - self.D) )","  ","  def mean(self):","    return self.D + 1/self.mu","  ","  def var(self):","    return 1/self.mu**2","  ","  def moment(self, i):","    return moment_ith(i, self)","  ","  def laplace(self, s):","    if self.D > 0:","      log(ERROR, \"D= {} != 0\".format(D) )","    return self.mu/(s + self.mu)","  ","  def gen_sample(self):","    return self.D + random.expovariate(self.mu)","","class HyperExp(RV):","  def __init__(self, p_l, mu_l):","    RV.__init__(self, l_l=0, u_l=float(\"inf\") )","    self.p_l = p_l","    self.mu_l = mu_l","    ","    self.X_l = [Exp(mu) for mu in mu_l]","    ","    self.i_l = [i for i in range(len(self.p_l) ) ]","    self.dist_for_gensample = scipy.stats.rv_discrete(name='hyperexp', values=(self.i_l, self.p_l) )","  ","  def __str__(self):","    return r'HyperExp(p= {}, \\mu= {})'.format(self.p_l, self.mu_l)","  ","  def pdf(self, x):","    return sum([self.p_l[i]*X.pdf(x) for i, X in enumerate(self.X_l) ] )","  ","  def cdf(self, x):","    return sum([self.p_l[i]*X.cdf(x) for i, X in enumerate(self.X_l) ] )","  ","  def tail(self, x):","    return 1 - self.cdf(x)","  ","  def mean(self):","    return sum([self.p_l[i]*X.mean() for i, X in enumerate(self.X_l) ] )","  ","  def moment(self, m):","    return sum([self.p_l[i]*X.moment(m) for i, X in enumerate(self.X_l) ] )","  ","  def laplace(self, s):","    return sum([self.p_l[i]*X.laplace(s) for i, X in enumerate(self.X_l) ] )","  ","  def gen_sample(self):","    i = self.dist_for_gensample.rvs()","    return self.X_l[i].gen_sample()","","class Pareto(RV):","  def __init__(self, loc, a):","    RV.__init__(self, l_l=loc, u_l=float(\"inf\") )","    self.loc = loc","    self.a = a","  ","  def __str__(self):","    return \"Pareto(loc= {}, a= {})\".format(self.loc, self.a)","  ","  def tolatex(self):","    return r'Pareto(\\min= {}, \\alpha= {})'.format(self.loc, self.a)","  ","  def tail(self, x):","    if x <= self.l_l:","      return 1","    return (self.loc/x)**self.a","  ","  def cdf(self, x):","    if x <= self.l_l:","      return 0","    return 1 - (self.loc/x)**self.a","  ","  def pdf(self, x):","    if x <= self.l_l:","      return 0","    return self.a*self.loc**self.a / x**(self.a+1)","  ","  def dpdf_dx(self, x):","    if x <= self.l_l:","      return 0","    return sympy.mpmath.diff(lambda y: self.a*self.loc**self.a / y**(self.a+1), x)","  ","  def mean(self):","    if self.a <= 1:","      log(WARNING, \"Mean is Infinity; a= {} <= 1\".format(self.a) )","      return float(\"inf\")","    else:","      return self.loc*self.a/(self.a-1)","  ","  def var(self):","    if self.a <= 2:","      log(WARNING, \"Variance is Infinity; a= {} <= 2\".format(self.a) )","      return float(\"inf\")","    else:","      return self.a*self.loc**2 / (self.a-1)**2/(self.a-2)","  ","  def moment(self, i):","    return moment_ith(i, self)","  ","  def gen_sample(self):","    return ((numpy.random.pareto(self.a, 1) + 1)*self.loc)[0]","    # return pareto.ppf(numpy.random.uniform(0, 1), b=self.a, scale=self.loc)","","class TPareto(): # Truncated","  def __init__(self, l, u, a):","    RV.__init__(self, l_l=l, u_l=u)","    self.l = l","    self.u = u","    self.a = a","  ","  def __str__(self):","    return \"TPareto(l= {}, u= {}, a= {})\".format(self.l, self.u, self.a)","  ","  def tolatex(self):","    return r'TPareto(\\min= {}, \\max= {}, \\alpha= {})'.format(self.l, self.u, self.a)","  ","  def pdf(self, x):","    if x < self.l: return 0","    elif x >= self.u: return 0","    else:","      return self.a*self.l**self.a * 1/x**(self.a+1) / (1 - (self.l/self.u)**self.a)","  ","  def cdf(self, x):","    if x < self.l: return 0","    elif x >= self.u: return 1","    else:","      return (1 - (self.l/x)**self.a)/(1 - (self.l/self.u)**self.a)","  ","  def tail(self, x):","    return 1 - self.cdf(x)","  ","  def mean(self):","    return self.moment(1)","  ","  def moment(self, k):","    if k == self.a:","      return math.log(self.u_l/self.l)","    else:","      return self.a*self.l**k/(self.a-k) * \\","             (1 - (self.l/self.u)**(self.a-k))/(1 - (self.l/self.u)**self.a)","  ","  def gen_sample(self):","    r = random.uniform(0, 1)","    s = self.l*(1 - r*(1-(self.l/self.u)**self.a) )**(-1/self.a)","    if s < self.l or s > self.u:","      log(ERROR, \"illegal sample! s= {}\".format(s) )","      return None","    return s","","def plot_gensample_check():","  l, u, a = 1, 10**5, 2","  rv = TPareto(l, u, a)","  ","  x_l = []","  for i in range(10**5):","    x_l.append(rv.gen_sample() )","  x_l = numpy.sort(x_l)","  x_l = x_l[::-1]","  # i_ = None","  # for i in range(len(x_l)-1, 0, -1):","  #   if x_l[i] > 1.01: i_ = i; break","  # x_l = x_l[:i_]","  y_l = numpy.arange(x_l.size)/x_l.size","  plot.plot(x_l, y_l, marker=next(marker), color=next(dark_color), linestyle=':', mew=mew, ms=ms)","  ","  y_l = []","  for x in x_l:","    y_l.append(rv.tail(x) )","  plot.plot(x_l, y_l, label=r'$Pareto(l= %.2f, u= %.2f, \\alpha= %.2f)$' % (l, u, a), color=next(dark_color), linestyle='-')","  plot.legend()","  plot.xscale('log')","  plot.yscale('log')","  plot.xlabel(r'$x$', fontsize=13)","  plot.ylabel(r'$p(X > x)$', fontsize=13)","  plot.title(r'$X \\sim$ {}'.format(rv) )","  plot.savefig(\"plot_gensample_check.png\")","  plot.gcf().clear()","","class Google(RV):","  def __init__(self, k):","    RV.__init__(self, l_l=0, u_l=float(\"inf\") )","    ","    self.k = k","    self.sample_l = []","    # with open(\"filtered_task_lifetimes_for_jobs_w_num_task_{}.dat\".format(k), mode=\"rt\") as f:","    with open(\"task_lifetimes_for_jobs_w_num_task_{}.dat\".format(k), mode=\"rt\") as f:","      reader = csv.reader(f)","      for line in reader:","        self.sample_l.append(float(line[0] ) )","    self.sample_l.sort()","    self.num_sample = len(self.sample_l)","  ","  def __str__(self):","    return \"Google(k= \".format(self.k)","  ","  def mean(self):","    return sum(self.sample_l)/self.num_sample","  ","  def gen_sample(self):","    return self.sample_l[math.floor(self.num_sample*random.random() ) ]","","class SimRV(RV):","  def __init__(self, sample_l):","    RV.__init__(self, l_l=min(sample_l), u_l=max(sample_l) )","    ","    self.sample_l = sample_l","    self.num_sample = len(self.sample_l)","  ","  def __str__(self):","    return \"SimRV\"","  ","  def mean(self):","    return sum(self.sample_l)/self.num_sample","  ","  def gen_sample(self):","    return self.sample_l[math.floor(self.num_sample*random.random() ) ]","","class Dolly(RV):","  # Kristen et al. A Better Model for Job Redundancy: Decoupling Server Slowdown and Job Size","  def __init__(self):","    RV.__init__(self, l_l=1, u_l=12)","    ","    self.v = numpy.arange(1, 13)","    self.p = [0.23, 0.14, 0.09, 0.03, 0.08, 0.1, 0.04, 0.14, 0.12, 0.021, 0.007, 0.002]","    self.dist = scipy.stats.rv_discrete(name='dolly', values=(self.v, self.p) )","  ","  def __str__(self):","    return \"Dolly[{}, {}]\".format(self.l_l, self.u_l)","  ","  def tolatex(self):","    return \"Dolly\"","  ","  def pdf(self, x):","    return self.dist.pmf(x) if (x >= self.l_l and x <= self.u_l) else 0","  ","  def cdf(self, x):","    if x < self.l_l:","      return 0","    elif x > self.u_l:","      return 1","    return float(self.dist.cdf(math.floor(x) ) )","  ","  def tail(self, x):","    return 1 - self.cdf(x)","  ","  def mean(self):","    return self.moment(1)","  ","  def moment(self, m):","    return sum([self.v[i]**m*self.p[i] for i in range(12) ] )","  ","  def gen_sample(self):","    return random.randint(self.l_l, self.u_l)","  ","  def gen_sample(self):","    u = random.uniform(0, 1)","    # if u <= 0.23: return 1 + u/100","    # u -= 0.23","    # if u <= 0.14: return 2 + u/100","    # u -= 0.14","    # if u <= 0.09: return 3 + u/100","    # u -= 0.09","    # if u <= 0.03: return 4 + u/100","    # u -= 0.03","    # if u <= 0.08: return 5 + u/100","    # u -= 0.08","    # if u <= 0.1: return 6 + u/100","    # u -= 0.1","    # if u <= 0.04: return 7 + u/100","    # u -= 0.04","    # if u <= 0.14: return 8 + u/100","    # u -= 0.14","    # if u <= 0.12: return 9 + u/100","    # u -= 0.12","    # if u <= 0.021: return 10 + u/100","    # u -= 0.021","    # if u <= 0.007: return 11 + u/100","    # u -= 0.007","    # if u <= 0.002: return 12 + u/100","    # return 12 + u/100 # for safety","    return self.dist.rvs() + u/100","","class Bern(RV):","  def __init__(self, L, U, p):","    RV.__init__(self, l_l=L, u_l=U)","    self.p = p","    ","    self.v_l = [L, U]","    self.p_l = [1 - p, p]","    self.dist = scipy.stats.rv_discrete(name='bern', values=(self.v_l, self.p_l) )","  ","  def __str__(self):","    return \"Bern(l= {}, u= {}, p= {})\".format(self.l_l, self.u_l, self.p)","  ","  def pdf(self, x):","    # return (x == self.l_l)*(1 - self.p) + (x == self.u_l)*self.p","    return self.dist.pmf(x)","  ","  def cdf(self, x):","    if x < self.l_l:","      return 0","    elif x > self.u_l:","      return 1","    return self.dist.cdf(math.floor(x) )","  ","  def tail(self, x):","    return 1 - self.cdf(x)","  ","  def mean(self):","    # return (1 - self.p)*self.l_l + self.p*self.u_l","    return self.dist.mean()","  ","  def moment(self, i):","    # p = 1/(self.u_l - self.l_l + 1)","    # return sum([p*v**i for v in range(self.l_l, self.u_l+1) ] )","    return self.dist.moment(i)","  ","  def gen_sample(self):","    # u = random.uniform(0, 1)","    # return self.u_l + u/100 if u <= self.p else self.l_l + u/100","    return self.dist.rvs()","","# class BernPareto(RV):","#   def __init__(self, U, L, p, loc, a):","#     RV.__init__(self, l_l=U*loc, u_l=float(\"Inf\") )","    ","#     self.bern = Bern(U, L, p)","#     self.pareto = Pareto(loc, a)","  ","#   def __str__(self):","#     return \"Bern*Pareto\"","  ","#   def mean(self):","#     return self.bern.mean()*self.pareto.mean()","  ","#   def gen_sample(self):","#     return self.bern.gen_sample()*self.pareto.gen_sample()","","class DUniform():","  def __init__(self, lb, ub):","    RV.__init__(self, l_l=lb, u_l=ub)","    ","    self.v = numpy.arange(self.l_l, self.u_l+1)","    w_l = [1 for v in self.v]","    self.p = [w/sum(w_l) for w in w_l]","    self.dist = scipy.stats.rv_discrete(name='duniform', values=(self.v, self.p) )","  ","  def __str__(self):","    return \"DUniform[{}, {}]\".format(self.l_l, self.u_l)","  ","  def mean(self):","    return (self.u_l + self.l_l)/2","  ","  def pdf(self, x):","    return self.dist.pmf(x)","  ","  def cdf(self, x):","    if x < self.l_l:","      return 0","    elif x > self.u_l:","      return 1","    return self.dist.cdf(math.floor(x) )","  ","  def tail(self, x):","    return 1 - self.cdf(x)","  ","  def moment(self, i):","    # p = 1/(self.u_l - self.l_l + 1)","    # return sum([p*v**i for v in range(self.l_l, self.u_l+1) ] )","    return self.dist.moment(i)","  ","  def gen_sample(self):","    # return random.randint(self.l_l, self.u_l)","    return self.dist.rvs()","","class BoundedZipf():","  def __init__(self, lb, ub, a=1):","    RV.__init__(self, l_l=lb, u_l=ub)","    self.a = a","    ","    self.v = numpy.arange(self.l_l, self.u_l+1) # values","    w_l = [float(v)**(-a) for v in self.v] # self.v**(-a) # weights","    self.p = [w/sum(w_l) for w in w_l]","    self.dist = scipy.stats.rv_discrete(name='bounded_zipf', values=(self.v, self.p) )","  ","  def __str__(self):","    return \"BoundedZipf([{}, {}], a= {})\".format(self.l_l, self.u_l, self.a)","  ","  def pdf(self, x):","    return self.dist.pmf(x)","  ","  def cdf(self, x):","    # if x < self.l_l: return 0","    # elif x >= self.u_l: return 1","    # else:","    #   return sum(self.p[:(x-self.l_l+1) ] )","    return self.dist.cdf(x)","  ","  def inv_cdf(self, p):","    return self.dist.ppf(p)","  ","  def tail(self, x):","    return 1 - self.cfd(x)","  ","  def mean(self):","    # return sum([v*self.p(i) for i,v in enumerate(self.v) ] )","    return self.dist.mean()","  ","  def gen_sample(self):","    return self.dist.rvs(size=1)","","class Binom():","  def __init__(self, n, p):","    RV.__init__(self, l_l=0, u_l=n)","    self.n = n","    self.p = p","    ","    self.dist = scipy.stats.nbinom(n, p)","  ","  def __str__(self):","    return \"Binom[n= {}, p= {}]\".format(self.n, self.p)","  ","  def pdf(self, x):","    return self.dist.pdf(x)","  ","  def cdf(self, x):","    return self.dist.cdf(x)","  ","  def tail(self, x):","    return 1 - self.cdf(x)","  ","  def gen_sample(self):","    return self.dist.rvs(size=1)","","class NegBinom():","  def __init__(self, num_succ, p):","    RV.__init__(self, l_l=num_succ, u_l=float(\"Inf\") )","    self.p = p","    ","    self.dist = scipy.stats.nbinom(num_succ, p)","  ","  def __str__(self):","    return \"NegBinom[num_succ= {}, p= {}]\".format(self.l_l, self.p)","  ","  def cdf(self, x):","    return self.dist.cdf(x - self.l_l)","  ","  def tail(self, x):","    return 1 - self.cdf(x)","  ","  def gen_sample(self):","    return self.dist.rvs(size=1)","","class Gamma():","  def __init__(self, num_exp, rate):","    RV.__init__(self, l_l=0, u_l=float(\"Inf\") )","    ","    self.shape, self.scale = num_exp, 1/rate","    # self.dist = numpy.random.gamma(shape, scale, size=1)","    self.dist = scipy.stats.gamma(self.shape, self.scale)","  ","  def __str__(self):","    return \"Gamma[shape= {}, scale= {}]\".format(self.shape, self.scale)","  ","  def cdf(self, x):","    return self.dist.cdf(x)","  ","  def tail(self, x):","    return 1 - self.cdf(x)","  ","  def gen_sample(self):","    return self.dist.rvs(size=1)","","class X_n_k():","  def __init__(self, X, n, k):","    RV.__init__(self, l_l=X.l_l, u_l=X.u_l)","    self.X, self.n, self.k = X, n, k","  ","  def __str__(self):","    return \"{}_{{}:{}}\".format(X, self.n, self.k)","  ","  def pdf(self, x):","    return self.n*self.X.pdf(x) * binom(self.n-1, self.k-1) * self.X.cdf(x)**(self.k-1) * self.X.tail(x)**(self.n-self.k)","  ","  def cdf(self, x):","    return cdf_n_k(self.X, self.n, self.k, x)","  ","  def tail(self, x):","    return 1 - self.cdf(x)","  ","  def moment(self, i):","    return float(mpmath.quad(lambda x: i*x**(i-1) * self.tail(x), [0, mpmath.inf] ) )","  ","  def gen_sample(self):","    return gen_orderstat_sample(self.X, self.n, self.k)","","def binom(n, k):","  # if n == k:","  #   return 1","  # elif k == 1:","  #   return n","  # elif k == 0:","  #   return 1","  # elif k > n:","  #   return 0","  # else:","  #   return math.factorial(n)/math.factorial(k)/math.factorial(n-k)","  return scipy.special.binom(n, k)","","def moment_ith(i, X):","  # return float(mpmath.quad(lambda x: i*x**(i-1) * X.tail(x), [0, X.u_l] ) ) # mpmath.inf 10000*10","  return float(mpmath.quad(lambda x: i*x**(i-1) * X.tail(x), [0, mpmath.inf] ) )","","# Order stats","def cdf_n_k(X, n, k, x): # Pr{X_n:k < x}","  cdf = 0","  for i in range(k, n+1):","    cdf += binom(n, i) * X.cdf(x)**i * X.tail(x)**(n-i)","  return cdf","","def moment_ith_n_k(X, i, n, k): # E[X_n:k]","  return mpmath.quad(lambda x: i*x**(i-1) * (1 - cdf_n_k(X, n, k, x) ), [0, 10000*10] )","","def gen_orderstat_sample(X, n, k):","  # print(\"s_l= {}\".format(s_l) )","  return sorted([X.gen_sample() for _ in range(n) ] )[k-1]","","def H(n):","  if n == 0:","    return 0","  sum_ = 0","  for i in range(1, n+1):","    sum_ += float(1/i)","  return sum_","","def fact(n):","  return math.factorial(n)","","def laplace(X, r):","  return mpmath.quad(lambda x: math.exp(-r*x) * X.pdf(x), [0, X.u_l] )","","def inverse_laplace(F, t):","  # \"\"\"","  # Tupple \"a\", of five complex members.","  a = 12.83767675+1.666063445j, 12.22613209+5.012718792j,\\","      10.93430308+8.409673116j, 8.776434715+11.92185389j,\\","      5.225453361+15.72952905j","  # Tupple \"K\", of five complex members.","  K = -36902.08210+196990.4257j, 61277.02524-95408.62551j,\\","      -28916.56288+18169.18531j, +4655.361138-1.901528642j,\\","      -118.7414011-141.3036911j","","  sum = 0.0","  # Zakian's method does not work for t=0. Check that out.","  if t == 0:","    return None","  ","  # The for-loop below is the heart of Zakian's Inversion Algorithm.","  for j in range(0, 5):","    sum = sum + (K[j]*F(a[j]/t) ).real"," ","  return (2.0*sum/t)","  # \"\"\"","  \"\"\"","  # *** Function trapezoid computes the numerical inversion. ***","  def trapezoid(t, omega, sigma, nint):","    sum = 0.0","    delta = float(omega)/nint","    wi = 0.0","    ","    # The for-loop below computes the FFT Inversion Algorithm.","    # It is in fact the trapezoidal rule for numerical integration.","    for i in range(1, (nint+1)):","      witi = complex(0,wi*t)","","      wf = wi + delta","      wfti = complex(0,wf*t)","","      fi = (exp(witi)*F(complex(sigma,wi))).real","      ff = (exp(wfti)*F(complex(sigma,wf))).real","      sum = sum + 0.5*(wf-wi)*(fi+ff)","      wi = wf","    return (sum*exp(sigma*t)/pi).real","  ","  omega, sigma, nint = 200, 2.05, 1000 # 10000","  omega = math.ceil(omega)","  nint = math.ceil(nint)","  if omega <= 0:","    omega = 200","  if nint <= 0:","    nint = 10000","  ","  return trapezoid(t, omega, sigma, nint)","  \"\"\"","","def check_invertlaplace():","  V = HyperExp([0.8, 0.2], [1, 0.1] )","  ","  V_laplace = lambda s: V.laplace(s)","  def V_pdf(t):","    return mpmath.invertlaplace(V_laplace, t, method='talbot')","  ","  EV = V.moment(1)","  EV_ = mpmath.quad(lambda v: v*V_pdf(v), [0, mpmath.inf] )","  # EV_ = mpmath.quad(lambda v: V.tail(v), [0, mpmath.inf] )","  print(\"EV= {}, EV_= {}\".format(EV, EV_) )","  ","  # t_l = []","  # pdf_l, invertedpdf_l = [], []","  # for t in numpy.linspace(0.01, 20, 20):","  #   t_l.append(t)","  #   pdf_l.append(V.pdf(t) )","  #   invertedpdf_l.append(V_pdf(t) )","  # plot.plot(t_l, pdf_l, label='Pdf', color=next(dark_color), marker=next(marker), linestyle=':', mew=2)","  # plot.plot(t_l, invertedpdf_l, label='Inverted Pdf', color=next(dark_color), marker=next(marker), linestyle=':', mew=2)","  # plot.xlabel(r'$t$', fontsize=14)","  # plot.ylabel(r'PDF', fontsize=14)","  # plot.legend()","  # plot.savefig(\"check_invertlaplace.pdf\")","  # plot.gcf().clear()","  alog(\"done.\")","","def check_tpareto():","  rv = TPareto(1, 1000, 1.1)","  s_l = []","  for i in range(10000*2):","    s_l.append(rv.gen_sample() )","  ","  s_l = numpy.sort(s_l)[::-1]","  y_l = numpy.arange(s_l.size)/s_l.size","  plot.plot(s_l, y_l, label=r'${}$'.format(rv), marker=next(marker), color=next(dark_color), linestyle='-', mew=mew, ms=ms)","  ","  plot.xscale('log')","  plot.yscale('log')","  plot.xlabel(r'$x$', fontsize=14)","  plot.ylabel(r'$Pr\\{X > x\\}$', fontsize=14)","  plot.legend()","  plot.savefig(\"check_tpareto.pdf\")","  plot.gcf().clear()","  log(WARNING, \"done.\")","","if __name__ == \"__main__\":","  # plot_gensample_check()","  ","  # D = Dolly()","  # # print(\"Dolly sample= {}\".format(D.gen_sample() ) )","  # x_l, cdf_l = [], []","  # for x in numpy.linspace(0, 20, 100):","  #   x_l.append(x)","  #   cdf_l.append(D.cdf(x) )","  # plot.plot(x_l, cdf_l, label=r'CDF of Dolly', marker=next(marker), linestyle=':', mew=2)","  # plot.legend()","  # plot.savefig(\"plot_dolly_cdf.pdf\")","  # plot.gcf().clear()","  ","  # check_invertlaplace()","  ","  D = Dolly()","  print(\"ED= {}\".format(D.mean() ) )","  V = TPareto(1, 100, 1.1)","  print(\"EV= {}\".format(V.mean() ) )"]},{"action":"insertText","range":{"start":{"row":0,"column":0},"end":{"row":0,"column":17}},"text":"import matplotlib"},{"action":"insertText","range":{"start":{"row":0,"column":17},"end":{"row":1,"column":0}},"text":"\n"},{"action":"insertLines","range":{"start":{"row":1,"column":0},"end":{"row":575,"column":0}},"lines":["matplotlib.rcParams['pdf.fonttype'] = 42","matplotlib.rcParams['ps.fonttype'] = 42","matplotlib.use('Agg')","import matplotlib.pyplot as plot","","import math, random, numpy, scipy","from scipy.stats import *","from patch import *","","class RV(): # Random Variable","  def __init__(self, l_l, u_l):","    self.l_l = l_l","    self.u_l = u_l","","class Normal(RV):","  def __init__(self, mu, sigma):","    RV.__init__(self, l_l=-np.inf, u_l=np.inf)","    self.mu = mu","    self.sigma = sigma","    ","    self.dist = scipy.stats.norm(mu, sigma)","  ","  def __repr__(self):","    return 'Normal[mu= {}, sigma= {}]'.format(self.mu, self.sigma)","  ","  def cdf(self, x):","    return self.dist.cdf(x)","  ","  def tail(self, x):","    return 1 - self.cdf(x)","  ","  def mean(self):","    return self.mu","  ","  def sample(self):","    return self.dist.rvs(size=1)[0]","","class TNormal(RV):","  def __init__(self, mu, sigma):","    RV.__init__(self, l_l=0, u_l=float('Inf') )","    self.mu = mu","    self.sigma = sigma","    ","    lower, upper = 0, mu + 10*sigma","    self.dist = scipy.stats.truncnorm(","      a=(lower - mu)/sigma, b=(upper - mu)/sigma, loc=mu, scale=sigma)","  ","  def __repr__(self):","    return 'TNormal[mu= {}, sigma= {}]'.format(self.mu, self.sigma)","  ","  def cdf(self, x):","    return self.dist.cdf(x)","  ","  def tail(self, x):","    return 1 - self.cdf(x)","  ","  def mean(self):","    return self.dist.mean()","  ","  def std(self):","    return self.dist.std()","  ","  def sample(self):","    return self.dist.rvs(size=1)[0]","","class Exp(RV):","  def __init__(self, mu, D=0):","    RV.__init__(self, l_l=D, u_l=float(\"inf\") )","    self.D = D","    self.mu = mu","  ","  def __repr__(self):","    if self.D == 0:","      return r'Exp(\\mu={})'.format(self.mu)","    return r'{} + Exp(\\mu={})'.format(self.D, self.mu)","  ","  def tail(self, x):","    if x <= self.l_l:","      return 1","    return math.exp(-self.mu*(x - self.D) )","  ","  def cdf(self, x):","    if x <= self.l_l:","      return 0","    return 1 - math.exp(-self.mu*(x - self.D) )","  ","  def pdf(self, x):","    if x <= self.l_l:","      return 0","    return self.mu*math.exp(-self.mu*(x - self.D) )","  ","  def mean(self):","    return self.D + 1/self.mu","  ","  def var(self):","    return 1/self.mu**2","  ","  def moment(self, i):","    return moment_ith(i, self)","  ","  def laplace(self, s):","    if self.D > 0:","      log(ERROR, \"D= {} != 0\".format(D) )","    return self.mu/(s + self.mu)","  ","  def sample(self):","    return self.D + random.expovariate(self.mu)","","class HyperExp(RV):","  def __init__(self, p_l, mu_l):","    RV.__init__(self, l_l=0, u_l=float(\"inf\") )","    self.p_l = p_l","    self.mu_l = mu_l","    ","    self.X_l = [Exp(mu) for mu in mu_l]","    ","    self.dist_for_gensample = scipy.stats.rv_discrete(","      name='hyperexp', values=(np.arange(0, len(self.p_l) ), self.p_l) )","  ","  def __repr__(self):","    return r'HyperExp(p= {}, \\mu= {})'.format(self.p_l, self.mu_l)","  ","  def pdf(self, x):","    return sum([self.p_l[i]*X.pdf(x) for i, X in enumerate(self.X_l) ] )","  ","  def cdf(self, x):","    return sum([self.p_l[i]*X.cdf(x) for i, X in enumerate(self.X_l) ] )","  ","  def tail(self, x):","    return 1 - self.cdf(x)","  ","  def mean(self):","    return sum([self.p_l[i]*X.mean() for i, X in enumerate(self.X_l) ] )","  ","  def moment(self, m):","    return sum([self.p_l[i]*X.moment(m) for i, X in enumerate(self.X_l) ] )","  ","  def laplace(self, s):","    return sum([self.p_l[i]*X.laplace(s) for i, X in enumerate(self.X_l) ] )","  ","  def sample(self):","    i = self.dist_for_gensample.rvs()","    return self.X_l[i].sample()","","class Pareto(RV):","  def __init__(self, loc, a):","    RV.__init__(self, l_l=loc, u_l=float(\"inf\") )","    self.loc = loc","    self.a = a","  ","  def __repr__(self):","    return \"Pareto(loc= {}, a= {})\".format(self.loc, self.a)","  ","  def tolatex(self):","    return r'Pareto(\\min= {}, \\alpha= {})'.format(self.loc, self.a)","  ","  def tail(self, x):","    if x <= self.l_l:","      return 1","    return (self.loc/x)**self.a","  ","  def cdf(self, x):","    if x <= self.l_l:","      return 0","    return 1 - (self.loc/x)**self.a","  ","  def pdf(self, x):","    if x <= self.l_l:","      return 0","    return self.a*self.loc**self.a / x**(self.a+1)","  ","  def dpdf_dx(self, x):","    if x <= self.l_l:","      return 0","    return sympy.mpmath.diff(lambda y: self.a*self.loc**self.a / y**(self.a+1), x)","  ","  def mean(self):","    if self.a <= 1:","      log(WARNING, \"Mean is Infinity; a= {} <= 1\".format(self.a) )","      return float(\"inf\")","    else:","      return self.loc*self.a/(self.a-1)","  ","  def var(self):","    if self.a <= 2:","      log(WARNING, \"Variance is Infinity; a= {} <= 2\".format(self.a) )","      return float(\"inf\")","    else:","      return self.a*self.loc**2 / (self.a-1)**2/(self.a-2)","  ","  def sample(self):","    return ((numpy.random.pareto(self.a, 1) + 1)*self.loc)[0]","    # return pareto.ppf(numpy.random.uniform(0, 1), b=self.a, scale=self.loc)","","class TPareto(): # Truncated","  def __init__(self, l, u, a):","    RV.__init__(self, l_l=l, u_l=u)","    self.l = l","    self.u = u","    self.a = a","  ","  def __repr__(self):","    return \"TPareto(l= {}, u= {}, a= {})\".format(self.l, self.u, self.a)","  ","  def tolatex(self):","    return r'TPareto(\\min= {}, \\max= {}, \\alpha= {})'.format(self.l, self.u, self.a)","  ","  def pdf(self, x):","    if x < self.l: return 0","    elif x >= self.u: return 0","    else:","      return self.a*self.l**self.a * 1/x**(self.a+1) / (1 - (self.l/self.u)**self.a)","  ","  def cdf(self, x):","    if x < self.l: return 0","    elif x >= self.u: return 1","    else:","      return (1 - (self.l/x)**self.a)/(1 - (self.l/self.u)**self.a)","  ","  def tail(self, x):","    return 1 - self.cdf(x)","  ","  def mean(self):","    return self.moment(1)","  ","  def std(self):","    return math.sqrt(self.moment(2) - self.mean()**2)","  ","  def moment(self, k):","    if k == self.a:","      return math.log(self.u_l/self.l)","    else:","      return self.a*self.l**k/(self.a-k) * \\","             (1 - (self.l/self.u)**(self.a-k))/(1 - (self.l/self.u)**self.a)","  ","  def sample(self):","    r = random.uniform(0, 1)","    s = self.l*(1 - r*(1-(self.l/self.u)**self.a) )**(-1/self.a)","    if s < self.l or s > self.u:","      log(ERROR, \"illegal sample! s= {}\".format(s) )","      return None","    return s","","class SimRV(RV):","  def __init__(self, sample_l):","    RV.__init__(self, l_l=min(sample_l), u_l=max(sample_l) )","    ","    self.sample_l = sample_l","    self.num_sample = len(self.sample_l)","  ","  def __repr__(self):","    return \"SimRV\"","  ","  def mean(self):","    return sum(self.sample_l)/self.num_sample","  ","  def sample(self):","    return self.sample_l[math.floor(self.num_sample*random.random() ) ]","","class Dolly(RV):","  # Kristen et al. A Better Model for Job Redundancy: Decoupling Server Slowdown and Job Size","  def __init__(self):","    RV.__init__(self, l_l=1, u_l=12)","    ","    self.v = numpy.arange(1, 13)","    self.p = [0.23, 0.14, 0.09, 0.03, 0.08, 0.1, 0.04, 0.14, 0.12, 0.021, 0.007, 0.002]","    self.dist = scipy.stats.rv_discrete(name='dolly', values=(self.v, self.p) )","  ","  def __repr__(self):","    return \"Dolly[{}, {}]\".format(self.l_l, self.u_l)","  ","  def tolatex(self):","    return \"Dolly\"","  ","  def pdf(self, x):","    return self.dist.pmf(x) if (x >= self.l_l and x <= self.u_l) else 0","  ","  def cdf(self, x):","    if x < self.l_l:","      return 0","    elif x > self.u_l:","      return 1","    return float(self.dist.cdf(math.floor(x) ) )","  ","  def tail(self, x):","    return 1 - self.cdf(x)","  ","  def mean(self):","    return self.moment(1)","  ","  def moment(self, m):","    return sum([self.v[i]**m*self.p[i] for i in range(12) ] )","  ","  def sample(self):","    return random.randint(self.l_l, self.u_l)","  ","  def sample(self):","    u = random.uniform(0, 1)","    return self.dist.rvs()[0] + u/100","","class Bern(RV):","  def __init__(self, L, U, p):","    RV.__init__(self, l_l=L, u_l=U)","    self.p = p","    ","    self.v_l = [L, U]","    self.p_l = [1 - p, p]","    self.dist = scipy.stats.rv_discrete(name='bern', values=(self.v_l, self.p_l) )","  ","  def __repr__(self):","    return \"Bern(l= {}, u= {}, p= {})\".format(self.l_l, self.u_l, self.p)","  ","  def pdf(self, x):","    return self.dist.pmf(x)","  ","  def cdf(self, x):","    if x < self.l_l:","      return 0","    elif x > self.u_l:","      return 1","    return self.dist.cdf(math.floor(x) )","  ","  def tail(self, x):","    return 1 - self.cdf(x)","  ","  def mean(self):","    return self.dist.mean()","  ","  def moment(self, i):","    return self.dist.moment(i)","  ","  def sample(self):","    return self.dist.rvs()[0]","","class DUniform():","  def __init__(self, lb, ub):","    RV.__init__(self, l_l=lb, u_l=ub)","    ","    self.v = numpy.arange(self.l_l, self.u_l+1)","    w_l = [1 for v in self.v]","    self.p = [w/sum(w_l) for w in w_l]","    self.dist = scipy.stats.rv_discrete(name='duniform', values=(self.v, self.p) )","  ","  def __repr__(self):","    return \"DUniform[{}, {}]\".format(self.l_l, self.u_l)","  ","  def mean(self):","    return (self.u_l + self.l_l)/2","  ","  def pdf(self, x):","    return self.dist.pmf(x)","  ","  def cdf(self, x):","    if x < self.l_l:","      return 0","    elif x > self.u_l:","      return 1","    return self.dist.cdf(math.floor(x) )","  ","  def tail(self, x):","    return 1 - self.cdf(x)","  ","  def moment(self, i):","    # p = 1/(self.u_l - self.l_l + 1)","    # return sum([p*v**i for v in range(self.l_l, self.u_l+1) ] )","    return self.dist.moment(i)","  ","  def sample(self):","    # return random.randint(self.l_l, self.u_l)","    return self.dist.rvs() # [0]","","class BZipf():","  def __init__(self, lb, ub, a=1):","    RV.__init__(self, l_l=lb, u_l=ub)","    self.a = a","    ","    self.v = numpy.arange(self.l_l, self.u_l+1) # values","    w_l = [float(v)**(-a) for v in self.v] # self.v**(-a) # weights","    self.p = [w/sum(w_l) for w in w_l]","    self.dist = scipy.stats.rv_discrete(name='bounded_zipf', values=(self.v, self.p) )","  ","  def __repr__(self):","    return \"BZipf([{}, {}], a= {})\".format(self.l_l, self.u_l, self.a)","  ","  def pdf(self, x):","    return self.dist.pmf(x)","  ","  def cdf(self, x):","    # if x < self.l_l: return 0","    # elif x >= self.u_l: return 1","    # else:","    #   return sum(self.p[:(x-self.l_l+1) ] )","    return self.dist.cdf(x)","  ","  def inv_cdf(self, p):","    return self.dist.ppf(p)","  ","  def tail(self, x):","    return 1 - self.cfd(x)","  ","  def mean(self):","    # return sum([v*self.p(i) for i,v in enumerate(self.v) ] )","    return self.dist.mean()","  ","  def sample(self):","    return self.dist.rvs(size=1)[0]","","class Binom():","  def __init__(self, n, p):","    RV.__init__(self, l_l=0, u_l=n)","    self.n = n","    self.p = p","    ","    self.dist = scipy.stats.nbinom(n, p)","  ","  def __repr__(self):","    return \"Binom[n= {}, p= {}]\".format(self.n, self.p)","  ","  def pdf(self, x):","    return self.dist.pdf(x)","  ","  def cdf(self, x):","    return self.dist.cdf(x)","  ","  def tail(self, x):","    return 1 - self.cdf(x)","  ","  def sample(self):","    return self.dist.rvs(size=1)[0]","","class NegBinom():","  def __init__(self, num_succ, p):","    RV.__init__(self, l_l=num_succ, u_l=float('Inf') )","    self.p = p","    ","    self.dist = scipy.stats.nbinom(num_succ, p)","  ","  def __repr__(self):","    return \"NegBinom[num_succ= {}, p= {}]\".format(self.l_l, self.p)","  ","  def cdf(self, x):","    return self.dist.cdf(x - self.l_l)","  ","  def tail(self, x):","    return 1 - self.cdf(x)","  ","  def sample(self):","    return self.dist.rvs(size=1)[0]","","class Gamma():","  def __init__(self, num_exp, rate):","    RV.__init__(self, l_l=0, u_l=float('Inf') )","    ","    self.shape, self.scale = num_exp, 1/rate","    # self.dist = numpy.random.gamma(shape, scale, size=1)","    self.dist = scipy.stats.gamma(self.shape, self.scale)","  ","  def __repr__(self):","    return \"Gamma[shape= {}, scale= {}]\".format(self.shape, self.scale)","  ","  def cdf(self, x):","    return self.dist.cdf(x)","  ","  def tail(self, x):","    return 1 - self.cdf(x)","  ","  def sample(self):","    return self.dist.rvs(size=1)[0]","","class X_n_k():","  def __init__(self, X, n, k):","    RV.__init__(self, l_l=X.l_l, u_l=X.u_l)","    self.X, self.n, self.k = X, n, k","  ","  def __repr__(self):","    return \"{}_{{}:{}}\".format(X, self.n, self.k)","  ","  def pdf(self, x):","    return self.n*self.X.pdf(x) * binomial(self.n-1, self.k-1) * self.X.cdf(x)**(self.k-1) * self.X.tail(x)**(self.n-self.k)","  ","  def cdf(self, x):","    return cdf_n_k(self.X, self.n, self.k, x)","  ","  def tail(self, x):","    return 1 - self.cdf(x)","  ","  def moment(self, i):","    return float(mpmath.quad(lambda x: i*x**(i-1) * self.tail(x), [0, mpmath.inf] ) )","  ","  def sample(self):","    return gen_orderstat_sample(self.X, self.n, self.k)","","def binomial(n, k):","  return scipy.special.binom(n, k)","","def moment_ith(i, X):","  # return float(mpmath.quad(lambda x: i*x**(i-1) * X.tail(x), [0, X.u_l] ) ) # mpmath.inf 10000*10","  return float(mpmath.quad(lambda x: i*x**(i-1) * X.tail(x), [0, mpmath.inf] ) )","","# Order stats","def cdf_n_k(X, n, k, x): # Pr{X_n:k < x}","  cdf = 0","  for i in range(k, n+1):","    cdf += binomial(n, i) * X.cdf(x)**i * X.tail(x)**(n-i)","  return cdf","","def moment_ith_n_k(X, i, n, k): # E[X_n:k]","  return mpmath.quad(lambda x: i*x**(i-1) * (1 - cdf_n_k(X, n, k, x) ), [0, 10000*10] )","","def gen_orderstat_sample(X, n, k):","  # print(\"s_l= {}\".format(s_l) )","  return sorted([X.sample() for _ in range(n) ] )[k-1]","","def H(n):","  if n == 0:","    return 0","  sum_ = 0","  for i in range(1, n+1):","    sum_ += float(1/i)","  return sum_","","def fact(n):","  return math.factorial(n)","","def laplace(X, r):","  return mpmath.quad(lambda x: math.exp(-r*x) * X.pdf(x), [0, X.u_l] )","","def distm_to_rv(dist_m):","  name = dist_m['name']","  if name == 'TPareto':","    return TPareto(dist_m['l'], dist_m['u'], dist_m['a'] )","  elif name == 'BZipf':","    return BZipf(dist_m['l'], dist_m['u'] )","  else:","    log(ERROR, \"Unrecognized name= {}\".format(name) )","","class MixedRVs():","  def __init__(self, p_l, rv_l):","    self.p_l = p_l","    self.rv_l = rv_l","    self.dist_to_select_rv = scipy.stats.rv_discrete(","      name='mixed', values=(numpy.arange(0, len(p_l) ), p_l) )","  ","  def __repr__(self):","    return 'MixOfRVs:\\n' + \\","      '  p_l= {}\\n'.format(self.p_l) + \\","      '  rv_l= {}\\n'.format(self.rv_l)","  ","  def mean(self):","    return sum([self.p_l[i]*rv.mean() for i, rv in enumerate(self.rv_l) ] )","  ","  def sample(self):","    return self.rv_l[self.dist_to_select_rv.rvs() ].sample()","","if __name__ == \"__main__\":","  # plot_gensample_check()","  ","  # D = Dolly()","  # # print(\"Dolly sample= {}\".format(D.sample() ) )","  # x_l, cdf_l = [], []","  # for x in numpy.linspace(0, 20, 100):","  #   x_l.append(x)","  #   cdf_l.append(D.cdf(x) )","  # plot.plot(x_l, cdf_l, label=r'CDF of Dolly', marker=next(marker), linestyle=':', mew=2)","  # plot.legend()","  # plot.savefig(\"plot_dolly_cdf.pdf\")","  # plot.gcf().clear()","  ","  # check_invertlaplace()","  ","  # D = Dolly()","  # print(\"ED= {}\".format(D.mean() ) )","  V = TPareto(1, 100, 1.1)","  print(\"EV= {}\".format(V.mean() ) )"]},{"action":"insertText","range":{"start":{"row":575,"column":0},"end":{"row":575,"column":2}},"text":"  "}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":8,"column":5},"end":{"row":8,"column":10}},"text":"patch"},{"action":"insertText","range":{"start":{"row":8,"column":5},"end":{"row":8,"column":6}},"text":"l"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":8,"column":6},"end":{"row":8,"column":7}},"text":"o"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":8,"column":7},"end":{"row":8,"column":8}},"text":"g"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":8,"column":8},"end":{"row":8,"column":9}},"text":"_"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":8,"column":9},"end":{"row":8,"column":10}},"text":"u"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":8,"column":10},"end":{"row":8,"column":11}},"text":"t"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":8,"column":11},"end":{"row":8,"column":12}},"text":"i"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":8,"column":12},"end":{"row":8,"column":13}},"text":"l"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":8,"column":13},"end":{"row":8,"column":14}},"text":"s"}]}],[{"group":"doc","deltas":[{"action":"removeLines","range":{"start":{"row":5,"column":0},"end":{"row":6,"column":0}},"nl":"\n","lines":[""]}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":6,"column":25},"end":{"row":7,"column":0}},"text":"\n"}]}]],"redo":[[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":7,"column":0},"end":{"row":7,"column":2}},"text":"  "}]}]]},"/log_utils.py":{"scrollTop":0,"scrollLeft":0,"selection":{"start":{"row":24,"column":5},"end":{"row":24,"column":5}},"lastUse":1535470211742,"undo":[[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":36,"column":0},"end":{"row":36,"column":54}},"text":"  print(\"{}:: {}\".format(inspect.stack()[1][3], log) )"},{"action":"removeLines","range":{"start":{"row":9,"column":0},"end":{"row":36,"column":0}},"nl":"\n","lines":["\"\"\"","*log: To have a unified logging which can be refactored easily","\"\"\"","def sim_log(dlevel, env, caller, action, affected):","  \"\"\"","  Parameters","  ----------","  dlevel= int -- debug level","  env= simpy.Environment","  caller= string -- name of the sim component acting","  action= string","  affected= any -- whatever component being acted on/with e.g., packet","  \"\"\"","  if DEBUG_LEVEL <= dlevel:","    print(\"{} t: {:.2f}] {} {}\\n\\t{}\".format(debug_level__string_map[dlevel], env.now, caller, action, affected) )","","def log(dlevel, log):","  \"\"\"","  Parameters","  ----------","  dlevel= int -- debug level","  log= string to be logged","  \"\"\"","  if DEBUG_LEVEL <= dlevel:","    print(\"{}] {}:: {}\".format(debug_level__string_map[dlevel], inspect.stack()[1][3], log) )","","def alog(log):"]},{"action":"insertText","range":{"start":{"row":9,"column":0},"end":{"row":9,"column":3}},"text":"\"\"\""},{"action":"insertText","range":{"start":{"row":9,"column":3},"end":{"row":10,"column":0}},"text":"\n"},{"action":"insertLines","range":{"start":{"row":10,"column":0},"end":{"row":51,"column":0}},"lines":["*log: To have a unified logging which can be refactored easily","\"\"\"","def slog(dlevel, env, caller, action, affected, **kwargs):","  \"\"\"","  Parameters","  ----------","  dlevel= int -- debug level","  env= simpy.Environment","  caller= string -- name of the sim component acting","  action= string","  affected= any -- whatever component being acted on/with e.g., packet","  \"\"\"","  if DEBUG_LEVEL <= dlevel:","    print(\"{} t: {:.2f}] {} {}\\n\\t{}\".format(debug_level__string_map[dlevel], env.now, caller, action, affected) )","    for k, v in kwargs.items():","      print(\"  {}: {}\".format(k, pprint.pformat(v) ) )","","def log(dlevel, log, **kwargs):","  \"\"\"","  Parameters","  ----------","  dlevel= int -- debug level","  log= string to be logged","  \"\"\"","  try:","    funcname = inspect.stack()[1][3]","  except IndexError:","    funcname = ''","  ","  if DEBUG_LEVEL <= dlevel:","    print(\"{}] {}:: {}\".format(debug_level__string_map[dlevel], funcname, log) )","    for k, v in kwargs.items():","      print(\"  {}: {}\".format(k, pprint.pformat(v) ) )","","def alog(log, **kwargs):","  print(\"{}:: {}\".format(inspect.stack()[1][3], log) )","  for k, v in kwargs.items():","    print(\"  {}: {}\".format(k, pprint.pformat(v) ) )","","def blog(**kwargs):","  for k, v in kwargs.items():"]},{"action":"insertText","range":{"start":{"row":51,"column":0},"end":{"row":51,"column":52}},"text":"    print(\"  {}: {}\".format(k, pprint.pformat(v) ) )"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":54,"column":0},"end":{"row":54,"column":81}},"text":"  return \"{}/{}_ns{}_d{}_ar{}\".format(folder_name, prob_name, ns, d, '%.2f' % ar)"},{"action":"removeLines","range":{"start":{"row":53,"column":0},"end":{"row":54,"column":0}},"nl":"\n","lines":["def save_name(folder_name, prob_name, ns, d, ar):"]}]}],[{"group":"doc","deltas":[{"action":"removeLines","range":{"start":{"row":53,"column":0},"end":{"row":54,"column":0}},"nl":"\n","lines":[""]}]}],[{"group":"doc","deltas":[{"action":"removeLines","range":{"start":{"row":52,"column":0},"end":{"row":53,"column":0}},"nl":"\n","lines":[""]}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":7,"column":0},"end":{"row":7,"column":92}},"text":"debug_level__string_map = {INFO: \"INFO\", DEBUG: \"DEBUG\", WARNING: \"WARNING\", ERROR: \"ERROR\"}"}]}],[{"group":"doc","deltas":[{"action":"removeLines","range":{"start":{"row":7,"column":0},"end":{"row":8,"column":0}},"nl":"\n","lines":[""]}]}],[{"group":"doc","deltas":[{"action":"removeLines","range":{"start":{"row":7,"column":0},"end":{"row":8,"column":0}},"nl":"\n","lines":[""]}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":2,"column":0},"end":{"row":3,"column":0}},"text":"\n"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":3,"column":0},"end":{"row":4,"column":0}},"text":"\n"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":3,"column":0},"end":{"row":3,"column":92}},"text":"debug_level__string_map = {INFO: \"INFO\", DEBUG: \"DEBUG\", WARNING: \"WARNING\", ERROR: \"ERROR\"}"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":7,"column":0},"end":{"row":7,"column":21}},"text":"# DEBUG_LEVEL = ERROR"},{"action":"removeLines","range":{"start":{"row":5,"column":0},"end":{"row":7,"column":0}},"nl":"\n","lines":["# DEBUG_LEVEL = INFO","DEBUG_LEVEL = WARNING"]}]}],[{"group":"doc","deltas":[{"action":"removeLines","range":{"start":{"row":5,"column":0},"end":{"row":6,"column":0}},"nl":"\n","lines":[""]}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":24,"column":0},"end":{"row":25,"column":0}},"text":"\n"},{"action":"insertText","range":{"start":{"row":25,"column":0},"end":{"row":26,"column":0}},"text":"\n"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":24,"column":0},"end":{"row":24,"column":20}},"text":"# DEBUG_LEVEL = INFO"},{"action":"insertText","range":{"start":{"row":24,"column":20},"end":{"row":25,"column":0}},"text":"\n"},{"action":"insertLines","range":{"start":{"row":25,"column":0},"end":{"row":26,"column":0}},"lines":["DEBUG_LEVEL = WARNING"]},{"action":"insertText","range":{"start":{"row":26,"column":0},"end":{"row":26,"column":21}},"text":"# DEBUG_LEVEL = ERROR"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":5,"column":0},"end":{"row":5,"column":20}},"text":"# DEBUG_LEVEL = INFO"},{"action":"insertText","range":{"start":{"row":5,"column":20},"end":{"row":6,"column":0}},"text":"\n"},{"action":"insertLines","range":{"start":{"row":6,"column":0},"end":{"row":7,"column":0}},"lines":["DEBUG_LEVEL = WARNING"]},{"action":"insertText","range":{"start":{"row":7,"column":0},"end":{"row":7,"column":21}},"text":"# DEBUG_LEVEL = ERROR"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":7,"column":21},"end":{"row":8,"column":0}},"text":"\n"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":22,"column":5},"end":{"row":22,"column":6}},"text":"S"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":6,"column":0},"end":{"row":6,"column":1}},"text":"S"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":7,"column":2},"end":{"row":7,"column":3}},"text":"S"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":5,"column":2},"end":{"row":5,"column":3}},"text":"S"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":2,"column":0},"end":{"row":3,"column":0}},"text":"\n"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":3,"column":0},"end":{"row":4,"column":0}},"text":"\n"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":3,"column":0},"end":{"row":3,"column":8}},"text":"INFO = 0"},{"action":"insertText","range":{"start":{"row":3,"column":8},"end":{"row":4,"column":0}},"text":"\n"},{"action":"insertLines","range":{"start":{"row":4,"column":0},"end":{"row":6,"column":0}},"lines":["DEBUG = 1","WARNING = 2"]},{"action":"insertText","range":{"start":{"row":6,"column":0},"end":{"row":6,"column":9}},"text":"ERROR = 3"}]}],[{"group":"doc","deltas":[{"action":"removeLines","range":{"start":{"row":7,"column":0},"end":{"row":8,"column":0}},"nl":"\n","lines":[""]}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":6,"column":9},"end":{"row":7,"column":0}},"text":"\n"}]}],[{"group":"doc","deltas":[{"action":"removeLines","range":{"start":{"row":7,"column":0},"end":{"row":8,"column":0}},"nl":"\n","lines":[""]}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":0,"column":16},"end":{"row":0,"column":46}},"text":"math, mpmath, scipy, itertools"},{"action":"insertText","range":{"start":{"row":0,"column":16},"end":{"row":0,"column":17}},"text":"p"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":0,"column":17},"end":{"row":0,"column":18}},"text":"p"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":0,"column":18},"end":{"row":0,"column":19}},"text":"r"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":0,"column":19},"end":{"row":0,"column":20}},"text":"i"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":0,"column":20},"end":{"row":0,"column":21}},"text":"n"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":0,"column":21},"end":{"row":0,"column":22}},"text":"t"}]}],[{"group":"doc","deltas":[{"action":"removeLines","range":{"start":{"row":1,"column":0},"end":{"row":2,"column":0}},"nl":"\n","lines":["from scipy import special"]}]}]],"redo":[]},"/w_queues/sim.py":{"scrollTop":3682,"scrollLeft":0,"selection":{"start":{"row":243,"column":15},"end":{"row":243,"column":15}},"lastUse":1535463717660,"undo":[],"redo":[[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":28,"column":29},"end":{"row":28,"column":35}},"text":"size, "}]}]]},"/w_queues/exp.py":{"scrollTop":0,"scrollLeft":0,"selection":{"start":{"row":14,"column":35},"end":{"row":14,"column":35}},"lastUse":1535425971314,"undo":[],"redo":[]},"/exp.py":{"scrollTop":0,"scrollLeft":0,"selection":{"start":{"row":0,"column":0},"end":{"row":0,"column":0}},"lastUse":1535425968390,"undo":[[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":0,"column":0},"end":{"row":0,"column":1}},"text":"f"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":0,"column":1},"end":{"row":0,"column":2}},"text":"r"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":0,"column":2},"end":{"row":0,"column":3}},"text":"o"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":0,"column":3},"end":{"row":0,"column":4}},"text":"m"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":0,"column":4},"end":{"row":0,"column":5}},"text":" "}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":0,"column":5},"end":{"row":0,"column":6}},"text":"s"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":0,"column":6},"end":{"row":0,"column":7}},"text":"i"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":0,"column":7},"end":{"row":0,"column":8}},"text":"m"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":0,"column":8},"end":{"row":0,"column":9}},"text":"."}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":0,"column":9},"end":{"row":0,"column":10}},"text":"p"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":0,"column":10},"end":{"row":0,"column":11}},"text":"y"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":0,"column":0},"end":{"row":0,"column":11}},"text":"from sim.py"}]}]],"redo":[]},"/utils.py":{"scrollTop":0,"scrollLeft":0,"selection":{"start":{"row":2,"column":81},"end":{"row":2,"column":81}},"lastUse":1535392670118,"undo":[[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":0,"column":0},"end":{"row":0,"column":49}},"text":"def save_name(folder_name, prob_name, ns, d, ar):"},{"action":"insertText","range":{"start":{"row":0,"column":49},"end":{"row":1,"column":0}},"text":"\n"},{"action":"insertText","range":{"start":{"row":1,"column":0},"end":{"row":1,"column":79}},"text":"return \"{}/{}_ns{}_d{}_ar{}\".format(folder_name, prob_name, ns, d, '%.2f' % ar)"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":1,"column":0},"end":{"row":1,"column":2}},"text":"  "}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":0,"column":0},"end":{"row":1,"column":0}},"text":"\n"}]}]],"redo":[]},"/plot_utils.py":{"scrollTop":0,"scrollLeft":0,"selection":{"start":{"row":9,"column":48},"end":{"row":9,"column":48}},"lastUse":1535392567191,"undo":[[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":0,"column":0},"end":{"row":0,"column":46}},"text":"import inspect, math, mpmath, scipy, itertools"},{"action":"insertText","range":{"start":{"row":0,"column":46},"end":{"row":1,"column":0}},"text":"\n"},{"action":"insertLines","range":{"start":{"row":1,"column":0},"end":{"row":8,"column":0}},"lines":["from scipy import special","","# dark_color = itertools.cycle(('green', 'red', 'blue', 'turquoise', 'goldenrod', 'purple', 'gray', 'brown', 'magenta', 'gold', 'olive', 'orangered', 'silver', 'rosybrown', 'plum', 'lightsteelblue', 'lightpink', 'orange', 'darkgray'))","dark_color = itertools.cycle(('green', 'red', 'blue', 'goldenrod', 'magenta', 'purple', 'gray', 'brown', 'turquoise', 'gold', 'olive', 'silver', 'rosybrown', 'plum', 'lightsteelblue', 'lightpink', 'orange', 'darkgray', 'orangered'))","light_color = itertools.cycle(('silver', 'rosybrown', 'plum', 'lightsteelblue', 'lightpink', 'orange', 'turquoise'))","linestyle = itertools.cycle(('-', '--', '-.', ':') )","marker = itertools.cycle(('^', 'p', 'd', '+', 'v', '<', '>', '1' , '2', '3', '4', 'x') )"]},{"action":"insertText","range":{"start":{"row":8,"column":0},"end":{"row":8,"column":48}},"text":"skinny_marker_l = ['x', '+', '1', '2', '3', '4']"}]}],[{"group":"doc","deltas":[{"action":"removeLines","range":{"start":{"row":3,"column":0},"end":{"row":4,"column":0}},"nl":"\n","lines":["# dark_color = itertools.cycle(('green', 'red', 'blue', 'turquoise', 'goldenrod', 'purple', 'gray', 'brown', 'magenta', 'gold', 'olive', 'orangered', 'silver', 'rosybrown', 'plum', 'lightsteelblue', 'lightpink', 'orange', 'darkgray'))"]}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":2,"column":0},"end":{"row":3,"column":0}},"text":"\n"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":3,"column":0},"end":{"row":4,"column":0}},"text":"\n"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":3,"column":0},"end":{"row":3,"column":14}},"text":"mew, ms = 3, 5"}]}]],"redo":[[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":3,"column":0},"end":{"row":3,"column":14}},"text":"mew, ms = 3, 5"}]}]]},"/zedconfig.json":{"scrollTop":0,"scrollLeft":0,"selection":{"start":{"row":9,"column":6},"end":{"row":9,"column":6}},"lastUse":1535392269284,"undo":[[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":6,"column":21},"end":{"row":6,"column":22}},"text":"4"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":6,"column":21},"end":{"row":6,"column":22}},"text":"5"}]}]],"redo":[]}},"window":{"width":1366,"height":687,"top":0,"left":0,"isMaximized":true}}